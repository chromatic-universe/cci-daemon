                                                                     Page 1
                         Data Dictionary Summary Report
===============================================================================

__18CXX   (Unknown Macro)

__apple_build_version__   (Unknown Macro)

__apple_build_version__   (Unknown Macro)

__ARMCC_VERSION   (Unknown Macro)

__ARMCC_VERSION   (Unknown Macro)

__BCC__   (Unknown Macro)

__BORLANDC__   (Unknown Macro)

__BORLANDC__   (Unknown Macro)

__clang__   (Unknown Macro)

__clang__   (Unknown Macro)

__clang_major__   (Unknown Macro)

__clang_major__   (Unknown Macro)

__clang_minor__   (Unknown Macro)

__clang_minor__   (Unknown Macro)

__CLASSIC_C__   (Unknown Macro)

__CODEGEARC_VERSION__   (Unknown Macro)

__CODEGEARC_VERSION__   (Unknown Macro)

__COMO__   (Unknown Macro)

__COMPILER_VER__   (Unknown Macro)

__COMPILER_VER__   (Unknown Macro)

__cplusplus   (Unknown Macro)

__cplusplus   (Unknown Macro)

__CRAYXC   (Unknown Macro)

__CRAYXC   (Unknown Macro)

__CRAYXE   (Unknown Macro)

__CRAYXE   (Unknown Macro)

__CYGWIN__   (Unknown Macro)
                                                                     Page 2
                         Data Dictionary Summary Report
===============================================================================

__CYGWIN__   (Unknown Macro)

__DECC   (Unknown Macro)

__DECCXX   (Unknown Macro)

__FCC_VERSION   (Unknown Macro)

__fcc_version   (Unknown Macro)

__FCC_VERSION   (Unknown Macro)

__fcc_version   (Unknown Macro)

__FUJITSU   (Unknown Macro)

__FUJITSU   (Unknown Macro)

__GNUC__   (Macro)

__GNUC_MINOR__   (Macro)

__GNUC_PATCHLEVEL__   (Unknown Macro)

__GNUC_PATCHLEVEL__   (Unknown Macro)

__has_feature   (Unknown Macro)

__HP_aCC   (Unknown Macro)

__HP_cc   (Unknown Macro)

__IBMC__   (Unknown Macro)

__IBMCPP__   (Unknown Macro)

__ICC   (Unknown Macro)

__ICC   (Unknown Macro)

__INTEL_COMPILER   (Unknown Macro)

__INTEL_COMPILER   (Unknown Macro)

__INTEL_COMPILER_BUILD_DATE   (Unknown Macro)

__INTEL_COMPILER_BUILD_DATE   (Unknown Macro)

__INTEL_COMPILER_UPDATE   (Unknown Macro)

__INTEL_COMPILER_UPDATE   (Unknown Macro)

__linux   (Unknown Macro)
                                                                     Page 3
                         Data Dictionary Summary Report
===============================================================================

__linux   (Unknown Macro)

__linux__   (Macro)

__LINUX__   (Unknown Macro)

__LINUX__   (Unknown Macro)

__PATHCC__   (Unknown Macro)

__PATHCC__   (Unknown Macro)

__PATHCC_PATCHLEVEL__   (Unknown Macro)

__PATHCC_PATCHLEVEL__   (Unknown Macro)

__PGI   (Unknown Macro)

__PGI   (Unknown Macro)

__PGIC_PATCHLEVEL__   (Unknown Macro)

__PGIC_PATCHLEVEL__   (Unknown Macro)

__QNXNTO__   (Unknown Macro)

__QNXNTO__   (Unknown Macro)

__SCO_VERSION__   (Unknown Macro)

__SCO_VERSION__   (Unknown Macro)

__sighandler_t   (Typedef)

__STDC__   (Unknown Macro)

__STDC_VERSION__   (Unknown Macro)

__STDC_VERSION__   (Unknown Macro)

__SUNPRO_C   (Unknown Macro)

__SUNPRO_CC   (Unknown Macro)

__TI_COMPILER_VERSION__   (Unknown Macro)

__TI_COMPILER_VERSION__   (Unknown Macro)

__TINYC__   (Unknown Macro)

__VISUALDSPVERSION__   (Unknown Macro)

__VISUALDSPVERSION__   (Unknown Macro)
                                                                     Page 4
                         Data Dictionary Summary Report
===============================================================================

__WATCOMC__   (Unknown Macro)

__WATCOMC__   (Unknown Macro)

_bt   (Unknown Function)

_CRAYC   (Unknown Macro)

_CRAYC   (Unknown Macro)

_exit   (Function)

_M_ARM   (Unknown Macro)

_M_ARM   (Unknown Macro)

_M_I86   (Unknown Macro)

_M_I86   (Unknown Macro)

_M_IA64   (Unknown Macro)

_M_IA64   (Unknown Macro)

_MSC_BUILD   (Unknown Macro)

_MSC_BUILD   (Unknown Macro)

_MSC_FULL_VER   (Unknown Macro)

_MSC_FULL_VER   (Unknown Macro)

_MSC_VER   (Unknown Macro)

_MSC_VER   (Unknown Macro)

_SC_OPEN_MAX   (Enumerator)

_SC_OPEN_MAX   (Macro)

_SGI_COMPILER_VERSION   (Unknown Macro)

_SGI_COMPILER_VERSION   (Unknown Macro)

_WIN32   (Unknown Macro)

_WIN32   (Unknown Macro)

abi   (Unknown Class)

abi::__cxa_demangle   (Unknown Member Function)
   [cci_stack_trace.cpp, 0]

abort   (Unknown Function)
                                                                     Page 5
                         Data Dictionary Summary Report
===============================================================================

addrlen   (Local Object)
   [cci_stack_trace.cpp, 18]

addrlist   (Local Object)
   [cci_stack_trace.cpp, 15]

ARCHITECTURE_ID   (Macro)
   [CMakeCCompilerId.c, 443]

ARCHITECTURE_ID   (Macro)
   [CMakeCXXCompilerId.cpp, 430]

argc   (Parameter)
   [test_shared_lib.cpp, 34]

argc   (Parameter)
   [cci_daemon_main.cpp, 11]

argc   (Parameter)
   [CMakeCXXCompilerId.cpp, 513]

argc   (Parameter)
   [test_cci_daemon.cpp, 9]

argc   (Parameter)
   [feature_tests.c, 34]

argc   (Parameter)
   [feature_tests.cxx, 405]

argc   (Parameter)
   [CMakeCCompilerId.c, 538]

argv   (Parameter)
   [test_shared_lib.cpp, 34]

argv   (Parameter)
   [CMakeCXXCompilerId.cpp, 513]

argv   (Parameter)
   [cci_daemon_main.cpp, 11]

argv   (Parameter)
   [test_cci_daemon.cpp, 9]

argv   (Parameter)
   [feature_tests.c, 34]

argv   (Parameter)
   [feature_tests.cxx, 405]

argv   (Parameter)
   [CMakeCCompilerId.c, 538]
                                                                     Page 6
                         Data Dictionary Summary Report
===============================================================================

array   (Local Object)
   [cci_daemon.h, 198]

assert   (Unknown Function)

b_ret   (Local Object)
   [cci_daemon.cpp, 216]

b_ret   (Function)
   [cci_daemon.cpp, 269]

b_ret   (Function)
   [cci_daemon.cpp, 188]

b_ret   (Function)
   [cci_daemon.cpp, 154]

backtrace   (Unknown Member Function)

backtrace   (Function)

backtrace_symbols   (Function)

backtrace_symbols_fd   (Function)

begin_name   (Local Object)
   [cci_stack_trace.cpp, 37]

begin_offset   (Local Object)
   [cci_stack_trace.cpp, 37]

buffer   (Local Object)
   [cci_daemon.cpp, 268]

C_DIALECT   (Macro)
   [CMakeCCompilerId.c, 525]

c_str   (Unknown Member Function)

can_open_broker   (Unknown Member Function)

cci_daemon_facade   (Unknown Class)

cci_daemon_facade::bd_max_handles   (Public Object)
   [cci_daemon.cpp, 11]

cci_daemon_facade::bd_no_chdir   (Public Object)
   [cci_daemon.cpp, 7]

cci_daemon_facade::bd_no_close_files   (Public Object)
   [cci_daemon.cpp, 8]

cci_daemon_facade::bd_no_reopen_std_fds   (Public Object)
   [cci_daemon.cpp, 9]
                                                                     Page 7
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_facade::bd_no_umask_0   (Public Object)
   [cci_daemon.cpp, 10]

cci_daemon_facade::buffer_size   (Public Object)
   [cci_daemon.cpp, 12]

cci_daemon_facade::cci_daemon_facade   (Public Function)
   [cci_daemon.cpp, 20]

cci_daemon_facade::close_log   (Public Function)
   [cci_daemon.cpp, 205]

cci_daemon_facade::cpf_cloexec   (Public Object)
   [cci_daemon.cpp, 13]

cci_daemon_facade::daemon_default_exec   (Public Function)
   [cci_daemon.cpp, 334]

cci_daemon_facade::daemonize   (Public Function)
   [cci_daemon.cpp, 37]

cci_daemon_facade::lock_region   (Public Function)
   [cci_daemon.cpp, 246]

cci_daemon_facade::log_message   (Public Function)
   [cci_daemon.cpp, 152]

cci_daemon_facade::log_path   (Public Object)
   [cci_daemon.cpp, 15]

cci_daemon_facade::open_log   (Public Function)
   [cci_daemon.cpp, 185]

cci_daemon_facade::path_config   (Public Object)
   [cci_daemon.cpp, 14]

cci_daemon_facade::path_pid   (Public Object)
   [cci_daemon.cpp, 16]

cci_daemon_facade::read_config_file   (Public Function)
   [cci_daemon.cpp, 211]

cci_daemon_facade::remove_pid   (Public Function)
   [cci_daemon.cpp, 324]

cci_daemon_facade::write_pid   (Public Function)
   [cci_daemon.cpp, 264]

cci_daemon_facade::~cci_daemon_facade   (Public Function)
   [cci_daemon.cpp, 31]

cci_daemon_impl::cci_daemon_facade   (Abstract Class)
   [cci_daemon.h, 63]
                                                                     Page 8
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::_bt   (Protected Function)
   [cci_daemon.h, 96]

cci_daemon_impl::cci_daemon_facade::_btw   (Protected Function)
   [cci_daemon.h, 97]

cci_daemon_impl::cci_daemon_facade::backtrace   (Public Const Function)
   [cci_daemon.h, 114]

cci_daemon_impl::cci_daemon_facade::backtrace   (Public Function)
   [cci_daemon.h, 121]

cci_daemon_impl::cci_daemon_facade::bd_max_handles   (Public Static Object)
   [cci_daemon.h, 145]

cci_daemon_impl::cci_daemon_facade::bd_no_chdir   (Public Static Object)
   [cci_daemon.h, 137]

cci_daemon_impl::cci_daemon_facade::bd_no_close_files   (Public Static Object)
   [cci_daemon.h, 139]

cci_daemon_impl::cci_daemon_facade::bd_no_reopen_std_fds   (Public Static Object)
   [cci_daemon.h, 141]

cci_daemon_impl::cci_daemon_facade::bd_no_umask_0   (Public Static Object)
   [cci_daemon.h, 143]

cci_daemon_impl::cci_daemon_facade::buffer_size   (Public Static Object)
   [cci_daemon.h, 151]

cci_daemon_impl::cci_daemon_facade::cci_daemon_facade   (Explicit Public Function)
   [cci_daemon.h, 70]

cci_daemon_impl::cci_daemon_facade::cci_daemon_facade   (Public Function)
   [cci_daemon.h, 76]

cci_daemon_impl::cci_daemon_facade::close_log   (Protected Virtual Function)
   [cci_daemon.h, 86]

cci_daemon_impl::cci_daemon_facade::config_path   (Public Const Function)
   [cci_daemon.h, 116]

cci_daemon_impl::cci_daemon_facade::config_path   (Public Function)
   [cci_daemon.h, 122]

cci_daemon_impl::cci_daemon_facade::cpf_cloexec   (Public Static Object)
   [cci_daemon.h, 157]

cci_daemon_impl::cci_daemon_facade::daemon_default_exec   (Public Virtual Function)
   [cci_daemon.h, 129]

cci_daemon_impl::cci_daemon_facade::daemonize   (Public Virtual Function)
   [cci_daemon.h, 132]
                                                                     Page 9
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::flags   (Public Const Function)
   [cci_daemon.h, 113]

cci_daemon_impl::cci_daemon_facade::flags   (Public Function)
   [cci_daemon.h, 120]

cci_daemon_impl::cci_daemon_facade::lock_region   (Protected Virtual Function)
   [cci_daemon.h, 91]

cci_daemon_impl::cci_daemon_facade::log_message   (Protected Virtual Function)
   [cci_daemon.h, 85]

cci_daemon_impl::cci_daemon_facade::log_path   (Public Static Object)
   [cci_daemon.h, 149]

cci_daemon_impl::cci_daemon_facade::m_b_opened   (Private Object)
   [cci_daemon.h, 104]

cci_daemon_impl::cci_daemon_facade::m_backtrace   (Private Object)
   [cci_daemon.h, 108]

cci_daemon_impl::cci_daemon_facade::m_dw_flags   (Private Object)
   [cci_daemon.h, 102]

cci_daemon_impl::cci_daemon_facade::m_log_fp   (Private Object)
   [cci_daemon.h, 103]

cci_daemon_impl::cci_daemon_facade::m_service_proc   (Private Object)
   [cci_daemon.h, 105]

cci_daemon_impl::cci_daemon_facade::m_str_conf   (Private Object)
   [cci_daemon.h, 106]

cci_daemon_impl::cci_daemon_facade::m_str_pid_path   (Private Object)
   [cci_daemon.h, 107]

cci_daemon_impl::cci_daemon_facade::open_log   (Protected Virtual Function)
   [cci_daemon.h, 84]

cci_daemon_impl::cci_daemon_facade::operator=   (Public Function)
   [cci_daemon.h, 78]

cci_daemon_impl::cci_daemon_facade::path_config   (Public Static Object)
   [cci_daemon.h, 153]

cci_daemon_impl::cci_daemon_facade::path_pid   (Public Static Object)
   [cci_daemon.h, 155]

cci_daemon_impl::cci_daemon_facade::pid_path   (Public Const Function)
   [cci_daemon.h, 117]

cci_daemon_impl::cci_daemon_facade::pid_path   (Public Function)
   [cci_daemon.h, 123]
                                                                     Page 10
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::proc   (Public Const Function)
   [cci_daemon.h, 115]

cci_daemon_impl::cci_daemon_facade::read_config_file   (Protected Virtual Function)
   [cci_daemon.h, 87]

cci_daemon_impl::cci_daemon_facade::remove_pid   (Protected Virtual Function)
   [cci_daemon.h, 90]

cci_daemon_impl::cci_daemon_facade::write_pid   (Protected Virtual Function)
   [cci_daemon.h, 88]

cci_daemon_impl::cci_daemon_facade::~cci_daemon_facade   (Public Virtual Function)
   [cci_daemon.h, 73]

cci_daemon_impl::cci_daemon_kernel   (Abstract Class)
   [cci_daemon_kernel.h, 26]

cci_daemon_impl::cci_daemon_kernel::cci_daemon_kernel   (Public Function)
   [cci_daemon_kernel.h, 35]

cci_daemon_impl::cci_daemon_kernel::destroy_contexts   (Public Function)
   [cci_daemon_kernel.h, 68]

cci_daemon_impl::cci_daemon_kernel::get_pb_server   (Public Function)
   [cci_daemon_kernel.h, 48]

cci_daemon_impl::cci_daemon_kernel::load_plugin   (Public Function)
   [cci_daemon_kernel.h, 52]

cci_daemon_impl::cci_daemon_kernel::m_loaded_plugins   (Private Object)
   [cci_daemon_kernel.h, 42]

cci_daemon_impl::cci_daemon_kernel::m_pb_server   (Private Object)
   [cci_daemon_kernel.h, 43]

cci_daemon_impl::cci_daemon_kernel::plugin_dictionary   (Private Typedef)
   [cci_daemon_kernel.h, 30]

cci_daemon_impl::cci_daemon_kernel::~cci_daemon_kernel   (Public Pure Virtual Function)
   [cci_daemon_kernel.h, 37]

cci_daemon_impl::cci_daemon_plugin   (Class)
   [cci_daemon_plugin.h, 21]

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin   (Explicit Public Function)
   [cci_daemon_plugin.cpp, 12]

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin   (Public Function)
   [cci_daemon_plugin.cpp, 50]

cci_daemon_impl::cci_daemon_plugin::clear_context   (Public Function)
   [cci_daemon_plugin.h, 58]
                                                                     Page 11
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::cci_daemon_plugin::clear_context_address   (Private Object)
   [cci_daemon_plugin.h, 48]

cci_daemon_impl::cci_daemon_plugin::clear_context_function   (Private Typedef)
   [cci_daemon_plugin.h, 44]

cci_daemon_impl::cci_daemon_plugin::get_engine_version   (Public Const Function)
   [cci_daemon_plugin.h, 53]

cci_daemon_impl::cci_daemon_plugin::get_engine_version_address   (Private Object)
   [cci_daemon_plugin.h, 46]

cci_daemon_impl::cci_daemon_plugin::get_engine_version_function   (Private Typedef)
   [cci_daemon_plugin.h, 42]

cci_daemon_impl::cci_daemon_plugin::m_shared_lib   (Private Object)
   [cci_daemon_plugin.h, 38]

cci_daemon_impl::cci_daemon_plugin::m_str_filename   (Private Object)
   [cci_daemon_plugin.h, 39]

cci_daemon_impl::cci_daemon_plugin::operator=   (Public Function)
   [cci_daemon_plugin.h, 33]

cci_daemon_impl::cci_daemon_plugin::register_plugin   (Public Function)
   [cci_daemon_plugin.h, 56]

cci_daemon_impl::cci_daemon_plugin::register_plugin_address   (Private Object)
   [cci_daemon_plugin.h, 47]

cci_daemon_impl::cci_daemon_plugin::register_plugin_function   (Private Typedef)
   [cci_daemon_plugin.h, 43]

cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin   (Public Virtual Function)
   [cci_daemon_plugin.cpp, 59]

cci_daemon_impl::cci_shared_lib   (Class)
   [cci_shared_lib.h, 27]

cci_daemon_impl::cci_shared_lib   (Function)
   [cci_shared_lib.h, 40]

cci_daemon_impl::cci_shared_lib::cci_shared_lib   (Explicit Public Function)
   [cci_shared_lib.h, 34]

cci_daemon_impl::cci_shared_lib::get_function_pointer   (Unknown Member Function)
   [cci_daemon_plugin.cpp, 0]

cci_daemon_impl::cci_shared_lib::load   (Unknown Member Function)
   [cci_daemon_plugin.cpp, 0]

cci_daemon_impl::cci_shared_lib::unload   (Public Function)
   [cci_daemon_plugin.cpp, 40]
                                                                     Page 12
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::chromatic_terminate   (Static Function)
   [cci_daemon.h, 169]

cci_daemon_impl::clear_context   (Function)
   [ps_kafka_facade.cpp, 52]

cci_daemon_impl::daemon_proc   (Class)
   [cci_daemon.h, 43]

cci_daemon_impl::daemon_proc::dp_change_to_root_dir   (Private Object)
   [cci_daemon.h, 49]

cci_daemon_impl::daemon_proc::dp_clear_file_create_mask   (Private Object)
   [cci_daemon.h, 48]

cci_daemon_impl::daemon_proc::dp_close_all_open_files   (Private Object)
   [cci_daemon.h, 50]

cci_daemon_impl::daemon_proc::dp_daemonized   (Private Object)
   [cci_daemon.h, 52]

cci_daemon_impl::daemon_proc::dp_error   (Private Object)
   [cci_daemon.h, 53]

cci_daemon_impl::daemon_proc::dp_fork_background_proc   (Private Object)
   [cci_daemon.h, 45]

cci_daemon_impl::daemon_proc::dp_fork_no_session_leader   (Private Object)
   [cci_daemon.h, 46]

cci_daemon_impl::daemon_proc::dp_make_session_leader   (Private Object)
   [cci_daemon.h, 47]

cci_daemon_impl::daemon_proc::dp_reopen_streams_dev_null   (Private Object)
   [cci_daemon.h, 51]

cci_daemon_impl::get_ebp   (Function)
   [cci_stack_trace.cpp, 93]

cci_daemon_impl::get_engine_version   (Function)
   [ps_kafka_facade.cpp, 42]

cci_daemon_impl::get_function_pointer   (Static Function Template)
   [cci_shared_lib.h, 86]

cci_daemon_impl::hup_received   (Static Global Object)
   [cci_daemon.h, 182]

cci_daemon_impl::load   (Static Function)
   [cci_shared_lib.h, 57]

cci_daemon_impl::m_str_libpath   (Global Object)
   [cci_shared_lib.h, 47]
                                                                     Page 13
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::operator<<   (Function)
   [cci_daemon.h, 160]

cci_daemon_impl::operator=   (Function)
   [cci_shared_lib.h, 42]

cci_daemon_impl::print_stacktrace   (Function)
   [cci_stack_trace.cpp, 10]

cci_daemon_impl::print_walk_backtrace   (Function)
   [cci_stack_trace.cpp, 102]

cci_daemon_impl::ps_kafka_facade   (Abstract Class)
   [ps_kafka_facade.cpp, 16]

cci_daemon_impl::ps_kafka_facade::can_open_broker   (Public Function)
   [ps_kafka_facade.cpp, 28]

cci_daemon_impl::ps_kafka_facade::open_broker   (Public Function)
   [ps_kafka_facade.cpp, 31]

cci_daemon_impl::ps_kafka_facade::ps_kafka_facade   (Public Function)
   [ps_kafka_facade.cpp, 23]

cci_daemon_impl::ps_kafka_facade::~ps_kafka_facade   (Public Pure Virtual Function)
   [ps_kafka_facade.cpp, 25]

cci_daemon_impl::publish_and_subscribe   (Class)
   [cci_pub_and_sub.h, 14]

cci_daemon_impl::publish_and_subscribe_server   (Class)
   [cci_pub_and_sub.h, 17]

cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer   (Public Function)
   [cci_pub_and_sub.h, 67]

cci_daemon_impl::publish_and_subscribe_server::consumer_list   (Public Typedef)
   [cci_pub_and_sub.h, 48]

cci_daemon_impl::publish_and_subscribe_server::consumers   (Public Function)
   [cci_pub_and_sub.h, 64]

cci_daemon_impl::publish_and_subscribe_server::m_consumers   (Private Object)
   [cci_pub_and_sub.h, 59]

cci_daemon_impl::publish_and_subscribe_server::open_broker   (Public Function)
   [cci_pub_and_sub.h, 72]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer   (Public Abstract Class)
   [cci_pub_and_sub.h, 23]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::can_open_broker   (Public Pure Virtual Function)
   [cci_pub_and_sub.h, 43]
                                                                     Page 14
                         Data Dictionary Summary Report
===============================================================================

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::m_str_moniker   (Private Object)
   [cci_pub_and_sub.h, 37]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::open_broker   (Public Pure Virtual Function)
   [cci_pub_and_sub.h, 44]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::publish_and_subscribe_consumer   (Public Function)
   [cci_pub_and_sub.h, 29]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer   (Public Virtual Function)
   [cci_pub_and_sub.h, 31]

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server   (Public Function)
   [cci_pub_and_sub.h, 50]

cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server   (Public Virtual Function)
   [cci_pub_and_sub.h, 53]

cci_daemon_impl::register_plugin   (Function)
   [ps_kafka_facade.cpp, 43]

cci_daemon_impl::service_proc   (Class)
   [cci_daemon.h, 56]

cci_daemon_impl::service_proc::sp_default_service   (Private Object)
   [cci_daemon.h, 58]

cci_daemon_impl::service_proc::sp_kafka_metadata   (Private Object)
   [cci_daemon.h, 59]

cci_daemon_impl::sighup_handler   (Static Function)
   [cci_daemon.h, 183]

cci_daemon_impl::sigsev_handler   (Static Function)
   [cci_daemon.h, 196]

cci_daemon_impl::sigterm_handler   (Static Function)
   [cci_daemon.h, 187]

cci_daemon_impl::unload   (Static Function)
   [cci_shared_lib.h, 77]

cci_daemon_impl::~cci_shared_lib   (Function)
   [cci_shared_lib.h, 37]

CCI_ENGINE_VERSION   (Macro)
   [cci_daemon_engine.cpp, 1]

cci_handle_t   (Unknown Type)

cci_kernel   (Local Object)
   [test_shared_lib.cpp, 36]

cdp   (Local Object)
   [cci_daemon_kernel.h, 59]
                                                                     Page 15
                         Data Dictionary Summary Report
===============================================================================

cdp   (Parameter)
   [cci_daemon_plugin.cpp, 50]

chdir   (Function)

cl   (Unknown Object)

clear_context   (Unknown Member Function)

clear_context_address   (Function)
   [cci_daemon_plugin.cpp, 15]

clear_context_address   (Global Object)
   [cci_daemon_plugin.cpp, 31]

close   (Function)

closelog   (Function)

COMPILER_ID   (Macro)
   [CMakeCCompilerId.c, 190]

COMPILER_ID   (Macro)
   [CMakeCXXCompilerId.cpp, 184]

COMPILER_VERSION_MAJOR   (Macro)
   [CMakeCCompilerId.c, 191]

COMPILER_VERSION_MAJOR   (Macro)
   [CMakeCXXCompilerId.cpp, 185]

COMPILER_VERSION_MINOR   (Macro)
   [CMakeCCompilerId.c, 193]

COMPILER_VERSION_MINOR   (Macro)
   [CMakeCXXCompilerId.cpp, 187]

COMPILER_VERSION_PATCH   (Unknown Macro)

COMPILER_VERSION_PATCH   (Unknown Macro)

COMPILER_VERSION_TWEAK   (Unknown Macro)

COMPILER_VERSION_TWEAK   (Unknown Macro)

config   (Parameter)
   [cci_pub_and_sub.h, 72]

config   (Parameter)
   [cci_daemon_kernel.h, 52]

config   (Parameter)
   [ps_kafka_facade.cpp, 28]
                                                                     Page 16
                         Data Dictionary Summary Report
===============================================================================

config   (Parameter)
   [ps_kafka_facade.cpp, 31]

config_path   (Parameter)
   [cci_daemon.cpp, 211]

config_path   (Unknown Function)

const   (Unknown Macro)

consumer   (Parameter)
   [cci_pub_and_sub.h, 67]

cxx_aggregate_nsdmi   (Unknown Macro)

cxx_alias_templates   (Unknown Macro)

cxx_alignas   (Unknown Macro)

cxx_attributes   (Unknown Macro)

cxx_auto_type   (Unknown Macro)

cxx_binary_literals   (Unknown Macro)

cxx_constexpr   (Unknown Macro)

cxx_contextual_conversions   (Unknown Macro)

cxx_decltype   (Unknown Macro)

cxx_decltype_incomplete_return_types   (Unknown Macro)

cxx_default_function_template_args   (Unknown Macro)

cxx_defaulted_functions   (Unknown Macro)

cxx_delegating_constructors   (Unknown Macro)

cxx_deleted_functions   (Unknown Macro)

cxx_explicit_conversions   (Unknown Macro)

cxx_generalized_initializers   (Unknown Macro)

cxx_inheriting_constructors   (Unknown Macro)

cxx_init_captures   (Unknown Macro)

cxx_lambdas   (Unknown Macro)

cxx_local_type_template_args   (Unknown Macro)

cxx_noexcept   (Unknown Macro)
                                                                     Page 17
                         Data Dictionary Summary Report
===============================================================================

cxx_nonstatic_member_init   (Unknown Macro)

cxx_nullptr   (Unknown Macro)

cxx_override_control   (Unknown Macro)

cxx_range_for   (Unknown Macro)

cxx_raw_string_literals   (Unknown Macro)

cxx_reference_qualified_functions   (Unknown Macro)

cxx_relaxed_constexpr   (Unknown Macro)

cxx_return_type_deduction   (Unknown Macro)

cxx_rvalue_references   (Unknown Macro)

cxx_static_assert   (Unknown Macro)

cxx_strong_enums   (Unknown Macro)

cxx_thread_local   (Unknown Macro)

cxx_trailing_return   (Unknown Macro)

cxx_unicode_literals   (Unknown Macro)

cxx_unrestricted_unions   (Unknown Macro)

cxx_user_literals   (Unknown Macro)

cxx_variable_templates   (Unknown Macro)

cxx_variadic_templates   (Unknown Macro)

daemon_default_exec   (Unknown Member Function)

daemon_proc   (Unknown Type)

daemonize   (Unknown Member Function)

DEC   (Macro)
   [CMakeCCompilerId.c, 447]

DEC   (Macro)
   [CMakeCXXCompilerId.cpp, 434]

destroy_contexts   (Unknown Member Function)

df   (Local Object)
   [cci_daemon_main.cpp, 13]

df   (Parameter)
   [cci_daemon.h, 160]
                                                                     Page 18
                         Data Dictionary Summary Report
===============================================================================

Dl_info   (Unknown Type)

dladdr   (Unknown Function)

dlclose   (Function)

dlerror   (Function)

dli_sname   (Unknown Member Object)

dlip   (Local Object)
   [cci_stack_trace.cpp, 106]

dlopen   (Function)

dlsym   (Function)

dp   (Local Object)
   [cci_daemon.cpp, 41]

dp_change_to_root_dir   (Unknown Member Object)

dp_clear_file_create_mask   (Unknown Member Object)

dp_close_all_open_files   (Unknown Member Object)

dp_daemonized   (Unknown Member Object)

dp_error   (Unknown Member Object)

dp_fork_background_proc   (Unknown Member Object)

dp_fork_no_session_leader   (Unknown Member Object)

dp_make_session_leader   (Unknown Member Object)

dp_reopen_streams_dev_null   (Unknown Member Object)

dummy   (Parameter)
   [cci_stack_trace.cpp, 93]

dummy   (Local Object)
   [cci_stack_trace.cpp, 104]

dup2   (Function)

dw_flags   (Parameter)
   [cci_daemon.h, 120]

dw_flags   (Parameter)
   [cci_daemon.cpp, 334]

EACCES   (Unknown Object)
                                                                     Page 19
                         Data Dictionary Summary Report
===============================================================================

EAGAIN   (Unknown Object)

ebp   (Local Object)
   [cci_stack_trace.cpp, 95]

ebp   (Local Object)
   [cci_stack_trace.cpp, 108]

elem   (Local Object)
   [cci_pub_and_sub.h, 74]

elem   (Local Object)
   [cci_daemon_kernel.h, 73]

elem   (Local Object)
   [ps_kafka_facade.cpp, 59]

enable_shared_from_this   (Unknown Class)

end   (Unknown Member Function)

end_offset   (Local Object)
   [cci_stack_trace.cpp, 37]

errno   (Unknown Object)

error   (Local Object)
   [cci_shared_lib.h, 98]

exception   (Local Object)
   [test_shared_lib.cpp, 26]

exit   (Unknown Function)

EXIT_FAILURE   (Unknown Object)

EXIT_SUCCESS   (Unknown Object)

F_GETFD   (Macro)

F_SETFD   (Macro)

F_SETLK   (Macro)

F_WRLCK   (Macro)

fclose   (Unknown Function)

fcntl   (Function)

fd   (Local Object)
   [cci_daemon.cpp, 39]

fd   (Parameter)
   [cci_daemon.cpp, 246]
                                                                     Page 20
                         Data Dictionary Summary Report
===============================================================================

fd   (Local Object)
   [cci_daemon.cpp, 267]

FD_CLOEXEC   (Macro)

features   (Global Object)
   [feature_tests.c, 2]

features   (Global Object)
   [feature_tests.cxx, 2]

fgets   (Unknown Function)

FILE   (Unknown Type)

file_ptr   (Unknown Type)

filename   (Parameter)
   [cci_daemon_plugin.cpp, 12]

filename   (Unknown Object)

find   (Unknown Member Function)

first   (Unknown Member Object)

fl   (Local Object)
   [cci_daemon.cpp, 252]

flags   (Unknown Function)

flags   (Parameter)
   [cci_daemon.cpp, 265]

flock   (Struct)

flock::l_len   (Unknown Member Object)

flock::l_start   (Unknown Member Object)

flock::l_type   (Unknown Member Object)

flock::l_whence   (Unknown Member Object)

fn   (Local Object)
   [cci_daemon.h, 201]

fopen   (Unknown Function)

fork   (Function)

fp   (Local Object)
   [cci_daemon.cpp, 213]
                                                                     Page 21
                         Data Dictionary Summary Report
===============================================================================

fprintf   (Unknown Function)

frame   (Local Object)
   [cci_stack_trace.cpp, 105]

free   (Unknown Function)

ftruncate   (Function)

funcname   (Local Object)
   [cci_stack_trace.cpp, 31]

funcnamesize   (Local Object)
   [cci_stack_trace.cpp, 30]

function_address   (Local Object)
   [cci_shared_lib.h, 94]

function_name   (Parameter)
   [cci_shared_lib.h, 87]

get   (Unknown Member Function)

get_engine_version   (Unknown Member Function)

get_engine_version_address   (Function)
   [cci_daemon_plugin.cpp, 13]

get_engine_version_address   (Global Object)
   [cci_daemon_plugin.cpp, 23]

getenv   (Unknown Function)

getpid   (Function)

HEX   (Macro)
   [CMakeCCompilerId.c, 458]

HEX   (Macro)
   [CMakeCXXCompilerId.cpp, 445]

i   (Local Object)
   [cci_stack_trace.cpp, 35]

ID_VOID_MAIN   (Unknown Macro)

identity   (Local Object)
   [cci_daemon_main.cpp, 19]

identity   (Local Object)
   [cci_daemon.cpp, 338]

info_arch   (Global Object)
   [CMakeCCompilerId.c, 509]
                                                                     Page 22
                         Data Dictionary Summary Report
===============================================================================

info_arch   (Global Object)
   [CMakeCXXCompilerId.cpp, 496]

info_compiler   (Global Object)
   [CMakeCCompilerId.c, 283]

info_compiler   (Global Object)
   [CMakeCXXCompilerId.cpp, 270]

info_language_dialect_default   (Global Object)
   [CMakeCXXCompilerId.cpp, 501]

info_language_dialect_default   (Global Object)
   [CMakeCCompilerId.c, 527]

info_platform   (Global Object)
   [CMakeCCompilerId.c, 508]

info_platform   (Global Object)
   [CMakeCXXCompilerId.cpp, 495]

info_version   (Global Object)
   [CMakeCCompilerId.c, 470]

info_version   (Global Object)
   [CMakeCXXCompilerId.cpp, 457]

InitGoogleTest   (Unknown Function)

insert   (Unknown Member Function)

iter   (Local Object)
   [cci_daemon_kernel.h, 60]

kernel   (Parameter)
   [ps_kafka_facade.cpp, 43]

kernel   (Parameter)
   [ps_kafka_facade.cpp, 52]

kernel   (Parameter)
   [cci_daemon_plugin.h, 56]

kernel   (Parameter)
   [cci_daemon_plugin.h, 58]

len   (Parameter)
   [cci_daemon.cpp, 250]

lib   (Parameter)
   [cci_shared_lib.h, 57]

linux   (Macro)
                                                                     Page 23
                         Data Dictionary Summary Report
===============================================================================

load_plugin   (Unknown Member Function)

loc   (Local Object)
   [cci_daemon.cpp, 162]

localtime   (Unknown Function)

LOG_ERR   (Macro)

LOG_INFO   (Macro)

log_p   (Function)
   [cci_daemon.h, 200]

LOG_PID   (Macro)

LOG_USER   (Macro)

m   (Local Object)
   [cci_daemon.cpp, 187]

m_b_opened   (Function)
   [cci_daemon.cpp, 21]

m_backtrace   (Function)
   [cci_daemon.cpp, 25]

m_log_fp   (Unknown Object)

m_service_proc   (Function)
   [cci_daemon.cpp, 22]

m_shared_lib   (Global Object)
   [cci_daemon_plugin.cpp, 18]

m_str_conf   (Function)
   [cci_daemon.cpp, 23]

m_str_filename   (Function)
   [cci_daemon_plugin.cpp, 12]

m_str_pid_path   (Function)
   [cci_daemon.cpp, 24]

main   (Function)
   [CMakeCXXCompilerId.cpp, 513]

main   (Function)
   [feature_tests.cxx, 405]

main   (Function)
   [test_cci_daemon.cpp, 9]

main   (Function)
   [test_shared_lib.cpp, 34]
                                                                     Page 24
                         Data Dictionary Summary Report
===============================================================================

main   (Function)
   [cci_daemon_main.cpp, 11]

main   (Function)
   [feature_tests.c, 34]

main   (Function)
   [CMakeCCompilerId.c, 538]

malloc   (Unknown Function)

max_frames   (Parameter)
   [cci_stack_trace.cpp, 10]

maxfd   (Local Object)
   [cci_daemon.cpp, 39]

mode_t   (Typedef)

msg   (Parameter)
   [cci_daemon.cpp, 152]

msg   (Local Object)
   [cci_daemon.cpp, 346]

msg   (Local Object)
   [cci_daemon.cpp, 393]

NULL   (Unknown Object)

nullptr   (Unknown Object)

O_CREAT   (Macro)

O_RDWR   (Macro)

open   (Function)

open_broker   (Unknown Member Function)

openlog   (Function)

operator<<   (Unknown Function)

options   (Local Object)
   [cci_daemon_main.cpp, 17]

options   (Local Object)
   [cci_daemon.cpp, 336]

ostr   (Unknown Object)

ostr   (Parameter)
   [cci_daemon.h, 160]
                                                                     Page 25
                         Data Dictionary Summary Report
===============================================================================

out   (Parameter)
   [cci_stack_trace.cpp, 10]

out   (Parameter)
   [cci_stack_trace.cpp, 102]

p   (Local Object)
   [cci_stack_trace.cpp, 41]

params   (Parameter)
   [cci_daemon.cpp, 334]

pas   (Local Object)
   [ps_kafka_facade.cpp, 47]

pas_consumer   (Unknown Class)

pas_consumer   (Unknown Type)

pas_server   (Unknown Class)

pas_server::consumer_list   (Unknown Member Object)
   [ps_kafka_facade.cpp, 0]

path   (Parameter)
   [cci_daemon.h, 122]

path   (Parameter)
   [cci_daemon.h, 123]

path_with_extension   (Local Object)
   [cci_shared_lib.h, 64]

pbs   (Parameter)
   [test_shared_lib.cpp, 16]

pid_file   (Parameter)
   [cci_daemon.cpp, 264]

pid_file   (Parameter)
   [cci_daemon.cpp, 324]

pid_path   (Unknown Function)

PLATFORM_ID   (Macro)
   [CMakeCCompilerId.c, 301]

PLATFORM_ID   (Macro)
   [CMakeCXXCompilerId.cpp, 288]

push_back   (Unknown Member Function)

register_plugin   (Unknown Member Function)
                                                                     Page 26
                         Data Dictionary Summary Report
===============================================================================

register_plugin_address   (Function)
   [cci_daemon_plugin.cpp, 14]

register_plugin_address   (Global Object)
   [cci_daemon_plugin.cpp, 27]

require   (Local Object)
   [CMakeCXXCompilerId.cpp, 515]

require   (Local Object)
   [CMakeCCompilerId.c, 541]

ret   (Local Object)
   [cci_daemon.cpp, 96]

ret   (Local Object)
   [cci_stack_trace.cpp, 65]

ret   (Local Object)
   [cci_stack_trace.cpp, 109]

RTLD_NOW   (Macro)

RUN_ALL_TESTS   (Unknown Function)

s   (Local Object)
   [cci_daemon.h, 172]

S_IRUSR   (Macro)

S_IWUSR   (Macro)

sa   (Local Object)
   [cci_daemon.cpp, 357]

sa_handler   (Macro)

sa_handler   (Unknown Member Object)

SA_RESTART   (Macro)

second   (Unknown Member Object)

SEEK_SET   (Macro)

service_proc   (Unknown Class)

service_proc::sp_default_service   (Unknown Member Object)
   [cci_daemon.cpp, 0]

setbuf   (Unknown Function)

setsid   (Function)
                                                                     Page 27
                         Data Dictionary Summary Report
===============================================================================

shared_handle   (Parameter)
   [cci_shared_lib.h, 77]

shared_handle   (Parameter)
   [cci_shared_lib.h, 86]

shared_object   (Local Object)
   [cci_shared_lib.h, 65]

sig_atomic_t   (Typedef)

SIG_ERR   (Macro)

sigaction   (Struct)

sigaction   (Function)

sigaction::__sigaction_handler   (Unknown Member Object)

sigaction::sa_flags   (Unknown Member Object)

sigaction::sa_mask   (Unknown Member Object)

sigemptyset   (Function)

SIGHUP   (Macro)

sighup_handler   (Unknown Object)

signal   (Parameter)
   [cci_daemon.h, 183]

signal   (Parameter)
   [cci_daemon.h, 187]

signal   (Parameter)
   [cci_daemon.h, 196]

signal   (Function)

SIGTERM   (Macro)

sigterm_handler   (Unknown Object)

SIMULATE_ID   (Unknown Macro)

SIMULATE_ID   (Unknown Macro)

SIMULATE_VERSION_MAJOR   (Unknown Macro)

SIMULATE_VERSION_MAJOR   (Unknown Macro)

SIMULATE_VERSION_MINOR   (Unknown Macro)
                                                                     Page 28
                         Data Dictionary Summary Report
===============================================================================

SIMULATE_VERSION_MINOR   (Unknown Macro)

SIMULATE_VERSION_PATCH   (Unknown Macro)

SIMULATE_VERSION_PATCH   (Unknown Macro)

SIMULATE_VERSION_TWEAK   (Unknown Macro)

SIMULATE_VERSION_TWEAK   (Unknown Macro)

size   (Local Object)
   [cci_daemon.h, 199]

size_t   (Unknown Type)

sleep   (Function)

sleep_time   (Local Object)
   [cci_daemon.cpp, 355]

snprintf   (Unknown Function)

start   (Parameter)
   [cci_daemon.cpp, 249]

status   (Local Object)
   [cci_stack_trace.cpp, 64]

std   (Unknown Class)

std::cerr   (Public Object)
   [cci_daemon_plugin.cpp, 19]

std::cerr   (Public Object)
   [cci_daemon_plugin.cpp, 26]

std::cerr   (Public Object)
   [cci_daemon_plugin.cpp, 30]

std::cerr   (Public Object)
   [cci_daemon_plugin.cpp, 34]

std::cerr   (Public Object)
   [cci_daemon_plugin.cpp, 42]

std::cout   (Unknown Member Object)
   [test_shared_lib.cpp, 0]

std::endl   (Unknown Member Object)
   [test_shared_lib.cpp, 0]

std::ends   (Unknown Member Object)
   [cci_shared_lib.h, 0]
                                                                     Page 29
                         Data Dictionary Summary Report
===============================================================================

std::exception   (Unknown Member Type)
   [test_shared_lib.cpp, 0]

std::list   (Unknown Member Type)
   [cci_pub_and_sub.h, 0]

std::make_pair   (Unknown Member Function)
   [cci_daemon_kernel.h, 0]

std::make_unique   (Unknown Member Function)
   [ps_kafka_facade.cpp, 0]

std::map   (Unknown Member Type)
   [cci_daemon_kernel.h, 0]

std::ostream   (Unknown Member Type)
   [cci_daemon.h, 0]

std::ostringstream   (Unknown Member Object)
   [cci_shared_lib.h, 0]

std::remove   (Unknown Member Function)
   [cci_daemon.cpp, 0]

std::runtime_error   (Unknown Member Function)
   [cci_shared_lib.h, 0]

std::set_terminate   (Unknown Member Function)
   [cci_daemon_main.cpp, 0]

std::string   (Unknown Member Type)
   [cci_shared_lib.h, 0]

std::unique_ptr   (Unknown Member Type)
   [cci_pub_and_sub.h, 0]

STDERR_FILENO   (Macro)

STDIN_FILENO   (Macro)

STDOUT_FILENO   (Macro)

str   (Unknown Member Function)

str   (Local Object)
   [cci_daemon_main.cpp, 16]

str   (Local Object)
   [cci_daemon.cpp, 214]

strftime   (Unknown Function)

STRINGIFY   (Macro)
   [CMakeCCompilerId.c, 297]
                                                                     Page 30
                         Data Dictionary Summary Report
===============================================================================

STRINGIFY   (Macro)
   [CMakeCXXCompilerId.cpp, 284]

STRINGIFY_HELPER   (Macro)
   [CMakeCCompilerId.c, 296]

STRINGIFY_HELPER   (Macro)
   [CMakeCXXCompilerId.cpp, 283]

strlen   (Function)

symbollist   (Local Object)
   [cci_stack_trace.cpp, 27]

sysconf   (Function)

syslog   (Function)

t   (Local Object)
   [cci_daemon.cpp, 161]

T_signature   (Template Parameter)
   [cci_shared_lib.h, 85]

testing   (Unknown Class)

time   (Unknown Function)

time_t   (Typedef)

timestamp   (Local Object)
   [cci_daemon.cpp, 160]

TIMESTAMP_FMT   (Local Object)
   [cci_daemon.cpp, 158]

tm   (Struct)

trace   (Parameter)
   [cci_daemon.h, 121]

try_open_server   (Function)
   [test_shared_lib.cpp, 16]

TS_BUF_SIZE   (Macro)

type   (Parameter)
   [cci_daemon.cpp, 247]

umask   (Function)

unslept   (Local Object)
   [cci_daemon.cpp, 356]
                                                                     Page 31
                         Data Dictionary Summary Report
===============================================================================

volatile   (Unknown Macro)

what   (Unknown Member Function)

whence   (Parameter)
   [cci_daemon.cpp, 248]

write   (Function)
                                                                     Page 32
                              File Contents Report
===============================================================================

cci_daemon.cpp
  Global Functions
    b_ret
    b_ret
    b_ret
    m_b_opened
    m_backtrace
    m_service_proc
    m_str_conf
    m_str_pid_path
  Methods
    cci_daemon_facade::cci_daemon_facade
    cci_daemon_facade::close_log
    cci_daemon_facade::daemon_default_exec
    cci_daemon_facade::daemonize
    cci_daemon_facade::lock_region
    cci_daemon_facade::log_message
    cci_daemon_facade::open_log
    cci_daemon_facade::read_config_file
    cci_daemon_facade::remove_pid
    cci_daemon_facade::write_pid
    cci_daemon_facade::~cci_daemon_facade

cci_daemon.h
  Functions
    cci_daemon_impl::cci_daemon_facade::_bt
    cci_daemon_impl::cci_daemon_facade::_btw
    cci_daemon_impl::cci_daemon_facade::backtrace
    cci_daemon_impl::cci_daemon_facade::backtrace
    cci_daemon_impl::cci_daemon_facade::cci_daemon_facade
    cci_daemon_impl::cci_daemon_facade::cci_daemon_facade
    cci_daemon_impl::cci_daemon_facade::close_log
    cci_daemon_impl::cci_daemon_facade::config_path
    cci_daemon_impl::cci_daemon_facade::config_path
    cci_daemon_impl::cci_daemon_facade::daemon_default_exec
    cci_daemon_impl::cci_daemon_facade::daemonize
    cci_daemon_impl::cci_daemon_facade::flags
    cci_daemon_impl::cci_daemon_facade::flags
    cci_daemon_impl::cci_daemon_facade::lock_region
    cci_daemon_impl::cci_daemon_facade::log_message
    cci_daemon_impl::cci_daemon_facade::open_log
    cci_daemon_impl::cci_daemon_facade::operator=
    cci_daemon_impl::cci_daemon_facade::pid_path
    cci_daemon_impl::cci_daemon_facade::pid_path
    cci_daemon_impl::cci_daemon_facade::proc
    cci_daemon_impl::cci_daemon_facade::read_config_file
    cci_daemon_impl::cci_daemon_facade::remove_pid
    cci_daemon_impl::cci_daemon_facade::write_pid
    cci_daemon_impl::cci_daemon_facade::~cci_daemon_facade
    cci_daemon_impl::operator<<
    log_p

cci_daemon_engine.cpp

cci_daemon_generic.h

cci_daemon_kernel.h
  Functions
    cci_daemon_impl::cci_daemon_kernel::cci_daemon_kernel
    cci_daemon_impl::cci_daemon_kernel::destroy_contexts
    cci_daemon_impl::cci_daemon_kernel::get_pb_server
    cci_daemon_impl::cci_daemon_kernel::load_plugin
    cci_daemon_impl::cci_daemon_kernel::~cci_daemon_kernel
    std::make_pair

cci_daemon_main.cpp
  Global Functions
    main

cci_daemon_plugin.cpp
  Global Variables
    clear_context_address
    get_engine_version_address
    m_shared_lib
    register_plugin_address
  Global Functions
    clear_context_address
    get_engine_version_address
    m_str_filename
    register_plugin_address
  Methods
    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin

cci_daemon_plugin.h
  Functions
    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    cci_daemon_impl::cci_daemon_plugin::clear_context
    cci_daemon_impl::cci_daemon_plugin::get_engine_version
    cci_daemon_impl::cci_daemon_plugin::operator=
    cci_daemon_impl::cci_daemon_plugin::register_plugin
    cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin

cci_pub_and_sub.h
  Functions
    cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer
    cci_daemon_impl::publish_and_subscribe_server::consumers
    cci_daemon_impl::publish_and_subscribe_server::open_broker
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::can_open_broker
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::open_broker
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::publish_and_subscribe_consumer
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server
    cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server

cci_shared_lib.h
  Functions
    cci_daemon_impl::cci_shared_lib
    cci_daemon_impl::cci_shared_lib::cci_shared_lib
    cci_daemon_impl::operator=
    cci_daemon_impl::~cci_shared_lib
    std::runtime_error

cci_stack_trace.cpp
  Global Functions
    cci_daemon_impl::get_ebp
    cci_daemon_impl::print_stacktrace
    cci_daemon_impl::print_walk_backtrace

cci_stack_trace.h
  Functions
    cci_daemon_impl::get_ebp
    cci_daemon_impl::print_stacktrace
    cci_daemon_impl::print_walk_backtrace

cci_test_daemon.h

CMakeCCompilerId.c
  Global Variables
    info_arch
    info_compiler
    info_language_dialect_default
    info_platform
    info_version
  Global Functions
    main

CMakeCXXCompilerId.cpp
  Global Variables
    info_arch
    info_compiler
    info_language_dialect_default
    info_platform
    info_version
  Global Functions
    main

feature_tests.c
  Global Variables
    features
  Global Functions
    main

feature_tests.cxx
  Global Variables
    features
  Global Functions
    main

ps_kafka_facade.cpp
  Global Functions
    cci_daemon_impl::clear_context
    cci_daemon_impl::get_engine_version
    cci_daemon_impl::register_plugin
  Methods
    cci_daemon_impl::ps_kafka_facade::can_open_broker
    cci_daemon_impl::ps_kafka_facade::open_broker

test_cci_daemon.cpp
  Global Functions
    main

test_shared_lib.cpp
  Global Functions
    main
    try_open_server
                                                                     Page 33
                      Program Unit Cross Reference Report
===============================================================================

_bt   (Unknown Function)
    Call [cci_daemon.cpp, 33]        cci_daemon_facade::~cci_daemon_facade
    Call [cci_daemon.cpp, 178]       cci_daemon_facade::log_message
    Call [cci_daemon.cpp, 239]       cci_daemon_facade::read_config_file
    Call [cci_daemon.cpp, 318]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 327]       cci_daemon_facade::remove_pid

_exit   (Function)
  Declared as: void
    Call [cci_daemon.cpp, 59]        cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 81]        cci_daemon_facade::daemonize

abi::__cxa_demangle   (Unknown Member Function)
    Declare [cci_stack_trace.cpp, 0]   abi
    Call [cci_stack_trace.cpp, 65]   cci_daemon_impl::print_stacktrace

abort   (Unknown Function)
    Call [cci_daemon.h, 175]         cci_daemon_impl::chromatic_terminate

assert   (Unknown Function)
    Call [cci_shared_lib.h, 92]      cci_daemon_impl::get_function_pointer

b_ret   (Function)
  Declared as: bool
    Define [cci_daemon.cpp, 269]     cci_daemon_facade::write_pid

b_ret   (Function)
  Declared as: bool
    Define [cci_daemon.cpp, 188]     cci_daemon_facade::open_log

b_ret   (Function)
  Declared as: bool
    Define [cci_daemon.cpp, 154]     cci_daemon_facade::log_message
    Return [cci_daemon.cpp, 180]     cci_daemon_facade::log_message
    Return [cci_daemon.cpp, 200]     cci_daemon_facade::open_log
    Pointer [cci_daemon.cpp, 304]    cci_daemon_facade::write_pid
    Return [cci_daemon.cpp, 320]     cci_daemon_facade::write_pid

backtrace   (Unknown Member Function)
    Call [cci_daemon_main.cpp, 14]   main

backtrace   (Function)
  Declared as: int
    Call [cci_daemon.h, 204]         cci_daemon_impl::sigsev_handler
    Call [cci_stack_trace.cpp, 18]   cci_daemon_impl::print_stacktrace

backtrace_symbols   (Function)
  Declared as: char **
    Call [cci_stack_trace.cpp, 27]   cci_daemon_impl::print_stacktrace

backtrace_symbols_fd   (Function)
  Declared as: void
    Call [cci_daemon.h, 210]         cci_daemon_impl::sigsev_handler
                                                                     Page 34
                      Program Unit Cross Reference Report
===============================================================================

c_str   (Unknown Member Function)
    Call [cci_shared_lib.h, 65]      cci_daemon_impl::load
    Call [cci_shared_lib.h, 95]      cci_daemon_impl::get_function_pointer
    Call [cci_daemon.cpp, 172]       cci_daemon_facade::log_message
    Call [cci_daemon.cpp, 191]       cci_daemon_facade::open_log
    Call [cci_daemon.cpp, 218]       cci_daemon_facade::read_config_file
    Call [cci_daemon.cpp, 271]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 329]       cci_daemon_facade::remove_pid

can_open_broker   (Unknown Member Function)
    Call [cci_pub_and_sub.h, 76]     cci_daemon_impl::publish_and_subscribe_server::open_broker

cci_daemon_facade::cci_daemon_facade   (Public Function)
    Define [cci_daemon.cpp, 20]      cci_daemon_facade

cci_daemon_facade::close_log   (Public Function)
  Declared as: void
    Define [cci_daemon.cpp, 205]     cci_daemon_facade
    Call [cci_daemon.cpp, 386]       cci_daemon_facade::daemon_default_exec

cci_daemon_facade::daemon_default_exec   (Public Function)
  Declared as: int
    Define [cci_daemon.cpp, 334]     cci_daemon_facade

cci_daemon_facade::daemonize   (Public Function)
  Declared as: int
    Define [cci_daemon.cpp, 37]      cci_daemon_facade

cci_daemon_facade::lock_region   (Public Function)
  Declared as: int
    Define [cci_daemon.cpp, 246]     cci_daemon_facade
    Call [cci_daemon.cpp, 290]       cci_daemon_facade::write_pid

cci_daemon_facade::log_message   (Public Function)
  Declared as: bool
    Define [cci_daemon.cpp, 152]     cci_daemon_facade
    Call [cci_daemon.cpp, 234]       cci_daemon_facade::read_config_file
    Call [cci_daemon.cpp, 273]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 282]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 287]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 294]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 295]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 299]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 306]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 313]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 347]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 368]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 394]       cci_daemon_facade::daemon_default_exec

cci_daemon_facade::open_log   (Public Function)
  Declared as: bool
    Define [cci_daemon.cpp, 185]     cci_daemon_facade
    Call [cci_daemon.cpp, 343]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 387]       cci_daemon_facade::daemon_default_exec
                                                                     Page 35
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_facade::read_config_file   (Public Function)
  Declared as: bool
    Define [cci_daemon.cpp, 211]     cci_daemon_facade
    Call [cci_daemon.cpp, 348]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 388]       cci_daemon_facade::daemon_default_exec

cci_daemon_facade::remove_pid   (Public Function)
  Declared as: bool
    Define [cci_daemon.cpp, 324]     cci_daemon_facade
    Call [cci_daemon.cpp, 401]       cci_daemon_facade::daemon_default_exec

cci_daemon_facade::write_pid   (Public Function)
  Declared as: bool
    Define [cci_daemon.cpp, 264]     cci_daemon_facade
    Call [cci_daemon.cpp, 367]       cci_daemon_facade::daemon_default_exec

cci_daemon_facade::~cci_daemon_facade   (Public Function)
    Define [cci_daemon.cpp, 31]      cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::_bt   (Protected Function)
  Declared as: void
    Define [cci_daemon.h, 96]        cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::_btw   (Protected Function)
  Declared as: void
    Define [cci_daemon.h, 97]        cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::backtrace   (Public Const Function)
  Declared as: constexpr unsigned long
    Define [cci_daemon.h, 114]       cci_daemon_impl::cci_daemon_facade
    Call [cci_daemon.h, 96]          cci_daemon_impl::cci_daemon_facade::_bt
    Call [cci_daemon.h, 97]          cci_daemon_impl::cci_daemon_facade::_btw

cci_daemon_impl::cci_daemon_facade::backtrace   (Public Function)
  Declared as: void
    Define [cci_daemon.h, 121]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::cci_daemon_facade   (Explicit Public Function)
    Declare [cci_daemon.h, 70]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::cci_daemon_facade   (Public Function)
    Declare [cci_daemon.h, 76]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::close_log   (Protected Virtual Function)
  Declared as: void
    Declare [cci_daemon.h, 86]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::config_path   (Public Const Function)
  Declared as: std::string
    Define [cci_daemon.h, 116]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::config_path   (Public Function)
  Declared as: void
    Define [cci_daemon.h, 122]       cci_daemon_impl::cci_daemon_facade
                                                                     Page 36
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::daemon_default_exec   (Public Virtual Function)
  Declared as: int
    Declare [cci_daemon.h, 129]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::daemonize   (Public Virtual Function)
  Declared as: int
    Declare [cci_daemon.h, 132]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::flags   (Public Const Function)
  Declared as: constexpr unsigned long
    Define [cci_daemon.h, 113]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::flags   (Public Function)
  Declared as: void
    Define [cci_daemon.h, 120]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::lock_region   (Protected Virtual Function)
  Declared as: int
    Declare [cci_daemon.h, 91]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::log_message   (Protected Virtual Function)
  Declared as: bool
    Declare [cci_daemon.h, 85]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::open_log   (Protected Virtual Function)
  Declared as: bool
    Declare [cci_daemon.h, 84]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::operator=   (Public Function)
  Declared as: cci_daemon_facade &
    Declare [cci_daemon.h, 78]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::pid_path   (Public Const Function)
  Declared as: std::string
    Define [cci_daemon.h, 117]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::pid_path   (Public Function)
  Declared as: void
    Define [cci_daemon.h, 123]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::proc   (Public Const Function)
  Declared as: service_proc
    Define [cci_daemon.h, 115]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::read_config_file   (Protected Virtual Function)
  Declared as: bool
    Declare [cci_daemon.h, 87]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::remove_pid   (Protected Virtual Function)
  Declared as: bool
    Declare [cci_daemon.h, 90]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::write_pid   (Protected Virtual Function)
  Declared as: bool
    Declare [cci_daemon.h, 88]       cci_daemon_impl::cci_daemon_facade
                                                                     Page 37
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::~cci_daemon_facade   (Public Virtual Function)
    Declare [cci_daemon.h, 73]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_kernel::cci_daemon_kernel   (Public Function)
    Declare [cci_daemon_kernel.h, 35]   cci_daemon_impl::cci_daemon_kernel

cci_daemon_impl::cci_daemon_kernel::destroy_contexts   (Public Function)
  Declared as: void
    Define [cci_daemon_kernel.h, 68]   cci_daemon_impl::cci_daemon_kernel

cci_daemon_impl::cci_daemon_kernel::get_pb_server   (Public Function)
  Declared as: publish_and_subscribe_server &
    Define [cci_daemon_kernel.h, 48]   cci_daemon_impl::cci_daemon_kernel
    Call [ps_kafka_facade.cpp, 48]   cci_daemon_impl::register_plugin
    Call [ps_kafka_facade.cpp, 55]   cci_daemon_impl::clear_context

cci_daemon_impl::cci_daemon_kernel::load_plugin   (Public Function)
  Declared as: void
    Define [cci_daemon_kernel.h, 52]   cci_daemon_impl::cci_daemon_kernel

cci_daemon_impl::cci_daemon_kernel::~cci_daemon_kernel   (Public Pure Virtual Function)
    Declare [cci_daemon_kernel.h, 37]   cci_daemon_impl::cci_daemon_kernel

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin   (Explicit Public Function)
    Define [cci_daemon_plugin.cpp, 12]   cci_daemon_impl::cci_daemon_plugin
    Call [cci_daemon_kernel.h, 59]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Declare [cci_daemon_plugin.h, 27]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin   (Public Function)
    Define [cci_daemon_plugin.cpp, 50]   cci_daemon_impl::cci_daemon_plugin
    Declare [cci_daemon_plugin.h, 31]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::clear_context   (Public Function)
  Declared as: void
    Define [cci_daemon_plugin.h, 58]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::get_engine_version   (Public Const Function)
  Declared as: int
    Define [cci_daemon_plugin.h, 53]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::operator=   (Public Function)
  Declared as: cci_daemon_plugin &
    Declare [cci_daemon_plugin.h, 33]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::register_plugin   (Public Function)
  Declared as: void
    Define [cci_daemon_plugin.h, 56]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin   (Public Virtual Function)
    Define [cci_daemon_plugin.cpp, 59]   cci_daemon_impl::cci_daemon_plugin
    Call [cci_daemon_kernel.h, 65]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Declare [cci_daemon_plugin.h, 29]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_shared_lib   (Function)
    Declare [cci_shared_lib.h, 40]   cci_daemon_impl
                                                                     Page 38
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_impl::cci_shared_lib::cci_shared_lib   (Explicit Public Function)
    Define [cci_shared_lib.h, 34]    cci_daemon_impl::cci_shared_lib

cci_daemon_impl::cci_shared_lib::get_function_pointer   (Unknown Member Function)
    Declare [cci_daemon_plugin.cpp, 0]   cci_daemon_impl::cci_shared_lib
    Call [cci_daemon_plugin.cpp, 23]   cci_daemon_plugin.cpp
    Declare [cci_daemon_plugin.cpp, 0]   cci_daemon_impl::cci_shared_lib
    Call [cci_daemon_plugin.cpp, 27]   cci_daemon_plugin.cpp
    Declare [cci_daemon_plugin.cpp, 0]   cci_daemon_impl::cci_shared_lib
    Call [cci_daemon_plugin.cpp, 31]   cci_daemon_plugin.cpp

cci_daemon_impl::cci_shared_lib::load   (Unknown Member Function)
    Declare [cci_daemon_plugin.cpp, 0]   cci_daemon_impl::cci_shared_lib
    Call [cci_daemon_plugin.cpp, 18]   cci_daemon_plugin.cpp

cci_daemon_impl::cci_shared_lib::unload   (Public Function)
    Declare [cci_daemon_plugin.cpp, 40]   cci_daemon_impl::cci_shared_lib

cci_daemon_impl::chromatic_terminate   (Static Function)
  Declared as: void
    Define [cci_daemon.h, 169]       cci_daemon_impl
    Pointer [cci_daemon_main.cpp, 25]   main
    Call [cci_daemon.cpp, 363]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 364]       cci_daemon_facade::daemon_default_exec

cci_daemon_impl::clear_context   (Function)
  Declared as: void
    Define [ps_kafka_facade.cpp, 52]   cci_daemon_impl

cci_daemon_impl::get_ebp   (Function)
  Declared as: void **
    Define [cci_stack_trace.cpp, 93]   cci_daemon_impl
    Declare [cci_stack_trace.h, 24]   cci_daemon_impl
    Call [cci_stack_trace.cpp, 108]   cci_daemon_impl::print_walk_backtrace

cci_daemon_impl::get_engine_version   (Function)
  Declared as: int
    Define [ps_kafka_facade.cpp, 42]   cci_daemon_impl

cci_daemon_impl::get_function_pointer   (Static Function Template)
  Declared as: T_signature *
    Define [cci_shared_lib.h, 86]    cci_daemon_impl

cci_daemon_impl::load   (Static Function)
  Declared as: cci_handle_t
    Define [cci_shared_lib.h, 57]    cci_daemon_impl

cci_daemon_impl::operator<<   (Function)
  Declared as: std::ostream &
    Define [cci_daemon.h, 160]       cci_daemon_impl

cci_daemon_impl::operator=   (Function)
  Declared as: cci_shared_lib &
    Declare [cci_shared_lib.h, 42]   cci_daemon_impl
                                                                     Page 39
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_impl::print_stacktrace   (Function)
  Declared as: void
    Define [cci_stack_trace.cpp, 10]   cci_daemon_impl
    Declare [cci_stack_trace.h, 22]   cci_daemon_impl
    Call [cci_daemon.h, 96]          cci_daemon_impl::cci_daemon_facade::_bt

cci_daemon_impl::print_walk_backtrace   (Function)
  Declared as: void
    Define [cci_stack_trace.cpp, 102]   cci_daemon_impl
    Declare [cci_stack_trace.h, 25]   cci_daemon_impl
    Call [cci_daemon.h, 97]          cci_daemon_impl::cci_daemon_facade::_btw

cci_daemon_impl::ps_kafka_facade::can_open_broker   (Public Function)
  Declared as: bool
    Define [ps_kafka_facade.cpp, 28]   cci_daemon_impl::ps_kafka_facade
    Call [ps_kafka_facade.cpp, 33]   cci_daemon_impl::ps_kafka_facade::open_broker

cci_daemon_impl::ps_kafka_facade::open_broker   (Public Function)
  Declared as: std::unique_ptr
    Define [ps_kafka_facade.cpp, 31]   cci_daemon_impl::ps_kafka_facade

cci_daemon_impl::ps_kafka_facade::ps_kafka_facade   (Public Function)
    Declare [ps_kafka_facade.cpp, 23]   cci_daemon_impl::ps_kafka_facade
    Call [ps_kafka_facade.cpp, 47]   cci_daemon_impl::register_plugin

cci_daemon_impl::ps_kafka_facade::~ps_kafka_facade   (Public Pure Virtual Function)
    Declare [ps_kafka_facade.cpp, 25]   cci_daemon_impl::ps_kafka_facade

cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer   (Public Function)
  Declared as: void
    Define [cci_pub_and_sub.h, 67]   cci_daemon_impl::publish_and_subscribe_server
    Call [ps_kafka_facade.cpp, 48]   cci_daemon_impl::register_plugin

cci_daemon_impl::publish_and_subscribe_server::consumers   (Public Function)
  Declared as: consumer_list *
    Define [cci_pub_and_sub.h, 64]   cci_daemon_impl::publish_and_subscribe_server
    Call [ps_kafka_facade.cpp, 55]   cci_daemon_impl::clear_context

cci_daemon_impl::publish_and_subscribe_server::open_broker   (Public Function)
  Declared as: std::unique_ptr
    Define [cci_pub_and_sub.h, 72]   cci_daemon_impl::publish_and_subscribe_server
    Call [test_shared_lib.cpp, 22]   try_open_server

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::can_open_broker   (Public Pure Virtual Function)
  Declared as: bool
    Declare [cci_pub_and_sub.h, 43]   cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::open_broker   (Public Pure Virtual Function)
  Declared as: std::unique_ptr
    Declare [cci_pub_and_sub.h, 44]   cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::publish_and_subscribe_consumer   (Public Function)
    Declare [cci_pub_and_sub.h, 29]   cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer
                                                                     Page 40
                      Program Unit Cross Reference Report
===============================================================================

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer   (Public Virtual Function)
    Define [cci_pub_and_sub.h, 31]   cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server   (Public Function)
    Define [cci_pub_and_sub.h, 50]   cci_daemon_impl::publish_and_subscribe_server

cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server   (Public Virtual Function)
    Define [cci_pub_and_sub.h, 53]   cci_daemon_impl::publish_and_subscribe_server

cci_daemon_impl::register_plugin   (Function)
  Declared as: void
    Define [ps_kafka_facade.cpp, 43]   cci_daemon_impl

cci_daemon_impl::sighup_handler   (Static Function)
  Declared as: void
    Define [cci_daemon.h, 183]       cci_daemon_impl

cci_daemon_impl::sigsev_handler   (Static Function)
  Declared as: void
    Define [cci_daemon.h, 196]       cci_daemon_impl

cci_daemon_impl::sigterm_handler   (Static Function)
  Declared as: void
    Define [cci_daemon.h, 187]       cci_daemon_impl

cci_daemon_impl::unload   (Static Function)
  Declared as: void
    Define [cci_shared_lib.h, 77]    cci_daemon_impl

cci_daemon_impl::~cci_shared_lib   (Function)
  Declared as: class cci_shared_lib
    Declare [cci_shared_lib.h, 37]   cci_daemon_impl

chdir   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 96]        cci_daemon_facade::daemonize

clear_context   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 76]   cci_daemon_impl::cci_daemon_kernel::destroy_contexts

clear_context_address   (Function)
    Define [cci_daemon_plugin.cpp, 15]   cci_daemon_plugin.cpp

close   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 109]       cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 122]       cci_daemon_facade::daemonize

closelog   (Function)
  Declared as: void
    Call [cci_daemon_main.cpp, 33]   main
    Call [cci_daemon.h, 191]         cci_daemon_impl::sigterm_handler
    Call [cci_daemon.cpp, 383]       cci_daemon_facade::daemon_default_exec
                                                                     Page 41
                      Program Unit Cross Reference Report
===============================================================================

config_path   (Unknown Function)
    Call [cci_daemon.cpp, 348]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 388]       cci_daemon_facade::daemon_default_exec

daemon_default_exec   (Unknown Member Function)
    Call [cci_daemon_main.cpp, 35]   main

daemonize   (Unknown Member Function)
    Call [cci_daemon_main.cpp, 23]   main

destroy_contexts   (Unknown Member Function)
    Call [test_shared_lib.cpp, 39]   main

dladdr   (Unknown Function)
    Call [cci_stack_trace.cpp, 117]   cci_daemon_impl::print_walk_backtrace

dlclose   (Function)
  Declared as: int
    Call [cci_shared_lib.h, 79]      cci_daemon_impl::unload

dlerror   (Function)
  Declared as: char *
    Call [cci_shared_lib.h, 90]      cci_daemon_impl::get_function_pointer
    Call [cci_shared_lib.h, 98]      cci_daemon_impl::get_function_pointer

dlopen   (Function)
  Declared as: void *
    Call [cci_shared_lib.h, 65]      cci_daemon_impl::load

dlsym   (Function)
  Declared as: void *
    Call [cci_shared_lib.h, 94]      cci_daemon_impl::get_function_pointer

dup2   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 127]       cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 128]       cci_daemon_facade::daemonize

end   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 55]   cci_daemon_impl::cci_daemon_kernel::load_plugin

exit   (Unknown Function)
    Call [cci_daemon_main.cpp, 38]   main
    Call [cci_daemon.h, 179]         cci_daemon_impl::chromatic_terminate
    Call [cci_daemon.h, 193]         cci_daemon_impl::sigterm_handler
    Call [cci_daemon.h, 212]         cci_daemon_impl::sigsev_handler

fclose   (Unknown Function)
    Call [cci_daemon.cpp, 207]       cci_daemon_facade::close_log
    Call [cci_daemon.cpp, 236]       cci_daemon_facade::read_config_file

fcntl   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 259]       cci_daemon_facade::lock_region
    Call [cci_daemon.cpp, 279]       cci_daemon_facade::write_pid
                                                                     Page 42
                      Program Unit Cross Reference Report
===============================================================================
    Call [cci_daemon.cpp, 286]       cci_daemon_facade::write_pid

fgets   (Unknown Function)
    Call [cci_daemon.cpp, 223]       cci_daemon_facade::read_config_file

find   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 55]   cci_daemon_impl::cci_daemon_kernel::load_plugin

flags   (Unknown Function)
    Call [cci_daemon.cpp, 88]        cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 96]        cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 104]       cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 120]       cci_daemon_facade::daemonize

fopen   (Unknown Function)
    Call [cci_daemon.cpp, 191]       cci_daemon_facade::open_log
    Call [cci_daemon.cpp, 218]       cci_daemon_facade::read_config_file

fork   (Function)
  Declared as: __pid_t
    Call [cci_daemon.cpp, 50]        cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 72]        cci_daemon_facade::daemonize

fprintf   (Unknown Function)
    Call [cci_daemon.h, 209]         cci_daemon_impl::sigsev_handler
    Call [cci_daemon.cpp, 168]       cci_daemon_facade::log_message
    Call [cci_daemon.cpp, 170]       cci_daemon_facade::log_message
    Call [cci_daemon.cpp, 172]       cci_daemon_facade::log_message
    Call [cci_daemon.cpp, 173]       cci_daemon_facade::log_message
    Call [cci_stack_trace.cpp, 12]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 21]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 69]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 75]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 83]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 112]   cci_daemon_impl::print_walk_backtrace
    Call [cci_stack_trace.cpp, 118]   cci_daemon_impl::print_walk_backtrace

free   (Unknown Function)
    Call [cci_stack_trace.cpp, 87]   cci_daemon_impl::print_stacktrace
    Call [cci_stack_trace.cpp, 88]   cci_daemon_impl::print_stacktrace

ftruncate   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 299]       cci_daemon_facade::write_pid

get   (Unknown Member Function)
    Call [cci_pub_and_sub.h, 64]     cci_daemon_impl::publish_and_subscribe_server::consumers

get_engine_version   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 63]   cci_daemon_impl::cci_daemon_kernel::load_plugin

get_engine_version_address   (Function)
    Define [cci_daemon_plugin.cpp, 13]   cci_daemon_plugin.cpp

getenv   (Unknown Function)
    Call [cci_daemon.h, 172]         cci_daemon_impl::chromatic_terminate
                                                                     Page 43
                      Program Unit Cross Reference Report
===============================================================================

getpid   (Function)
  Declared as: __pid_t
    Call [cci_daemon.cpp, 310]       cci_daemon_facade::write_pid

InitGoogleTest   (Unknown Function)
    Call [test_cci_daemon.cpp, 12]   main

insert   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 60]   cci_daemon_impl::cci_daemon_kernel::load_plugin

load_plugin   (Unknown Member Function)
    Call [test_shared_lib.cpp, 38]   main

localtime   (Unknown Function)
    Call [cci_daemon.cpp, 165]       cci_daemon_facade::log_message

log_p   (Function)
  Declared as: file_ptr
    Define [cci_daemon.h, 200]       cci_daemon_impl::sigsev_handler
    Pointer [cci_daemon.h, 207]      cci_daemon_impl::sigsev_handler
    Pointer [cci_daemon.h, 209]      cci_daemon_impl::sigsev_handler

m_b_opened   (Function)
    Define [cci_daemon.cpp, 21]      cci_daemon.cpp
    Pointer [cci_daemon.cpp, 341]    cci_daemon_facade::daemon_default_exec
    Pointer [cci_daemon.cpp, 344]    cci_daemon_facade::daemon_default_exec
    Pointer [cci_daemon.cpp, 376]    cci_daemon_facade::daemon_default_exec

m_backtrace   (Function)
    Define [cci_daemon.cpp, 25]      cci_daemon.cpp

m_service_proc   (Function)
    Define [cci_daemon.cpp, 22]      cci_daemon.cpp

m_str_conf   (Function)
    Define [cci_daemon.cpp, 23]      cci_daemon.cpp

m_str_filename   (Function)
    Define [cci_daemon_plugin.cpp, 12]   cci_daemon_plugin.cpp

m_str_pid_path   (Function)
    Define [cci_daemon.cpp, 24]      cci_daemon.cpp

main   (Function)
  Declared as: int
    Define [CMakeCXXCompilerId.cpp, 513]   CMakeCXXCompilerId.cpp

main   (Function)
  Declared as: int
    Define [feature_tests.cxx, 405]   feature_tests.cxx

main   (Function)
  Declared as: int
    Define [test_cci_daemon.cpp, 9]   test_cci_daemon.cpp
                                                                     Page 44
                      Program Unit Cross Reference Report
===============================================================================

main   (Function)
  Declared as: int
    Define [test_shared_lib.cpp, 34]   test_shared_lib.cpp

main   (Function)
  Declared as: int
    Define [cci_daemon_main.cpp, 11]   cci_daemon_main.cpp

main   (Function)
  Declared as: int
    Define [feature_tests.c, 34]     feature_tests.c

main   (Function)
  Declared as: int
    Define [CMakeCCompilerId.c, 538]   CMakeCCompilerId.c

malloc   (Unknown Function)
    Call [cci_stack_trace.cpp, 31]   cci_daemon_impl::print_stacktrace

open   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 124]       cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 271]       cci_daemon_facade::write_pid

open_broker   (Unknown Member Function)
    Call [cci_pub_and_sub.h, 77]     cci_daemon_impl::publish_and_subscribe_server::open_broker

openlog   (Function)
  Declared as: void
    Call [cci_daemon_main.cpp, 31]   main
    Call [cci_daemon.h, 189]         cci_daemon_impl::sigterm_handler
    Call [cci_daemon.cpp, 381]       cci_daemon_facade::daemon_default_exec

operator<<   (Unknown Function)

pid_path   (Unknown Function)
    Call [cci_daemon.cpp, 367]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 401]       cci_daemon_facade::daemon_default_exec

push_back   (Unknown Member Function)
    Call [cci_pub_and_sub.h, 69]     cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer

register_plugin   (Unknown Member Function)
    Call [cci_daemon_kernel.h, 61]   cci_daemon_impl::cci_daemon_kernel::load_plugin

register_plugin_address   (Function)
    Define [cci_daemon_plugin.cpp, 14]   cci_daemon_plugin.cpp

RUN_ALL_TESTS   (Unknown Function)
    Call [test_cci_daemon.cpp, 14]   main

setbuf   (Unknown Function)
    Call [cci_daemon.cpp, 198]       cci_daemon_facade::open_log
                                                                     Page 45
                      Program Unit Cross Reference Report
===============================================================================

setsid   (Function)
  Declared as: __pid_t
    Call [cci_daemon.cpp, 66]        cci_daemon_facade::daemonize

sigaction   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 363]       cci_daemon_facade::daemon_default_exec

sigemptyset   (Function)
  Declared as: int
    Call [cci_daemon.cpp, 360]       cci_daemon_facade::daemon_default_exec

signal   (Function)
  Declared as: __sighandler_t
    Call [cci_daemon.cpp, 364]       cci_daemon_facade::daemon_default_exec

sleep   (Function)
  Declared as: unsigned int
    Call [cci_daemon.cpp, 374]       cci_daemon_facade::daemon_default_exec

snprintf   (Unknown Function)
    Call [cci_daemon.cpp, 307]       cci_daemon_facade::write_pid

std::make_pair   (Unknown Member Function)
    Declare [cci_daemon_kernel.h, 0]   std
    Call [cci_daemon_kernel.h, 60]   cci_daemon_impl::cci_daemon_kernel::load_plugin

std::make_unique   (Unknown Member Function)
    Declare [ps_kafka_facade.cpp, 0]   std
    Call [ps_kafka_facade.cpp, 36]   cci_daemon_impl::ps_kafka_facade::open_broker
    Declare [test_shared_lib.cpp, 0]   std
    Call [test_shared_lib.cpp, 36]   main
    Declare [cci_daemon_main.cpp, 0]   std
    Call [cci_daemon_main.cpp, 13]   main

std::remove   (Unknown Member Function)
    Declare [cci_daemon.cpp, 0]      std
    Call [cci_daemon.cpp, 329]       cci_daemon_facade::remove_pid

std::runtime_error   (Unknown Member Function)
    Call [cci_pub_and_sub.h, 79]     cci_daemon_impl::publish_and_subscribe_server::open_broker
    Declare [cci_shared_lib.h, 0]    std
    Call [cci_shared_lib.h, 69]      cci_daemon_impl::load
    Call [cci_shared_lib.h, 101]     cci_daemon_impl::get_function_pointer
    Call [ps_kafka_facade.cpp, 34]   cci_daemon_impl::ps_kafka_facade::open_broker

std::set_terminate   (Unknown Member Function)
    Declare [cci_daemon_main.cpp, 0]   std
    Call [cci_daemon_main.cpp, 25]   main

str   (Unknown Member Function)
    Call [cci_shared_lib.h, 64]      cci_daemon_impl::load
    Call [cci_daemon.cpp, 234]       cci_daemon_facade::read_config_file
                                                                     Page 46
                      Program Unit Cross Reference Report
===============================================================================

strftime   (Unknown Function)
    Call [cci_daemon.cpp, 167]       cci_daemon_facade::log_message

strlen   (Function)
  Declared as: size_t
    Call [cci_daemon.cpp, 229]       cci_daemon_facade::read_config_file
    Call [cci_daemon.cpp, 311]       cci_daemon_facade::write_pid
    Call [cci_daemon.cpp, 311]       cci_daemon_facade::write_pid

sysconf   (Function)
  Declared as: long int
    Call [cci_daemon.cpp, 106]       cci_daemon_facade::daemonize

syslog   (Function)
  Declared as: void
    Call [cci_daemon_main.cpp, 27]   main
    Call [cci_daemon_main.cpp, 32]   main
    Call [cci_daemon.h, 190]         cci_daemon_impl::sigterm_handler
    Call [cci_daemon.cpp, 350]       cci_daemon_facade::daemon_default_exec
    Call [cci_daemon.cpp, 382]       cci_daemon_facade::daemon_default_exec

time   (Unknown Function)
    Call [cci_daemon.cpp, 164]       cci_daemon_facade::log_message

try_open_server   (Function)
  Declared as: void
    Define [test_shared_lib.cpp, 16]   test_shared_lib.cpp

umask   (Function)
  Declared as: __mode_t
    Call [cci_daemon.cpp, 88]        cci_daemon_facade::daemonize
    Call [cci_daemon.cpp, 190]       cci_daemon_facade::open_log
    Call [cci_daemon.cpp, 192]       cci_daemon_facade::open_log

what   (Unknown Member Function)
    Call [test_shared_lib.cpp, 28]   try_open_server

write   (Function)
  Declared as: ssize_t
    Call [cci_daemon.cpp, 311]       cci_daemon_facade::write_pid
                                                                     Page 47
                         Object Cross Reference Report
===============================================================================

_SC_OPEN_MAX   (Enumerator)
    Use [cci_daemon.cpp, 106]        cci_daemon_facade::daemonize

addrlen   (Local Object)
  Declared as: int=backtrace(addrlist,sizeof(addrlist)/sizeof(void *))
    Define [cci_stack_trace.cpp, 18]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 18]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 20]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 27]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 35]    cci_daemon_impl::print_stacktrace

addrlist   (Local Object)
  Declared as: void *[max_frames+1]
    Define [cci_stack_trace.cpp, 15]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 18]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 18]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 27]    cci_daemon_impl::print_stacktrace

argc   (Parameter)
  Declared as: int
    Define [test_shared_lib.cpp, 34]   main

argc   (Parameter)
  Declared as: int
    Define [cci_daemon_main.cpp, 11]   main

argc   (Parameter)
  Declared as: int
    Define [CMakeCXXCompilerId.cpp, 513]   main
    Use [CMakeCXXCompilerId.cpp, 516]   main
    Use [CMakeCXXCompilerId.cpp, 517]   main
    Use [CMakeCXXCompilerId.cpp, 519]   main
    Use [CMakeCXXCompilerId.cpp, 530]   main

argc   (Parameter)
  Declared as: int
    Define [test_cci_daemon.cpp, 9]   main
    Addr Use [test_cci_daemon.cpp, 12]   main

argc   (Parameter)
  Declared as: int
    Define [feature_tests.c, 34]     main
    Use [feature_tests.c, 34]        main

argc   (Parameter)
  Declared as: int
    Define [feature_tests.cxx, 405]   main
    Use [feature_tests.cxx, 405]     main

argc   (Parameter)
  Declared as: int
    Define [CMakeCCompilerId.c, 538]   main
    Use [CMakeCCompilerId.c, 542]    main
    Use [CMakeCCompilerId.c, 543]    main
    Use [CMakeCCompilerId.c, 544]    main
                                                                     Page 48
                         Object Cross Reference Report
===============================================================================
    Use [CMakeCCompilerId.c, 546]    main
    Use [CMakeCCompilerId.c, 557]    main

argv   (Parameter)
  Declared as: char *[]
    Define [test_shared_lib.cpp, 34]   main

argv   (Parameter)
  Declared as: char *[]
    Define [CMakeCXXCompilerId.cpp, 513]   main
    Use [CMakeCXXCompilerId.cpp, 531]   main

argv   (Parameter)
  Declared as: char *[]
    Define [cci_daemon_main.cpp, 11]   main

argv   (Parameter)
  Declared as: char **
    Define [test_cci_daemon.cpp, 9]   main
    Use [test_cci_daemon.cpp, 12]    main

argv   (Parameter)
  Declared as: char **
    Define [feature_tests.c, 34]     main
    Use [feature_tests.c, 34]        main

argv   (Parameter)
  Declared as: char **
    Define [feature_tests.cxx, 405]   main
    Use [feature_tests.cxx, 405]     main

argv   (Parameter)
  Declared as: char *[]
    Define [CMakeCCompilerId.c, 538]   main
    Use [CMakeCCompilerId.c, 558]    main

array   (Local Object)
  Declared as: void *[10]
    Define [cci_daemon.h, 198]       cci_daemon_impl::sigsev_handler
    Use [cci_daemon.h, 204]          cci_daemon_impl::sigsev_handler
    Use [cci_daemon.h, 210]          cci_daemon_impl::sigsev_handler

b_ret   (Local Object)
  Declared as: bool
    Define [cci_daemon.cpp, 216]     cci_daemon_facade::read_config_file
    Init [cci_daemon.cpp, 216]       cci_daemon_facade::read_config_file
    Set [cci_daemon.cpp, 234]        cci_daemon_facade::read_config_file
    Return [cci_daemon.cpp, 241]     cci_daemon_facade::read_config_file

begin_name   (Local Object)
  Declared as: char *=0
    Define [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Set [cci_stack_trace.cpp, 44]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 53]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 54]    cci_daemon_impl::print_stacktrace
                                                                     Page 49
                         Object Cross Reference Report
===============================================================================
    Deref Modify [cci_stack_trace.cpp, 56]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 65]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 77]    cci_daemon_impl::print_stacktrace

begin_offset   (Local Object)
  Declared as: char *=0
    Define [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Set [cci_stack_trace.cpp, 46]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 47]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 53]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 54]    cci_daemon_impl::print_stacktrace
    Deref Modify [cci_stack_trace.cpp, 57]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 70]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 77]    cci_daemon_impl::print_stacktrace

buffer   (Local Object)
  Declared as: char [cci_daemon_facade::buffer_size]
    Define [cci_daemon.cpp, 268]     cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 307]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 311]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 311]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 311]        cci_daemon_facade::write_pid

cci_daemon_facade::bd_max_handles   (Public Object)
  Declared as: const unsigned=8192
    Define [cci_daemon.cpp, 11]      cci_daemon_facade
    Init [cci_daemon.cpp, 11]        cci_daemon.cpp
    Use [cci_daemon.cpp, 108]        cci_daemon_facade::daemonize

cci_daemon_facade::bd_no_chdir   (Public Object)
  Declared as: const unsigned=01
    Define [cci_daemon.cpp, 7]       cci_daemon_facade
    Init [cci_daemon.cpp, 7]         cci_daemon.cpp
    Addr Use [cci_daemon.cpp, 96]    cci_daemon_facade::daemonize

cci_daemon_facade::bd_no_close_files   (Public Object)
  Declared as: const unsigned=02
    Define [cci_daemon.cpp, 8]       cci_daemon_facade
    Init [cci_daemon.cpp, 8]         cci_daemon.cpp
    Addr Use [cci_daemon.cpp, 104]   cci_daemon_facade::daemonize

cci_daemon_facade::bd_no_reopen_std_fds   (Public Object)
  Declared as: const unsigned=04
    Define [cci_daemon.cpp, 9]       cci_daemon_facade
    Init [cci_daemon.cpp, 9]         cci_daemon.cpp
    Addr Use [cci_daemon.cpp, 120]   cci_daemon_facade::daemonize

cci_daemon_facade::bd_no_umask_0   (Public Object)
  Declared as: const unsigned=010
    Define [cci_daemon.cpp, 10]      cci_daemon_facade
    Init [cci_daemon.cpp, 10]        cci_daemon.cpp
    Addr Use [cci_daemon.cpp, 88]    cci_daemon_facade::daemonize

cci_daemon_facade::buffer_size   (Public Object)
  Declared as: const unsigned=1024
                                                                     Page 50
                         Object Cross Reference Report
===============================================================================
    Define [cci_daemon.cpp, 12]      cci_daemon_facade
    Init [cci_daemon.cpp, 12]        cci_daemon.cpp
    Use [cci_daemon.cpp, 214]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 223]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 268]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 308]        cci_daemon_facade::write_pid

cci_daemon_facade::cpf_cloexec   (Public Object)
  Declared as: const unsigned=1
    Define [cci_daemon.cpp, 13]      cci_daemon_facade
    Init [cci_daemon.cpp, 13]        cci_daemon.cpp
    Addr Use [cci_daemon.cpp, 275]   cci_daemon_facade::write_pid

cci_daemon_facade::log_path   (Public Object)
  Declared as: const std::string="/var/log/cci-daemon/cci-daemon.log"
    Define [cci_daemon.cpp, 15]      cci_daemon_facade
    Init [cci_daemon.cpp, 15]        cci_daemon.cpp
    Use [cci_daemon.cpp, 191]        cci_daemon_facade::open_log

cci_daemon_facade::path_config   (Public Object)
  Declared as: const std::string="/etc/cci-daemon/cci-daemon.conf"
    Define [cci_daemon.cpp, 14]      cci_daemon_facade
    Init [cci_daemon.cpp, 14]        cci_daemon.cpp
    Use [cci_daemon.cpp, 23]         m_str_conf

cci_daemon_facade::path_pid   (Public Object)
  Declared as: const std::string="/var/run/cci-daemon.pid"
    Define [cci_daemon.cpp, 16]      cci_daemon_facade
    Init [cci_daemon.cpp, 16]        cci_daemon.cpp
    Use [cci_daemon.cpp, 24]         m_str_pid_path

cci_daemon_impl::cci_daemon_facade::bd_max_handles   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 145]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::bd_no_chdir   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 137]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::bd_no_close_files   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 139]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::bd_no_reopen_std_fds   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 141]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::bd_no_umask_0   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 143]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::buffer_size   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 151]      cci_daemon_impl::cci_daemon_facade
                                                                     Page 51
                         Object Cross Reference Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::cpf_cloexec   (Public Static Object)
  Declared as: const unsigned
    Declare [cci_daemon.h, 157]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::log_path   (Public Static Object)
  Declared as: const std::string
    Declare [cci_daemon.h, 149]      cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 164]       cci_daemon_impl::operator<<

cci_daemon_impl::cci_daemon_facade::m_b_opened   (Private Object)
  Declared as: bool
    Define [cci_daemon.h, 104]       cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::m_backtrace   (Private Object)
  Declared as: bool
    Define [cci_daemon.h, 108]       cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 114]       cci_daemon_impl::cci_daemon_facade::backtrace
    Set [cci_daemon.h, 121]          cci_daemon_impl::cci_daemon_facade::backtrace

cci_daemon_impl::cci_daemon_facade::m_dw_flags   (Private Object)
  Declared as: unsigned long
    Define [cci_daemon.h, 102]       cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 113]       cci_daemon_impl::cci_daemon_facade::flags
    Set [cci_daemon.h, 120]          cci_daemon_impl::cci_daemon_facade::flags

cci_daemon_impl::cci_daemon_facade::m_log_fp   (Private Object)
  Declared as: file_ptr
    Define [cci_daemon.h, 103]       cci_daemon_impl::cci_daemon_facade
    Use [cci_daemon.h, 96]           cci_daemon_impl::cci_daemon_facade::_bt
    Use [cci_daemon.h, 97]           cci_daemon_impl::cci_daemon_facade::_btw

cci_daemon_impl::cci_daemon_facade::m_service_proc   (Private Object)
  Declared as: service_proc
    Define [cci_daemon.h, 105]       cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 115]       cci_daemon_impl::cci_daemon_facade::proc

cci_daemon_impl::cci_daemon_facade::m_str_conf   (Private Object)
  Declared as: std::string
    Define [cci_daemon.h, 106]       cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 116]       cci_daemon_impl::cci_daemon_facade::config_path
    Set [cci_daemon.h, 122]          cci_daemon_impl::cci_daemon_facade::config_path

cci_daemon_impl::cci_daemon_facade::m_str_pid_path   (Private Object)
  Declared as: std::string
    Define [cci_daemon.h, 107]       cci_daemon_impl::cci_daemon_facade
    Return [cci_daemon.h, 117]       cci_daemon_impl::cci_daemon_facade::pid_path
    Set [cci_daemon.h, 123]          cci_daemon_impl::cci_daemon_facade::pid_path

cci_daemon_impl::cci_daemon_facade::path_config   (Public Static Object)
  Declared as: const std::string
    Declare [cci_daemon.h, 153]      cci_daemon_impl::cci_daemon_facade

cci_daemon_impl::cci_daemon_facade::path_pid   (Public Static Object)
  Declared as: const std::string
    Declare [cci_daemon.h, 155]      cci_daemon_impl::cci_daemon_facade
                                                                     Page 52
                         Object Cross Reference Report
===============================================================================

cci_daemon_impl::cci_daemon_kernel::m_loaded_plugins   (Private Object)
  Declared as: plugin_dictionary
    Define [cci_daemon_kernel.h, 42]   cci_daemon_impl::cci_daemon_kernel
    Use [cci_daemon_kernel.h, 55]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 55]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 60]    cci_daemon_impl::cci_daemon_kernel::load_plugin

cci_daemon_impl::cci_daemon_kernel::m_pb_server   (Private Object)
  Declared as: publish_and_subscribe_server
    Define [cci_daemon_kernel.h, 43]   cci_daemon_impl::cci_daemon_kernel
    Return [cci_daemon_kernel.h, 48]   cci_daemon_impl::cci_daemon_kernel::get_pb_server

cci_daemon_impl::cci_daemon_plugin::clear_context_address   (Private Object)
  Declared as: clear_context_function *
    Define [cci_daemon_plugin.h, 48]   cci_daemon_impl::cci_daemon_plugin
    Call [cci_daemon_plugin.h, 59]   cci_daemon_impl::cci_daemon_plugin::clear_context
    Use [cci_daemon_plugin.cpp, 55]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Set [cci_daemon_plugin.cpp, 55]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::get_engine_version_address   (Private Object)
  Declared as: get_engine_version_function *
    Define [cci_daemon_plugin.h, 46]   cci_daemon_impl::cci_daemon_plugin
    Call [cci_daemon_plugin.h, 54]   cci_daemon_impl::cci_daemon_plugin::get_engine_version
    Use [cci_daemon_plugin.cpp, 54]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Set [cci_daemon_plugin.cpp, 54]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::m_shared_lib   (Private Object)
  Declared as: cci_handle_t
    Define [cci_daemon_plugin.h, 38]   cci_daemon_impl::cci_daemon_plugin
    Init [cci_daemon_plugin.cpp, 12]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 52]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Set [cci_daemon_plugin.cpp, 52]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::m_str_filename   (Private Object)
  Declared as: std::string
    Define [cci_daemon_plugin.h, 39]   cci_daemon_impl::cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::register_plugin_address   (Private Object)
  Declared as: register_plugin_function *
    Define [cci_daemon_plugin.h, 47]   cci_daemon_impl::cci_daemon_plugin
    Call [cci_daemon_plugin.h, 57]   cci_daemon_impl::cci_daemon_plugin::register_plugin
    Use [cci_daemon_plugin.cpp, 53]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Set [cci_daemon_plugin.cpp, 53]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

cci_daemon_impl::daemon_proc::dp_change_to_root_dir   (Private Object)
    Define [cci_daemon.h, 49]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_clear_file_create_mask   (Private Object)
    Define [cci_daemon.h, 48]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_close_all_open_files   (Private Object)
    Define [cci_daemon.h, 50]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_daemonized   (Private Object)
    Define [cci_daemon.h, 52]        cci_daemon_impl::daemon_proc
                                                                     Page 53
                         Object Cross Reference Report
===============================================================================

cci_daemon_impl::daemon_proc::dp_error   (Private Object)
    Define [cci_daemon.h, 53]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_fork_background_proc   (Private Object)
    Define [cci_daemon.h, 45]        cci_daemon_impl::daemon_proc
    Init [cci_daemon.h, 45]          cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_fork_no_session_leader   (Private Object)
    Define [cci_daemon.h, 46]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_make_session_leader   (Private Object)
    Define [cci_daemon.h, 47]        cci_daemon_impl::daemon_proc

cci_daemon_impl::daemon_proc::dp_reopen_streams_dev_null   (Private Object)
    Define [cci_daemon.h, 51]        cci_daemon_impl::daemon_proc

cci_daemon_impl::hup_received   (Static Global Object)
  Declared as: volatile sig_atomic_t=0
    Define [cci_daemon.h, 182]       cci_daemon_impl
    Init [cci_daemon.h, 182]         cci_daemon_impl
    Set [cci_daemon.h, 185]          cci_daemon_impl::sighup_handler
    Use [cci_daemon.cpp, 378]        cci_daemon_facade::daemon_default_exec
    Set [cci_daemon.cpp, 385]        cci_daemon_facade::daemon_default_exec

cci_daemon_impl::m_str_libpath   (Global Object)
  Declared as: std::string
    Define [cci_shared_lib.h, 47]    cci_daemon_impl

cci_daemon_impl::publish_and_subscribe_server::m_consumers   (Private Object)
  Declared as: std::unique_ptr
    Define [cci_pub_and_sub.h, 59]   cci_daemon_impl::publish_and_subscribe_server
    Init [cci_pub_and_sub.h, 50]     cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server
    Return [cci_pub_and_sub.h, 64]   cci_daemon_impl::publish_and_subscribe_server::consumers
    Use [cci_pub_and_sub.h, 69]      cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::m_str_moniker   (Private Object)
  Declared as: std::string
    Define [cci_pub_and_sub.h, 37]   cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer

cci_daemon_impl::service_proc::sp_default_service   (Private Object)
    Define [cci_daemon.h, 58]        cci_daemon_impl::service_proc
    Init [cci_daemon.h, 58]          cci_daemon_impl::service_proc

cci_daemon_impl::service_proc::sp_kafka_metadata   (Private Object)
    Define [cci_daemon.h, 59]        cci_daemon_impl::service_proc

cci_kernel   (Local Object)
  Declared as: auto
    Define [test_shared_lib.cpp, 36]   main
    Init [test_shared_lib.cpp, 36]   main
    Use [test_shared_lib.cpp, 38]    main
    Use [test_shared_lib.cpp, 39]    main

cdp   (Local Object)
  Declared as: cci_daemon_plugin=cci_daemon_plugin(config)
                                                                     Page 54
                         Object Cross Reference Report
===============================================================================
    Define [cci_daemon_kernel.h, 59]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Init [cci_daemon_kernel.h, 59]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 60]    cci_daemon_impl::cci_daemon_kernel::load_plugin

cdp   (Parameter)
  Declared as: const cci_daemon_plugin &
    Define [cci_daemon_plugin.cpp, 50]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 52]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 53]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 54]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 55]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

cl   (Unknown Object)
    Set [ps_kafka_facade.cpp, 55]    cci_daemon_impl::clear_context
    Use [ps_kafka_facade.cpp, 56]    cci_daemon_impl::clear_context

clear_context_address   (Global Object)
    Define [cci_daemon_plugin.cpp, 31]   cci_daemon_plugin.cpp
    Init [cci_daemon_plugin.cpp, 31]   cci_daemon_plugin.cpp

config   (Parameter)
  Declared as: const std::string &
    Define [cci_pub_and_sub.h, 72]   cci_daemon_impl::publish_and_subscribe_server::open_broker
    Use [cci_pub_and_sub.h, 76]      cci_daemon_impl::publish_and_subscribe_server::open_broker
    Use [cci_pub_and_sub.h, 77]      cci_daemon_impl::publish_and_subscribe_server::open_broker

config   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon_kernel.h, 52]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 55]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 59]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 60]    cci_daemon_impl::cci_daemon_kernel::load_plugin

config   (Parameter)
  Declared as: const std::string &
    Define [ps_kafka_facade.cpp, 28]   cci_daemon_impl::ps_kafka_facade::can_open_broker

config   (Parameter)
  Declared as: const std::string &
    Define [ps_kafka_facade.cpp, 31]   cci_daemon_impl::ps_kafka_facade::open_broker
    Use [ps_kafka_facade.cpp, 33]    cci_daemon_impl::ps_kafka_facade::open_broker

config_path   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.cpp, 211]     cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 218]        cci_daemon_facade::read_config_file

consumer   (Parameter)
  Declared as: publish_and_subscribe_consumer *
    Define [cci_pub_and_sub.h, 67]   cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer
    Use [cci_pub_and_sub.h, 69]      cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer

df   (Local Object)
  Declared as: auto
    Define [cci_daemon_main.cpp, 13]   main
    Init [cci_daemon_main.cpp, 13]   main
                                                                     Page 55
                         Object Cross Reference Report
===============================================================================
    Use [cci_daemon_main.cpp, 14]    main
    Use [cci_daemon_main.cpp, 23]    main
    Use [cci_daemon_main.cpp, 35]    main

df   (Parameter)
  Declared as: const cci_daemon_facade &
    Define [cci_daemon.h, 160]       cci_daemon_impl::operator<<

dli_sname   (Unknown Member Object)
    Use [cci_stack_trace.cpp, 123]   cci_daemon_impl::print_walk_backtrace

dlip   (Local Object)
  Declared as: Dl_info
    Define [cci_stack_trace.cpp, 106]   cci_daemon_impl::print_walk_backtrace
    Addr Use [cci_stack_trace.cpp, 117]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 123]   cci_daemon_impl::print_walk_backtrace

dp   (Local Object)
  Declared as: daemon_proc=daemon_proc::dp_fork_background_proc
    Define [cci_daemon.cpp, 41]      cci_daemon_facade::daemonize
    Init [cci_daemon.cpp, 41]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 42]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 44]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 53]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 56]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 66]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 66]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 75]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 78]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 89]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 97]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 111]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 126]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 127]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 128]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 131]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 144]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 148]        cci_daemon_facade::daemonize

dp_change_to_root_dir   (Unknown Member Object)
    Use [cci_daemon.cpp, 89]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 93]         cci_daemon_facade::daemonize

dp_clear_file_create_mask   (Unknown Member Object)
    Use [cci_daemon.cpp, 78]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 85]         cci_daemon_facade::daemonize

dp_close_all_open_files   (Unknown Member Object)
    Use [cci_daemon.cpp, 97]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 101]        cci_daemon_facade::daemonize

dp_daemonized   (Unknown Member Object)
    Use [cci_daemon.cpp, 131]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 134]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 144]        cci_daemon_facade::daemonize
                                                                     Page 56
                         Object Cross Reference Report
===============================================================================

dp_error   (Unknown Member Object)
    Use [cci_daemon.cpp, 42]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 53]         cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 66]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 75]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 126]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 127]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 128]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 135]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 148]        cci_daemon_facade::daemonize

dp_fork_background_proc   (Unknown Member Object)
    Use [cci_daemon.cpp, 41]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 46]         cci_daemon_facade::daemonize

dp_fork_no_session_leader   (Unknown Member Object)
    Use [cci_daemon.cpp, 66]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 69]         cci_daemon_facade::daemonize

dp_make_session_leader   (Unknown Member Object)
    Use [cci_daemon.cpp, 56]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 63]         cci_daemon_facade::daemonize

dp_reopen_streams_dev_null   (Unknown Member Object)
    Use [cci_daemon.cpp, 111]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 117]        cci_daemon_facade::daemonize

dummy   (Parameter)
  Declared as: int
    Define [cci_stack_trace.cpp, 93]   cci_daemon_impl::get_ebp
    Addr Use [cci_stack_trace.cpp, 95]   cci_daemon_impl::get_ebp

dummy   (Local Object)
  Declared as: int=0
    Define [cci_stack_trace.cpp, 104]   cci_daemon_impl::print_walk_backtrace
    Init [cci_stack_trace.cpp, 104]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 108]   cci_daemon_impl::print_walk_backtrace

dw_flags   (Parameter)
  Declared as: const unsigned long
    Define [cci_daemon.h, 120]       cci_daemon_impl::cci_daemon_facade::flags
    Use [cci_daemon.h, 120]          cci_daemon_impl::cci_daemon_facade::flags

dw_flags   (Parameter)
  Declared as: const unsigned long
    Define [cci_daemon.cpp, 334]     cci_daemon_facade::daemon_default_exec

EACCES   (Unknown Object)
    Use [cci_daemon.cpp, 293]        cci_daemon_facade::write_pid

EAGAIN   (Unknown Object)
    Use [cci_daemon.cpp, 293]        cci_daemon_facade::write_pid

ebp   (Local Object)
  Declared as: void **=dummy-2
                                                                     Page 57
                         Object Cross Reference Report
===============================================================================
    Define [cci_stack_trace.cpp, 95]   cci_daemon_impl::get_ebp
    Init [cci_stack_trace.cpp, 95]   cci_daemon_impl::get_ebp
    Return [cci_stack_trace.cpp, 97]   cci_daemon_impl::get_ebp

ebp   (Local Object)
  Declared as: void **=get_ebp(dummy)
    Define [cci_stack_trace.cpp, 108]   cci_daemon_impl::print_walk_backtrace
    Init [cci_stack_trace.cpp, 108]   cci_daemon_impl::print_walk_backtrace
    Deref Use [cci_stack_trace.cpp, 114]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 116]   cci_daemon_impl::print_walk_backtrace
    Deref Use [cci_stack_trace.cpp, 121]   cci_daemon_impl::print_walk_backtrace
    Deref Use [cci_stack_trace.cpp, 125]   cci_daemon_impl::print_walk_backtrace
    Set [cci_stack_trace.cpp, 125]   cci_daemon_impl::print_walk_backtrace

elem   (Local Object)
  Declared as: auto &
    Define [cci_pub_and_sub.h, 74]   cci_daemon_impl::publish_and_subscribe_server::open_broker
    Deref Use [cci_pub_and_sub.h, 76]   cci_daemon_impl::publish_and_subscribe_server::open_broker
    Return [cci_pub_and_sub.h, 77]   cci_daemon_impl::publish_and_subscribe_server::open_broker

elem   (Local Object)
  Declared as: auto &
    Define [cci_daemon_kernel.h, 73]   cci_daemon_impl::cci_daemon_kernel::destroy_contexts
    Use [cci_daemon_kernel.h, 75]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts
    Use [cci_daemon_kernel.h, 76]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts

elem   (Local Object)
  Declared as: auto
    Define [ps_kafka_facade.cpp, 59]   cci_daemon_impl::clear_context
    Use [ps_kafka_facade.cpp, 61]    cci_daemon_impl::clear_context
    Use [ps_kafka_facade.cpp, 61]    cci_daemon_impl::clear_context

end_offset   (Local Object)
  Declared as: char *=0
    Define [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 37]   cci_daemon_impl::print_stacktrace
    Set [cci_stack_trace.cpp, 48]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 53]    cci_daemon_impl::print_stacktrace
    Deref Set [cci_stack_trace.cpp, 58]   cci_daemon_impl::print_stacktrace

errno   (Unknown Object)
    Use [cci_daemon.cpp, 293]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 293]        cci_daemon_facade::write_pid

error   (Local Object)
  Declared as: const char *
    Define [cci_shared_lib.h, 98]    cci_daemon_impl::get_function_pointer
    Init [cci_shared_lib.h, 98]      cci_daemon_impl::get_function_pointer
    Use [cci_shared_lib.h, 99]       cci_daemon_impl::get_function_pointer

exception   (Local Object)
  Declared as: const std::exception &
    Define [test_shared_lib.cpp, 26]   try_open_server
    Use [test_shared_lib.cpp, 28]    try_open_server
                                                                     Page 58
                         Object Cross Reference Report
===============================================================================

EXIT_FAILURE   (Unknown Object)
    Use [cci_daemon.h, 179]          cci_daemon_impl::chromatic_terminate

EXIT_SUCCESS   (Unknown Object)
    Use [cci_daemon_main.cpp, 38]    main
    Use [cci_daemon.h, 193]          cci_daemon_impl::sigterm_handler
    Use [cci_daemon.cpp, 59]         cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 81]         cci_daemon_facade::daemonize

fd   (Local Object)
  Declared as: int
    Define [cci_daemon.cpp, 39]      cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 109]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 109]        cci_daemon_facade::daemonize
    Modify [cci_daemon.cpp, 109]     cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 109]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 124]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 126]        cci_daemon_facade::daemonize

fd   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 246]     cci_daemon_facade::lock_region
    Use [cci_daemon.cpp, 259]        cci_daemon_facade::lock_region

fd   (Local Object)
  Declared as: int
    Define [cci_daemon.cpp, 267]     cci_daemon_facade::write_pid
    Set [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 272]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 279]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 286]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 290]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 299]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 311]        cci_daemon_facade::write_pid

features   (Global Object)
  Declared as: const char []={...}
    Define [feature_tests.c, 2]      feature_tests.c
    Init [feature_tests.c, 2]        feature_tests.c
    Return [feature_tests.c, 34]     main

features   (Global Object)
  Declared as: const char []={...}
    Define [feature_tests.cxx, 2]    feature_tests.cxx
    Init [feature_tests.cxx, 2]      feature_tests.cxx
    Return [feature_tests.cxx, 405]   main

filename   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon_plugin.cpp, 12]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin

filename   (Unknown Object)
    Use [cci_daemon_plugin.cpp, 12]   m_str_filename
    Use [cci_daemon_plugin.cpp, 18]   cci_daemon_plugin.cpp
                                                                     Page 59
                         Object Cross Reference Report
===============================================================================

first   (Unknown Member Object)
    Use [cci_daemon_kernel.h, 61]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 63]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 75]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts

fl   (Local Object)
  Declared as: struct flock
    Define [cci_daemon.cpp, 252]     cci_daemon_facade::lock_region
    Set [cci_daemon.cpp, 254]        cci_daemon_facade::lock_region
    Set [cci_daemon.cpp, 255]        cci_daemon_facade::lock_region
    Set [cci_daemon.cpp, 256]        cci_daemon_facade::lock_region
    Set [cci_daemon.cpp, 257]        cci_daemon_facade::lock_region
    Addr Use [cci_daemon.cpp, 259]   cci_daemon_facade::lock_region

flags   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 265]     cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 275]        cci_daemon_facade::write_pid
    Set [cci_daemon.cpp, 279]        cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 281]        cci_daemon_facade::write_pid
    Modify [cci_daemon.cpp, 284]     cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 286]        cci_daemon_facade::write_pid

flock::l_len   (Unknown Member Object)
  Declared as: __off_t
    Set [cci_daemon.cpp, 257]        cci_daemon_facade::lock_region

flock::l_start   (Unknown Member Object)
  Declared as: __off_t
    Set [cci_daemon.cpp, 256]        cci_daemon_facade::lock_region

flock::l_type   (Unknown Member Object)
  Declared as: short int
    Set [cci_daemon.cpp, 254]        cci_daemon_facade::lock_region

flock::l_whence   (Unknown Member Object)
  Declared as: short int
    Set [cci_daemon.cpp, 255]        cci_daemon_facade::lock_region

fn   (Local Object)
  Declared as: int
    Define [cci_daemon.h, 201]       cci_daemon_impl::sigsev_handler
    Init [cci_daemon.h, 201]         cci_daemon_impl::sigsev_handler
    Use [cci_daemon.h, 210]          cci_daemon_impl::sigsev_handler

fp   (Local Object)
  Declared as: file_ptr
    Define [cci_daemon.cpp, 213]     cci_daemon_facade::read_config_file
    Set [cci_daemon.cpp, 218]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 219]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 223]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 236]        cci_daemon_facade::read_config_file

frame   (Local Object)
  Declared as: int=0
                                                                     Page 60
                         Object Cross Reference Report
===============================================================================
    Define [cci_stack_trace.cpp, 105]   cci_daemon_impl::print_walk_backtrace
    Init [cci_stack_trace.cpp, 105]   cci_daemon_impl::print_walk_backtrace
    Modify [cci_stack_trace.cpp, 120]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 120]   cci_daemon_impl::print_walk_backtrace

funcname   (Local Object)
  Declared as: char *=malloc(funcnamesize)
    Define [cci_stack_trace.cpp, 31]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 31]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 66]    cci_daemon_impl::print_stacktrace
    Set [cci_stack_trace.cpp, 68]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 70]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 87]    cci_daemon_impl::print_stacktrace

funcnamesize   (Local Object)
  Declared as: size_t=256
    Define [cci_stack_trace.cpp, 30]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 30]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 31]    cci_daemon_impl::print_stacktrace
    Addr Use [cci_stack_trace.cpp, 66]   cci_daemon_impl::print_stacktrace

function_address   (Local Object)
  Declared as: cci_handle_t
    Define [cci_shared_lib.h, 94]    cci_daemon_impl::get_function_pointer
    Init [cci_shared_lib.h, 94]      cci_daemon_impl::get_function_pointer
    Return [cci_shared_lib.h, 104]   cci_daemon_impl::get_function_pointer

function_name   (Parameter)
  Declared as: const std::string &
    Define [cci_shared_lib.h, 87]    cci_daemon_impl::get_function_pointer
    Use [cci_shared_lib.h, 95]       cci_daemon_impl::get_function_pointer

get_engine_version_address   (Global Object)
    Define [cci_daemon_plugin.cpp, 23]   cci_daemon_plugin.cpp
    Init [cci_daemon_plugin.cpp, 23]   cci_daemon_plugin.cpp

i   (Local Object)
  Declared as: int=1
    Define [cci_stack_trace.cpp, 35]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 35]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 35]    cci_daemon_impl::print_stacktrace
    Modify [cci_stack_trace.cpp, 35]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 41]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 70]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 77]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 83]    cci_daemon_impl::print_stacktrace

identity   (Local Object)
  Declared as: const char *="cci-daemon"
    Define [cci_daemon_main.cpp, 19]   main
    Init [cci_daemon_main.cpp, 19]   main
    Use [cci_daemon_main.cpp, 31]    main

identity   (Local Object)
  Declared as: const char *="cci-daemon"
    Define [cci_daemon.cpp, 338]     cci_daemon_facade::daemon_default_exec
                                                                     Page 61
                         Object Cross Reference Report
===============================================================================
    Init [cci_daemon.cpp, 338]       cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 381]        cci_daemon_facade::daemon_default_exec

info_arch   (Global Object)
  Declared as: char const *="INFO"":""arch[""]"
    Define [CMakeCCompilerId.c, 509]   CMakeCCompilerId.c
    Init [CMakeCCompilerId.c, 509]   CMakeCCompilerId.c
    Deref Use [CMakeCCompilerId.c, 544]   main

info_arch   (Global Object)
  Declared as: char const *="INFO"":""arch[""]"
    Define [CMakeCXXCompilerId.cpp, 496]   CMakeCXXCompilerId.cpp
    Init [CMakeCXXCompilerId.cpp, 496]   CMakeCXXCompilerId.cpp

info_compiler   (Global Object)
  Declared as: char const *="INFO"":""compiler[""GNU""]"
    Define [CMakeCCompilerId.c, 283]   CMakeCCompilerId.c
    Init [CMakeCCompilerId.c, 283]   CMakeCCompilerId.c
    Deref Use [CMakeCCompilerId.c, 542]   main

info_compiler   (Global Object)
  Declared as: char const *="INFO"":""compiler[""GNU""]"
    Define [CMakeCXXCompilerId.cpp, 270]   CMakeCXXCompilerId.cpp
    Init [CMakeCXXCompilerId.cpp, 270]   CMakeCXXCompilerId.cpp
    Deref Use [CMakeCXXCompilerId.cpp, 516]   main

info_language_dialect_default   (Global Object)
  Declared as: const char *="INFO"":""dialect_default[""98""]"
    Define [CMakeCXXCompilerId.cpp, 501]   CMakeCXXCompilerId.cpp
    Init [CMakeCXXCompilerId.cpp, 501]   CMakeCXXCompilerId.cpp
    Deref Use [CMakeCXXCompilerId.cpp, 530]   main

info_language_dialect_default   (Global Object)
  Declared as: const char *="INFO"":""dialect_default[""90""]"
    Define [CMakeCCompilerId.c, 527]   CMakeCCompilerId.c
    Init [CMakeCCompilerId.c, 527]   CMakeCCompilerId.c
    Deref Use [CMakeCCompilerId.c, 557]   main

info_platform   (Global Object)
  Declared as: char const *="INFO"":""platform[""Linux""]"
    Define [CMakeCCompilerId.c, 508]   CMakeCCompilerId.c
    Init [CMakeCCompilerId.c, 508]   CMakeCCompilerId.c
    Deref Use [CMakeCCompilerId.c, 543]   main

info_platform   (Global Object)
  Declared as: char const *="INFO"":""platform[""Linux""]"
    Define [CMakeCXXCompilerId.cpp, 495]   CMakeCXXCompilerId.cpp
    Init [CMakeCXXCompilerId.cpp, 495]   CMakeCXXCompilerId.cpp
    Deref Use [CMakeCXXCompilerId.cpp, 517]   main

info_version   (Global Object)
  Declared as: char const []={...}
    Define [CMakeCCompilerId.c, 470]   CMakeCCompilerId.c
    Init [CMakeCCompilerId.c, 470]   CMakeCCompilerId.c
    Deref Use [CMakeCCompilerId.c, 546]   main
                                                                     Page 62
                         Object Cross Reference Report
===============================================================================

info_version   (Global Object)
  Declared as: char const []={...}
    Define [CMakeCXXCompilerId.cpp, 457]   CMakeCXXCompilerId.cpp
    Init [CMakeCXXCompilerId.cpp, 457]   CMakeCXXCompilerId.cpp
    Deref Use [CMakeCXXCompilerId.cpp, 519]   main

iter   (Local Object)
  Declared as: auto=m_loaded_plugins.insert(std::make_pair(config,cdp))
    Define [cci_daemon_kernel.h, 60]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Init [cci_daemon_kernel.h, 60]   cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 61]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 63]    cci_daemon_impl::cci_daemon_kernel::load_plugin

kernel   (Parameter)
  Declared as: cci_daemon_kernel &
    Define [ps_kafka_facade.cpp, 43]   cci_daemon_impl::register_plugin
    Use [ps_kafka_facade.cpp, 48]    cci_daemon_impl::register_plugin

kernel   (Parameter)
  Declared as: cci_daemon_kernel &
    Define [ps_kafka_facade.cpp, 52]   cci_daemon_impl::clear_context
    Use [ps_kafka_facade.cpp, 55]    cci_daemon_impl::clear_context

kernel   (Parameter)
  Declared as: cci_daemon_kernel &
    Define [cci_daemon_plugin.h, 56]   cci_daemon_impl::cci_daemon_plugin::register_plugin
    Use [cci_daemon_plugin.h, 57]    cci_daemon_impl::cci_daemon_plugin::register_plugin

kernel   (Parameter)
  Declared as: cci_daemon_kernel &
    Define [cci_daemon_plugin.h, 58]   cci_daemon_impl::cci_daemon_plugin::clear_context
    Use [cci_daemon_plugin.h, 59]    cci_daemon_impl::cci_daemon_plugin::clear_context

len   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 250]     cci_daemon_facade::lock_region
    Use [cci_daemon.cpp, 257]        cci_daemon_facade::lock_region

lib   (Parameter)
  Declared as: const std::string &
    Define [cci_shared_lib.h, 57]    cci_daemon_impl::load
    Use [cci_shared_lib.h, 61]       cci_daemon_impl::load

loc   (Local Object)
  Declared as: struct tm *
    Define [cci_daemon.cpp, 162]     cci_daemon_facade::log_message
    Set [cci_daemon.cpp, 165]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 166]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 167]        cci_daemon_facade::log_message

m   (Local Object)
  Declared as: mode_t
    Define [cci_daemon.cpp, 187]     cci_daemon_facade::open_log
    Set [cci_daemon.cpp, 190]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 192]        cci_daemon_facade::open_log
                                                                     Page 63
                         Object Cross Reference Report
===============================================================================

m_log_fp   (Unknown Object)
    Use [cci_daemon.cpp, 155]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 168]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 170]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 172]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 173]        cci_daemon_facade::log_message
    Set [cci_daemon.cpp, 191]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 194]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 198]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 207]        cci_daemon_facade::close_log
    Use [cci_daemon.cpp, 207]        cci_daemon_facade::close_log

m_shared_lib   (Global Object)
    Define [cci_daemon_plugin.cpp, 18]   cci_daemon_plugin.cpp
    Init [cci_daemon_plugin.cpp, 18]   cci_daemon_plugin.cpp
    Use [cci_daemon_plugin.cpp, 24]   cci_daemon_plugin.cpp
    Use [cci_daemon_plugin.cpp, 28]   cci_daemon_plugin.cpp
    Use [cci_daemon_plugin.cpp, 32]   cci_daemon_plugin.cpp

max_frames   (Parameter)
  Declared as: unsigned
    Define [cci_stack_trace.cpp, 10]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 15]    cci_daemon_impl::print_stacktrace

maxfd   (Local Object)
  Declared as: int
    Define [cci_daemon.cpp, 39]      cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 106]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 108]        cci_daemon_facade::daemonize
    Set [cci_daemon.cpp, 108]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 109]        cci_daemon_facade::daemonize

msg   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.cpp, 152]     cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 172]        cci_daemon_facade::log_message

msg   (Local Object)
  Declared as: std::string
    Define [cci_daemon.cpp, 346]     cci_daemon_facade::daemon_default_exec
    Init [cci_daemon.cpp, 346]       cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 347]        cci_daemon_facade::daemon_default_exec

msg   (Local Object)
  Declared as: std::string
    Define [cci_daemon.cpp, 393]     cci_daemon_facade::daemon_default_exec
    Init [cci_daemon.cpp, 393]       cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 394]        cci_daemon_facade::daemon_default_exec

NULL   (Unknown Object)
    Use [cci_daemon.cpp, 164]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 166]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 194]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 198]        cci_daemon_facade::open_log
    Use [cci_daemon.cpp, 219]        cci_daemon_facade::read_config_file
                                                                     Page 64
                         Object Cross Reference Report
===============================================================================
    Use [cci_daemon.cpp, 223]        cci_daemon_facade::read_config_file
    Use [cci_stack_trace.cpp, 109]   cci_daemon_impl::print_walk_backtrace

nullptr   (Unknown Object)
    Use [cci_shared_lib.h, 67]       cci_daemon_impl::load
    Use [cci_shared_lib.h, 99]       cci_daemon_impl::get_function_pointer
    Use [cci_daemon_plugin.cpp, 12]   cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Use [cci_daemon_plugin.cpp, 13]   get_engine_version_address
    Use [cci_daemon_plugin.cpp, 14]   register_plugin_address
    Use [cci_daemon_plugin.cpp, 15]   clear_context_address
    Use [cci_daemon.h, 173]          cci_daemon_impl::chromatic_terminate
    Use [cci_daemon.h, 200]          log_p
    Use [cci_daemon.cpp, 363]        cci_daemon_facade::daemon_default_exec

options   (Local Object)
  Declared as: int=0
    Define [cci_daemon_main.cpp, 17]   main
    Init [cci_daemon_main.cpp, 17]   main
    Modify [cci_daemon_main.cpp, 18]   main
    Use [cci_daemon_main.cpp, 31]    main

options   (Local Object)
  Declared as: int=0
    Define [cci_daemon.cpp, 336]     cci_daemon_facade::daemon_default_exec
    Init [cci_daemon.cpp, 336]       cci_daemon_facade::daemon_default_exec
    Modify [cci_daemon.cpp, 337]     cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 381]        cci_daemon_facade::daemon_default_exec

ostr   (Unknown Object)
    Use [cci_shared_lib.h, 59]       cci_daemon_impl::load
    Use [cci_shared_lib.h, 60]       cci_daemon_impl::load
    Use [cci_shared_lib.h, 64]       cci_daemon_impl::load
    Use [cci_daemon.cpp, 232]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 233]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 234]        cci_daemon_facade::read_config_file

ostr   (Parameter)
  Declared as: std::ostream &
    Define [cci_daemon.h, 160]       cci_daemon_impl::operator<<
    Return [cci_daemon.h, 163]       cci_daemon_impl::operator<<

out   (Parameter)
  Declared as: FILE *
    Define [cci_stack_trace.cpp, 10]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 12]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 21]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 69]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 75]    cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 83]    cci_daemon_impl::print_stacktrace

out   (Parameter)
  Declared as: FILE *
    Define [cci_stack_trace.cpp, 102]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 112]   cci_daemon_impl::print_walk_backtrace
    Use [cci_stack_trace.cpp, 118]   cci_daemon_impl::print_walk_backtrace
                                                                     Page 65
                         Object Cross Reference Report
===============================================================================

p   (Local Object)
  Declared as: char *=symbollist[i]
    Define [cci_stack_trace.cpp, 41]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 41]   cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 41]   cci_daemon_impl::print_stacktrace
    Modify [cci_stack_trace.cpp, 41]   cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 43]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 44]    cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 45]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 46]    cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 47]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 48]    cci_daemon_impl::print_stacktrace

params   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.cpp, 334]     cci_daemon_facade::daemon_default_exec

pas   (Local Object)
  Declared as: pas_consumer *=new ps_kafka_facade
    Define [ps_kafka_facade.cpp, 47]   cci_daemon_impl::register_plugin
    Init [ps_kafka_facade.cpp, 47]   cci_daemon_impl::register_plugin
    Use [ps_kafka_facade.cpp, 48]    cci_daemon_impl::register_plugin

pas_server::consumer_list   (Unknown Member Object)
    Declare [ps_kafka_facade.cpp, 0]   pas_server
    Set [ps_kafka_facade.cpp, 55]    cci_daemon_impl::clear_context

path   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.h, 122]       cci_daemon_impl::cci_daemon_facade::config_path
    Use [cci_daemon.h, 122]          cci_daemon_impl::cci_daemon_facade::config_path

path   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.h, 123]       cci_daemon_impl::cci_daemon_facade::pid_path
    Use [cci_daemon.h, 123]          cci_daemon_impl::cci_daemon_facade::pid_path

path_with_extension   (Local Object)
  Declared as: std::string=ostr.str()
    Define [cci_shared_lib.h, 64]    cci_daemon_impl::load
    Init [cci_shared_lib.h, 64]      cci_daemon_impl::load
    Use [cci_shared_lib.h, 65]       cci_daemon_impl::load
    Use [cci_shared_lib.h, 70]       cci_daemon_impl::load

pbs   (Parameter)
  Declared as: publish_and_subscribe_server &
    Define [test_shared_lib.cpp, 16]   try_open_server
    Use [test_shared_lib.cpp, 22]    try_open_server

pid_file   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.cpp, 264]     cci_daemon_facade::write_pid
    Use [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid
                                                                     Page 66
                         Object Cross Reference Report
===============================================================================

pid_file   (Parameter)
  Declared as: const std::string &
    Define [cci_daemon.cpp, 324]     cci_daemon_facade::remove_pid
    Use [cci_daemon.cpp, 329]        cci_daemon_facade::remove_pid

register_plugin_address   (Global Object)
    Define [cci_daemon_plugin.cpp, 27]   cci_daemon_plugin.cpp
    Init [cci_daemon_plugin.cpp, 27]   cci_daemon_plugin.cpp

require   (Local Object)
  Declared as: int=0
    Define [CMakeCXXCompilerId.cpp, 515]   main
    Init [CMakeCXXCompilerId.cpp, 515]   main
    Modify [CMakeCXXCompilerId.cpp, 516]   main
    Modify [CMakeCXXCompilerId.cpp, 517]   main
    Modify [CMakeCXXCompilerId.cpp, 519]   main
    Modify [CMakeCXXCompilerId.cpp, 530]   main
    Return [CMakeCXXCompilerId.cpp, 532]   main

require   (Local Object)
  Declared as: int=0
    Define [CMakeCCompilerId.c, 541]   main
    Init [CMakeCCompilerId.c, 541]   main
    Modify [CMakeCCompilerId.c, 542]   main
    Modify [CMakeCCompilerId.c, 543]   main
    Modify [CMakeCCompilerId.c, 544]   main
    Modify [CMakeCCompilerId.c, 546]   main
    Modify [CMakeCCompilerId.c, 557]   main
    Return [CMakeCCompilerId.c, 559]   main

ret   (Local Object)
  Declared as: int=chdir("/")
    Define [cci_daemon.cpp, 96]      cci_daemon_facade::daemonize
    Init [cci_daemon.cpp, 96]        cci_daemon_facade::daemonize

ret   (Local Object)
  Declared as: char *=abi::__cxa_demangle(begin_name,funcname,funcnamesize,s...
    Define [cci_stack_trace.cpp, 65]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 65]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 68]    cci_daemon_impl::print_stacktrace

ret   (Local Object)
  Declared as: void **=NULL
    Define [cci_stack_trace.cpp, 109]   cci_daemon_impl::print_walk_backtrace
    Init [cci_stack_trace.cpp, 109]   cci_daemon_impl::print_walk_backtrace
    Set [cci_stack_trace.cpp, 116]   cci_daemon_impl::print_walk_backtrace
    Deref Use [cci_stack_trace.cpp, 117]   cci_daemon_impl::print_walk_backtrace
    Deref Use [cci_stack_trace.cpp, 122]   cci_daemon_impl::print_walk_backtrace

s   (Local Object)
  Declared as: char *=getenv("EF_DUMPCORE")
    Define [cci_daemon.h, 172]       cci_daemon_impl::chromatic_terminate
    Init [cci_daemon.h, 172]         cci_daemon_impl::chromatic_terminate
    Use [cci_daemon.h, 173]          cci_daemon_impl::chromatic_terminate
    Deref Use [cci_daemon.h, 173]    cci_daemon_impl::chromatic_terminate
                                                                     Page 67
                         Object Cross Reference Report
===============================================================================

sa   (Local Object)
  Declared as: struct sigaction
    Define [cci_daemon.cpp, 357]     cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 360]        cci_daemon_facade::daemon_default_exec
    Set [cci_daemon.cpp, 361]        cci_daemon_facade::daemon_default_exec
    Set [cci_daemon.cpp, 362]        cci_daemon_facade::daemon_default_exec
    Addr Use [cci_daemon.cpp, 363]   cci_daemon_facade::daemon_default_exec

sa_handler   (Unknown Member Object)
  Declared as: __sighandler_t
    Set [cci_daemon.cpp, 362]        cci_daemon_facade::daemon_default_exec

second   (Unknown Member Object)
    Use [cci_daemon_kernel.h, 61]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 63]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 76]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts

service_proc::sp_default_service   (Unknown Member Object)
    Declare [cci_daemon.cpp, 0]      service_proc
    Use [cci_daemon.cpp, 22]         m_service_proc

shared_handle   (Parameter)
  Declared as: cci_handle_t
    Define [cci_shared_lib.h, 77]    cci_daemon_impl::unload
    Use [cci_shared_lib.h, 79]       cci_daemon_impl::unload
    Use [cci_shared_lib.h, 79]       cci_daemon_impl::unload

shared_handle   (Parameter)
  Declared as: cci_handle_t
    Define [cci_shared_lib.h, 86]    cci_daemon_impl::get_function_pointer
    Use [cci_shared_lib.h, 92]       cci_daemon_impl::get_function_pointer
    Use [cci_shared_lib.h, 94]       cci_daemon_impl::get_function_pointer

shared_object   (Local Object)
  Declared as: cci_handle_t
    Define [cci_shared_lib.h, 65]    cci_daemon_impl::load
    Init [cci_shared_lib.h, 65]      cci_daemon_impl::load
    Use [cci_shared_lib.h, 67]       cci_daemon_impl::load
    Return [cci_shared_lib.h, 73]    cci_daemon_impl::load

sigaction::__sigaction_handler   (Unknown Member Object)
    Set [cci_daemon.cpp, 362]        cci_daemon_facade::daemon_default_exec

sigaction::sa_flags   (Unknown Member Object)
  Declared as: int
    Set [cci_daemon.cpp, 361]        cci_daemon_facade::daemon_default_exec

sigaction::sa_mask   (Unknown Member Object)
  Declared as: __sigset_t
    Addr Use [cci_daemon.cpp, 360]   cci_daemon_facade::daemon_default_exec

sighup_handler   (Unknown Object)
    Use [cci_daemon.cpp, 362]        cci_daemon_facade::daemon_default_exec
                                                                     Page 68
                         Object Cross Reference Report
===============================================================================

signal   (Parameter)
  Declared as: int
    Define [cci_daemon.h, 183]       cci_daemon_impl::sighup_handler

signal   (Parameter)
  Declared as: int
    Define [cci_daemon.h, 187]       cci_daemon_impl::sigterm_handler

signal   (Parameter)
  Declared as: int
    Define [cci_daemon.h, 196]       cci_daemon_impl::sigsev_handler
    Use [cci_daemon.h, 209]          cci_daemon_impl::sigsev_handler

sigterm_handler   (Unknown Object)
    Use [cci_daemon.cpp, 364]        cci_daemon_facade::daemon_default_exec

size   (Local Object)
  Declared as: size_t
    Define [cci_daemon.h, 199]       cci_daemon_impl::sigsev_handler
    Set [cci_daemon.h, 204]          cci_daemon_impl::sigsev_handler
    Use [cci_daemon.h, 210]          cci_daemon_impl::sigsev_handler

sleep_time   (Local Object)
  Declared as: const int=15
    Define [cci_daemon.cpp, 355]     cci_daemon_facade::daemon_default_exec
    Init [cci_daemon.cpp, 355]       cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 356]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 392]        cci_daemon_facade::daemon_default_exec

start   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 249]     cci_daemon_facade::lock_region
    Use [cci_daemon.cpp, 256]        cci_daemon_facade::lock_region

status   (Local Object)
  Declared as: int
    Define [cci_stack_trace.cpp, 64]   cci_daemon_impl::print_stacktrace
    Addr Use [cci_stack_trace.cpp, 66]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 67]    cci_daemon_impl::print_stacktrace

std::cerr   (Public Object)
    Define [cci_daemon_plugin.cpp, 19]   std
    Declare [cci_daemon_kernel.h, 0]   std
    Use [cci_daemon_kernel.h, 57]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 62]    cci_daemon_impl::cci_daemon_kernel::load_plugin
    Use [cci_daemon_kernel.h, 70]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts
    Use [cci_daemon_kernel.h, 75]    cci_daemon_impl::cci_daemon_kernel::destroy_contexts
    Use [ps_kafka_facade.cpp, 49]    cci_daemon_impl::register_plugin
    Use [ps_kafka_facade.cpp, 58]    cci_daemon_impl::clear_context
    Use [ps_kafka_facade.cpp, 62]    cci_daemon_impl::clear_context

std::cerr   (Public Object)
    Define [cci_daemon_plugin.cpp, 26]   std
                                                                     Page 69
                         Object Cross Reference Report
===============================================================================

std::cerr   (Public Object)
    Define [cci_daemon_plugin.cpp, 30]   std

std::cerr   (Public Object)
    Define [cci_daemon_plugin.cpp, 34]   std

std::cerr   (Public Object)
    Define [cci_daemon_plugin.cpp, 42]   std

std::cout   (Unknown Member Object)
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 24]    try_open_server
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 28]    try_open_server
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 31]    try_open_server

std::endl   (Unknown Member Object)
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 24]    try_open_server
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 28]    try_open_server
    Declare [test_shared_lib.cpp, 0]   std
    Use [test_shared_lib.cpp, 31]    try_open_server

std::ends   (Unknown Member Object)
    Declare [cci_shared_lib.h, 0]    std
    Use [cci_shared_lib.h, 63]       cci_daemon_impl::load
    Use [cci_daemon.cpp, 233]        cci_daemon_facade::read_config_file

std::ostringstream   (Unknown Member Object)
    Declare [cci_shared_lib.h, 0]    std
    Use [cci_shared_lib.h, 59]       cci_daemon_impl::load
    Use [cci_daemon.cpp, 232]        cci_daemon_facade::read_config_file

str   (Local Object)
  Declared as: std::string
    Define [cci_daemon_main.cpp, 16]   main
    Init [cci_daemon_main.cpp, 16]   main
    Use [cci_daemon_main.cpp, 35]    main

str   (Local Object)
  Declared as: char [cci_daemon_facade::buffer_size]
    Define [cci_daemon.cpp, 214]     cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 223]        cci_daemon_facade::read_config_file
    Deref Set [cci_daemon.cpp, 225]   cci_daemon_facade::read_config_file
    Deref Set [cci_daemon.cpp, 229]   cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 229]        cci_daemon_facade::read_config_file
    Use [cci_daemon.cpp, 233]        cci_daemon_facade::read_config_file

symbollist   (Local Object)
  Declared as: char **=backtrace_symbols(addrlist,addrlen)
    Define [cci_stack_trace.cpp, 27]   cci_daemon_impl::print_stacktrace
    Init [cci_stack_trace.cpp, 27]   cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 41]   cci_daemon_impl::print_stacktrace
                                                                     Page 70
                         Object Cross Reference Report
===============================================================================
    Deref Use [cci_stack_trace.cpp, 70]   cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 77]   cci_daemon_impl::print_stacktrace
    Deref Use [cci_stack_trace.cpp, 83]   cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.cpp, 88]    cci_daemon_impl::print_stacktrace

t   (Local Object)
  Declared as: time_t
    Define [cci_daemon.cpp, 161]     cci_daemon_facade::log_message
    Set [cci_daemon.cpp, 164]        cci_daemon_facade::log_message
    Addr Use [cci_daemon.cpp, 165]   cci_daemon_facade::log_message

timestamp   (Local Object)
  Declared as: char [sizeof("YYYY-MM-DD HH:MM:SS")]
    Define [cci_daemon.cpp, 160]     cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 167]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 170]        cci_daemon_facade::log_message

TIMESTAMP_FMT   (Local Object)
  Declared as: const char *="%F %X"
    Define [cci_daemon.cpp, 158]     cci_daemon_facade::log_message
    Init [cci_daemon.cpp, 158]       cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 167]        cci_daemon_facade::log_message

trace   (Parameter)
  Declared as: const unsigned long
    Define [cci_daemon.h, 121]       cci_daemon_impl::cci_daemon_facade::backtrace
    Use [cci_daemon.h, 121]          cci_daemon_impl::cci_daemon_facade::backtrace

type   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 247]     cci_daemon_facade::lock_region
    Use [cci_daemon.cpp, 254]        cci_daemon_facade::lock_region

unslept   (Local Object)
  Declared as: int=15
    Define [cci_daemon.cpp, 356]     cci_daemon_facade::daemon_default_exec
    Init [cci_daemon.cpp, 356]       cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 374]        cci_daemon_facade::daemon_default_exec
    Set [cci_daemon.cpp, 374]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 390]        cci_daemon_facade::daemon_default_exec
    Set [cci_daemon.cpp, 392]        cci_daemon_facade::daemon_default_exec

whence   (Parameter)
  Declared as: int
    Define [cci_daemon.cpp, 248]     cci_daemon_facade::lock_region
    Use [cci_daemon.cpp, 255]        cci_daemon_facade::lock_region
                                                                     Page 71
                          Type Cross Reference Report
===============================================================================

__sighandler_t   (Typedef)
  Declared as: void (*) ()
    Cast [cci_daemon.cpp, 364]       cci_daemon_facade::daemon_default_exec

abi   (Unknown Class)

cci_daemon_facade   (Unknown Class)

cci_daemon_impl::cci_daemon_facade   (Abstract Class)
    Define [cci_daemon.h, 63]        cci_daemon_impl
    Use [cci_daemon.h, 76]           cci_daemon_impl::cci_daemon_facade::cci_daemon_facade
    Type [cci_daemon.h, 78]          cci_daemon_impl::cci_daemon_facade::operator=
    Use [cci_daemon.h, 78]           cci_daemon_impl::cci_daemon_facade::operator=
    Type [cci_daemon.h, 160]         df
    Declare [cci_daemon.h, 36]       cci_daemon_impl

cci_daemon_impl::cci_daemon_kernel   (Abstract Class)
    Define [cci_daemon_kernel.h, 26]   cci_daemon_impl
    Type [ps_kafka_facade.cpp, 43]   kernel
    Type [ps_kafka_facade.cpp, 52]   kernel
    Declare [cci_daemon_plugin.h, 15]   cci_daemon_impl
    Type [cci_daemon_plugin.h, 56]   kernel
    Type [cci_daemon_plugin.h, 58]   kernel

cci_daemon_impl::cci_daemon_kernel::plugin_dictionary   (Private Typedef)
  Declared as: std::map
    Define [cci_daemon_kernel.h, 30]   cci_daemon_impl::cci_daemon_kernel
    Type [cci_daemon_kernel.h, 42]   cci_daemon_impl::cci_daemon_kernel::m_loaded_plugins

cci_daemon_impl::cci_daemon_plugin   (Class)
    Define [cci_daemon_plugin.h, 21]   cci_daemon_impl
    Use [cci_daemon_plugin.h, 31]    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Type [cci_daemon_plugin.h, 33]   cci_daemon_impl::cci_daemon_plugin::operator=
    Use [cci_daemon_plugin.h, 33]    cci_daemon_impl::cci_daemon_plugin::operator=
    Type [cci_daemon_kernel.h, 59]   cdp
    Type [cci_daemon_plugin.cpp, 50]   cdp

cci_daemon_impl::cci_daemon_plugin::clear_context_function   (Private Typedef)
  Declared as: void
    Define [cci_daemon_plugin.h, 44]   cci_daemon_impl::cci_daemon_plugin
    Type [cci_daemon_plugin.h, 48]   cci_daemon_impl::cci_daemon_plugin::clear_context_address

cci_daemon_impl::cci_daemon_plugin::get_engine_version_function   (Private Typedef)
  Declared as: int
    Define [cci_daemon_plugin.h, 42]   cci_daemon_impl::cci_daemon_plugin
    Type [cci_daemon_plugin.h, 46]   cci_daemon_impl::cci_daemon_plugin::get_engine_version_address

cci_daemon_impl::cci_daemon_plugin::register_plugin_function   (Private Typedef)
  Declared as: void
    Define [cci_daemon_plugin.h, 43]   cci_daemon_impl::cci_daemon_plugin
    Type [cci_daemon_plugin.h, 47]   cci_daemon_impl::cci_daemon_plugin::register_plugin_address

cci_daemon_impl::cci_shared_lib   (Class)
    Define [cci_shared_lib.h, 27]    cci_daemon_impl
    Type [cci_shared_lib.h, 27]      cci_daemon_impl::~cci_shared_lib
    Use [cci_shared_lib.h, 40]       cci_daemon_impl::cci_shared_lib
    Type [cci_shared_lib.h, 42]      cci_daemon_impl::operator=
    Use [cci_shared_lib.h, 42]       cci_daemon_impl::operator=

cci_daemon_impl::daemon_proc   (Class)
    Define [cci_daemon.h, 43]        cci_daemon_impl

cci_daemon_impl::ps_kafka_facade   (Abstract Class)
    Define [ps_kafka_facade.cpp, 16]   cci_daemon_impl

cci_daemon_impl::publish_and_subscribe   (Class)
    Define [cci_pub_and_sub.h, 14]   cci_daemon_impl

cci_daemon_impl::publish_and_subscribe_server   (Class)
    Define [cci_pub_and_sub.h, 17]   cci_daemon_impl
    Type [cci_daemon_kernel.h, 43]   cci_daemon_impl::cci_daemon_kernel::m_pb_server
    Type [cci_daemon_kernel.h, 48]   cci_daemon_impl::cci_daemon_kernel::get_pb_server
    Type [test_shared_lib.cpp, 16]   pbs

cci_daemon_impl::publish_and_subscribe_server::consumer_list   (Public Typedef)
  Declared as: std::list
    Define [cci_pub_and_sub.h, 48]   cci_daemon_impl::publish_and_subscribe_server
    Type [cci_pub_and_sub.h, 64]     cci_daemon_impl::publish_and_subscribe_server::consumers
    Use [cci_pub_and_sub.h, 50]      cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer   (Public Abstract Class)
    Define [cci_pub_and_sub.h, 23]   cci_daemon_impl::publish_and_subscribe_server
    Type [cci_pub_and_sub.h, 67]     consumer

cci_daemon_impl::service_proc   (Class)
    Define [cci_daemon.h, 56]        cci_daemon_impl
    Type [cci_daemon.h, 105]         cci_daemon_impl::cci_daemon_facade::m_service_proc
    Type [cci_daemon.h, 115]         cci_daemon_impl::cci_daemon_facade::proc

cci_handle_t   (Unknown Type)
    Type [cci_shared_lib.h, 57]      cci_daemon_impl::load
    Type [cci_shared_lib.h, 65]      shared_object
    Type [cci_shared_lib.h, 77]      shared_handle
    Type [cci_shared_lib.h, 86]      shared_handle
    Type [cci_shared_lib.h, 94]      function_address
    Type [cci_daemon_plugin.h, 38]   cci_daemon_impl::cci_daemon_plugin::m_shared_lib

daemon_proc   (Unknown Type)
    Type [cci_daemon.cpp, 41]        dp

Dl_info   (Unknown Type)
    Type [cci_stack_trace.cpp, 106]   dlip

enable_shared_from_this   (Unknown Class)
    Public [ps_kafka_facade.cpp, 17]   cci_daemon_impl::ps_kafka_facade

FILE   (Unknown Type)
    Use [cci_stack_trace.h, 22]      cci_daemon_impl::print_stacktrace
    Use [cci_stack_trace.h, 25]      cci_daemon_impl::print_walk_backtrace
    Type [cci_stack_trace.cpp, 10]   out
    Type [cci_stack_trace.cpp, 102]   out

file_ptr   (Unknown Type)
    Type [cci_daemon.h, 103]         cci_daemon_impl::cci_daemon_facade::m_log_fp
    Type [cci_daemon.h, 200]         log_p
    Type [cci_daemon.cpp, 213]       fp
                                                                     Page 72
                          Type Cross Reference Report
===============================================================================

flock   (Struct)
    Type [cci_daemon.cpp, 252]       fl

mode_t   (Typedef)
  Declared as: __mode_t
    Type [cci_daemon.cpp, 187]       m

pas_consumer   (Unknown Class)
    Public [ps_kafka_facade.cpp, 16]   cci_daemon_impl::ps_kafka_facade

pas_consumer   (Unknown Type)
    Type [ps_kafka_facade.cpp, 47]   pas

pas_server   (Unknown Class)

service_proc   (Unknown Class)

sig_atomic_t   (Typedef)
  Declared as: __sig_atomic_t
    Type [cci_daemon.h, 182]         cci_daemon_impl::hup_received

sigaction   (Struct)
    Type [cci_daemon.cpp, 357]       sa

size_t   (Unknown Type)
    Type [cci_daemon.h, 199]         size
    Type [cci_stack_trace.cpp, 30]   funcnamesize

std   (Unknown Class)
    Throw [cci_pub_and_sub.h, 79]    cci_daemon_impl::publish_and_subscribe_server::open_broker
    Throw [cci_shared_lib.h, 101]    cci_daemon_impl::get_function_pointer
    Throw [ps_kafka_facade.cpp, 34]   cci_daemon_impl::ps_kafka_facade::open_broker

std::exception   (Unknown Member Type)
    Declare [test_shared_lib.cpp, 0]   std
    Type [test_shared_lib.cpp, 26]   exception
    Declare [test_shared_lib.cpp, 0]   std

std::list   (Unknown Member Type)
    Declare [cci_pub_and_sub.h, 0]   std
    Type [cci_pub_and_sub.h, 48]     cci_daemon_impl::publish_and_subscribe_server::consumer_list

std::map   (Unknown Member Type)
    Declare [cci_daemon_kernel.h, 0]   std
    Type [cci_daemon_kernel.h, 30]   cci_daemon_impl::cci_daemon_kernel::plugin_dictionary

std::ostream   (Unknown Member Type)
    Declare [cci_daemon.h, 0]        std
    Type [cci_daemon.h, 160]         cci_daemon_impl::operator<<
    Type [cci_daemon.h, 160]         ostr

std::string   (Unknown Member Type)
    Type [cci_pub_and_sub.h, 37]     cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::m_str_moniker
    Use [cci_pub_and_sub.h, 43]      cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::can_open_broker
    Use [cci_pub_and_sub.h, 44]      cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::open_broker
    Type [cci_pub_and_sub.h, 72]     config
    Type [cci_daemon_kernel.h, 52]   config
    Declare [cci_shared_lib.h, 0]    std
    Type [cci_shared_lib.h, 47]      cci_daemon_impl::m_str_libpath
    Type [cci_shared_lib.h, 57]      lib
    Type [cci_shared_lib.h, 64]      path_with_extension
    Type [cci_shared_lib.h, 87]      function_name
    Type [ps_kafka_facade.cpp, 28]   config
    Type [ps_kafka_facade.cpp, 31]   config
    Use [cci_daemon_plugin.h, 27]    cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
    Type [cci_daemon_plugin.h, 39]   cci_daemon_impl::cci_daemon_plugin::m_str_filename
    Type [cci_daemon_plugin.cpp, 12]   filename
    Type [cci_daemon_main.cpp, 16]   str
    Use [cci_daemon.h, 85]           cci_daemon_impl::cci_daemon_facade::log_message
    Use [cci_daemon.h, 87]           cci_daemon_impl::cci_daemon_facade::read_config_file
    Use [cci_daemon.h, 88]           cci_daemon_impl::cci_daemon_facade::write_pid
    Use [cci_daemon.h, 90]           cci_daemon_impl::cci_daemon_facade::remove_pid
    Type [cci_daemon.h, 106]         cci_daemon_impl::cci_daemon_facade::m_str_conf
    Type [cci_daemon.h, 107]         cci_daemon_impl::cci_daemon_facade::m_str_pid_path
    Type [cci_daemon.h, 116]         cci_daemon_impl::cci_daemon_facade::config_path
    Type [cci_daemon.h, 117]         cci_daemon_impl::cci_daemon_facade::pid_path
    Type [cci_daemon.h, 122]         path
    Type [cci_daemon.h, 123]         path
    Use [cci_daemon.h, 129]          cci_daemon_impl::cci_daemon_facade::daemon_default_exec
    Type [cci_daemon.h, 149]         cci_daemon_impl::cci_daemon_facade::log_path
    Type [cci_daemon.h, 153]         cci_daemon_impl::cci_daemon_facade::path_config
    Type [cci_daemon.h, 155]         cci_daemon_impl::cci_daemon_facade::path_pid
    Type [cci_daemon.cpp, 14]        cci_daemon_facade::path_config
    Type [cci_daemon.cpp, 15]        cci_daemon_facade::log_path
    Type [cci_daemon.cpp, 16]        cci_daemon_facade::path_pid
    Type [cci_daemon.cpp, 152]       msg
    Type [cci_daemon.cpp, 211]       config_path
    Type [cci_daemon.cpp, 264]       pid_file
    Type [cci_daemon.cpp, 324]       pid_file
    Type [cci_daemon.cpp, 334]       params
    Type [cci_daemon.cpp, 346]       msg
    Type [cci_daemon.cpp, 393]       msg

std::unique_ptr   (Unknown Member Type)
    Declare [cci_pub_and_sub.h, 0]   std
    Type [cci_pub_and_sub.h, 44]     cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::open_broker
    Type [cci_pub_and_sub.h, 59]     cci_daemon_impl::publish_and_subscribe_server::m_consumers
    Type [cci_pub_and_sub.h, 72]     cci_daemon_impl::publish_and_subscribe_server::open_broker
    Type [ps_kafka_facade.cpp, 31]   cci_daemon_impl::ps_kafka_facade::open_broker

T_signature   (Template Parameter)
  Declared as: typename
    Define [cci_shared_lib.h, 85]    cci_daemon_impl::get_function_pointer
    Type [cci_shared_lib.h, 86]      cci_daemon_impl::get_function_pointer
    Cast [cci_shared_lib.h, 104]     cci_daemon_impl::get_function_pointer

testing   (Unknown Class)

time_t   (Typedef)
  Declared as: __time_t
    Type [cci_daemon.cpp, 161]       t

tm   (Struct)
    Type [cci_daemon.cpp, 162]       loc
                                                                     Page 73
                          Macro Cross Reference Report
===============================================================================

__18CXX
    Use [CMakeCCompilerId.c, 5]      CMakeCCompilerId.c

__apple_build_version__
    Use [CMakeCCompilerId.c, 160]    CMakeCCompilerId.c

__apple_build_version__
    Use [CMakeCXXCompilerId.cpp, 154]   CMakeCXXCompilerId.cpp

__ARMCC_VERSION

__ARMCC_VERSION

__BCC__
    Use [CMakeCCompilerId.c, 154]    CMakeCCompilerId.c

__BORLANDC__
    Use [CMakeCCompilerId.c, 49]     CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 55]     CMakeCCompilerId.c

__BORLANDC__
    Use [CMakeCXXCompilerId.cpp, 49]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 55]   CMakeCXXCompilerId.cpp

__clang__
    Use [CMakeCCompilerId.c, 160]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 175]    CMakeCCompilerId.c

__clang__
    Use [CMakeCXXCompilerId.cpp, 154]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 169]   CMakeCXXCompilerId.cpp

__clang_major__
    Use [feature_tests.c, 4]         feature_tests.c
    Use [feature_tests.c, 11]        feature_tests.c
    Use [feature_tests.c, 18]        feature_tests.c
    Use [feature_tests.c, 25]        feature_tests.c

__clang_major__
    Use [feature_tests.cxx, 4]       feature_tests.cxx
    Use [feature_tests.cxx, 11]      feature_tests.cxx
    Use [feature_tests.cxx, 18]      feature_tests.cxx
    Use [feature_tests.cxx, 25]      feature_tests.cxx
    Use [feature_tests.cxx, 32]      feature_tests.cxx
    Use [feature_tests.cxx, 39]      feature_tests.cxx
    Use [feature_tests.cxx, 46]      feature_tests.cxx
    Use [feature_tests.cxx, 53]      feature_tests.cxx
    Use [feature_tests.cxx, 60]      feature_tests.cxx
    Use [feature_tests.cxx, 67]      feature_tests.cxx
    Use [feature_tests.cxx, 74]      feature_tests.cxx
    Use [feature_tests.cxx, 81]      feature_tests.cxx
    Use [feature_tests.cxx, 88]      feature_tests.cxx
    Use [feature_tests.cxx, 95]      feature_tests.cxx
    Use [feature_tests.cxx, 102]     feature_tests.cxx
    Use [feature_tests.cxx, 109]     feature_tests.cxx
                                                                     Page 74
                          Macro Cross Reference Report
===============================================================================
    Use [feature_tests.cxx, 116]     feature_tests.cxx
    Use [feature_tests.cxx, 123]     feature_tests.cxx
    Use [feature_tests.cxx, 130]     feature_tests.cxx
    Use [feature_tests.cxx, 137]     feature_tests.cxx
    Use [feature_tests.cxx, 144]     feature_tests.cxx
    Use [feature_tests.cxx, 151]     feature_tests.cxx
    Use [feature_tests.cxx, 158]     feature_tests.cxx
    Use [feature_tests.cxx, 165]     feature_tests.cxx
    Use [feature_tests.cxx, 172]     feature_tests.cxx
    Use [feature_tests.cxx, 179]     feature_tests.cxx
    Use [feature_tests.cxx, 186]     feature_tests.cxx
    Use [feature_tests.cxx, 193]     feature_tests.cxx
    Use [feature_tests.cxx, 200]     feature_tests.cxx
    Use [feature_tests.cxx, 207]     feature_tests.cxx
    Use [feature_tests.cxx, 214]     feature_tests.cxx
    Use [feature_tests.cxx, 221]     feature_tests.cxx
    Use [feature_tests.cxx, 228]     feature_tests.cxx
    Use [feature_tests.cxx, 235]     feature_tests.cxx
    Use [feature_tests.cxx, 242]     feature_tests.cxx
    Use [feature_tests.cxx, 249]     feature_tests.cxx
    Use [feature_tests.cxx, 256]     feature_tests.cxx
    Use [feature_tests.cxx, 263]     feature_tests.cxx
    Use [feature_tests.cxx, 270]     feature_tests.cxx
    Use [feature_tests.cxx, 277]     feature_tests.cxx
    Use [feature_tests.cxx, 284]     feature_tests.cxx
    Use [feature_tests.cxx, 291]     feature_tests.cxx
    Use [feature_tests.cxx, 298]     feature_tests.cxx
    Use [feature_tests.cxx, 305]     feature_tests.cxx
    Use [feature_tests.cxx, 312]     feature_tests.cxx
    Use [feature_tests.cxx, 319]     feature_tests.cxx
    Use [feature_tests.cxx, 326]     feature_tests.cxx
    Use [feature_tests.cxx, 333]     feature_tests.cxx
    Use [feature_tests.cxx, 340]     feature_tests.cxx
    Use [feature_tests.cxx, 347]     feature_tests.cxx
    Use [feature_tests.cxx, 354]     feature_tests.cxx
    Use [feature_tests.cxx, 361]     feature_tests.cxx
    Use [feature_tests.cxx, 368]     feature_tests.cxx
    Use [feature_tests.cxx, 375]     feature_tests.cxx
    Use [feature_tests.cxx, 382]     feature_tests.cxx
    Use [feature_tests.cxx, 389]     feature_tests.cxx
    Use [feature_tests.cxx, 396]     feature_tests.cxx

__clang_minor__
    Use [feature_tests.c, 4]         feature_tests.c
    Use [feature_tests.c, 11]        feature_tests.c
    Use [feature_tests.c, 18]        feature_tests.c
    Use [feature_tests.c, 25]        feature_tests.c

__clang_minor__
    Use [feature_tests.cxx, 4]       feature_tests.cxx
    Use [feature_tests.cxx, 11]      feature_tests.cxx
    Use [feature_tests.cxx, 18]      feature_tests.cxx
    Use [feature_tests.cxx, 25]      feature_tests.cxx
    Use [feature_tests.cxx, 32]      feature_tests.cxx
    Use [feature_tests.cxx, 39]      feature_tests.cxx
    Use [feature_tests.cxx, 46]      feature_tests.cxx
                                                                     Page 75
                          Macro Cross Reference Report
===============================================================================
    Use [feature_tests.cxx, 53]      feature_tests.cxx
    Use [feature_tests.cxx, 60]      feature_tests.cxx
    Use [feature_tests.cxx, 67]      feature_tests.cxx
    Use [feature_tests.cxx, 74]      feature_tests.cxx
    Use [feature_tests.cxx, 81]      feature_tests.cxx
    Use [feature_tests.cxx, 88]      feature_tests.cxx
    Use [feature_tests.cxx, 95]      feature_tests.cxx
    Use [feature_tests.cxx, 102]     feature_tests.cxx
    Use [feature_tests.cxx, 109]     feature_tests.cxx
    Use [feature_tests.cxx, 116]     feature_tests.cxx
    Use [feature_tests.cxx, 123]     feature_tests.cxx
    Use [feature_tests.cxx, 130]     feature_tests.cxx
    Use [feature_tests.cxx, 137]     feature_tests.cxx
    Use [feature_tests.cxx, 144]     feature_tests.cxx
    Use [feature_tests.cxx, 151]     feature_tests.cxx
    Use [feature_tests.cxx, 158]     feature_tests.cxx
    Use [feature_tests.cxx, 165]     feature_tests.cxx
    Use [feature_tests.cxx, 172]     feature_tests.cxx
    Use [feature_tests.cxx, 179]     feature_tests.cxx
    Use [feature_tests.cxx, 186]     feature_tests.cxx
    Use [feature_tests.cxx, 193]     feature_tests.cxx
    Use [feature_tests.cxx, 200]     feature_tests.cxx
    Use [feature_tests.cxx, 207]     feature_tests.cxx
    Use [feature_tests.cxx, 214]     feature_tests.cxx
    Use [feature_tests.cxx, 221]     feature_tests.cxx
    Use [feature_tests.cxx, 228]     feature_tests.cxx
    Use [feature_tests.cxx, 235]     feature_tests.cxx
    Use [feature_tests.cxx, 242]     feature_tests.cxx
    Use [feature_tests.cxx, 249]     feature_tests.cxx
    Use [feature_tests.cxx, 256]     feature_tests.cxx
    Use [feature_tests.cxx, 263]     feature_tests.cxx
    Use [feature_tests.cxx, 270]     feature_tests.cxx
    Use [feature_tests.cxx, 277]     feature_tests.cxx
    Use [feature_tests.cxx, 284]     feature_tests.cxx
    Use [feature_tests.cxx, 291]     feature_tests.cxx
    Use [feature_tests.cxx, 298]     feature_tests.cxx
    Use [feature_tests.cxx, 305]     feature_tests.cxx
    Use [feature_tests.cxx, 312]     feature_tests.cxx
    Use [feature_tests.cxx, 319]     feature_tests.cxx
    Use [feature_tests.cxx, 326]     feature_tests.cxx
    Use [feature_tests.cxx, 333]     feature_tests.cxx
    Use [feature_tests.cxx, 340]     feature_tests.cxx
    Use [feature_tests.cxx, 347]     feature_tests.cxx
    Use [feature_tests.cxx, 354]     feature_tests.cxx
    Use [feature_tests.cxx, 361]     feature_tests.cxx
    Use [feature_tests.cxx, 368]     feature_tests.cxx
    Use [feature_tests.cxx, 375]     feature_tests.cxx
    Use [feature_tests.cxx, 382]     feature_tests.cxx
    Use [feature_tests.cxx, 389]     feature_tests.cxx
    Use [feature_tests.cxx, 396]     feature_tests.cxx

__CLASSIC_C__
    Use [CMakeCCompilerId.c, 8]      CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 535]    CMakeCCompilerId.c
                                                                     Page 76
                          Macro Cross Reference Report
===============================================================================

__CODEGEARC_VERSION__
    Use [CMakeCCompilerId.c, 49]     CMakeCCompilerId.c

__CODEGEARC_VERSION__
    Use [CMakeCXXCompilerId.cpp, 49]   CMakeCXXCompilerId.cpp

__COMO__
    Use [CMakeCXXCompilerId.cpp, 12]   CMakeCXXCompilerId.cpp

__COMPILER_VER__
    Use [CMakeCCompilerId.c, 107]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 114]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 121]    CMakeCCompilerId.c

__COMPILER_VER__
    Use [CMakeCXXCompilerId.cpp, 107]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 114]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 121]   CMakeCXXCompilerId.cpp

__cplusplus
    Use [CMakeCCompilerId.c, 1]      CMakeCCompilerId.c

__cplusplus
    Use [CMakeCXXCompilerId.cpp, 4]   CMakeCXXCompilerId.cpp

__CRAYXC
    Use [CMakeCCompilerId.c, 292]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 554]    main

__CRAYXC
    Use [CMakeCXXCompilerId.cpp, 279]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 527]   main

__CRAYXE
    Use [CMakeCCompilerId.c, 292]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 554]    main

__CRAYXE
    Use [CMakeCXXCompilerId.cpp, 279]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 527]   main

__CYGWIN__

__CYGWIN__

__DECC
    Use [CMakeCCompilerId.c, 100]    CMakeCCompilerId.c

__DECCXX
    Use [CMakeCXXCompilerId.cpp, 100]   CMakeCXXCompilerId.cpp

__FCC_VERSION
    Use [CMakeCCompilerId.c, 148]    CMakeCCompilerId.c
                                                                     Page 77
                          Macro Cross Reference Report
===============================================================================

__fcc_version
    Use [CMakeCCompilerId.c, 148]    CMakeCCompilerId.c

__FCC_VERSION
    Use [CMakeCXXCompilerId.cpp, 148]   CMakeCXXCompilerId.cpp

__fcc_version
    Use [CMakeCXXCompilerId.cpp, 148]   CMakeCXXCompilerId.cpp

__FUJITSU
    Use [CMakeCCompilerId.c, 148]    CMakeCCompilerId.c

__FUJITSU
    Use [CMakeCXXCompilerId.cpp, 148]   CMakeCXXCompilerId.cpp

__GNUC__
  Declared as: 2
    Use [CMakeCCompilerId.c, 189]    CMakeCCompilerId.c
    Use [CMakeCXXCompilerId.cpp, 183]   CMakeCXXCompilerId.cpp

__GNUC_MINOR__
  Declared as: 7
    Use [CMakeCCompilerId.c, 192]    CMakeCCompilerId.c
    Use [CMakeCXXCompilerId.cpp, 186]   CMakeCXXCompilerId.cpp

__GNUC_PATCHLEVEL__
    Use [CMakeCCompilerId.c, 195]    CMakeCCompilerId.c

__GNUC_PATCHLEVEL__
    Use [CMakeCXXCompilerId.cpp, 189]   CMakeCXXCompilerId.cpp

__has_feature
    Use [feature_tests.cxx, 4]       feature_tests.cxx
    Use [feature_tests.cxx, 11]      feature_tests.cxx
    Use [feature_tests.cxx, 18]      feature_tests.cxx
    Use [feature_tests.cxx, 25]      feature_tests.cxx
    Use [feature_tests.cxx, 32]      feature_tests.cxx
    Use [feature_tests.cxx, 46]      feature_tests.cxx
    Use [feature_tests.cxx, 53]      feature_tests.cxx
    Use [feature_tests.cxx, 60]      feature_tests.cxx
    Use [feature_tests.cxx, 67]      feature_tests.cxx
    Use [feature_tests.cxx, 74]      feature_tests.cxx
    Use [feature_tests.cxx, 88]      feature_tests.cxx
    Use [feature_tests.cxx, 95]      feature_tests.cxx
    Use [feature_tests.cxx, 102]     feature_tests.cxx
    Use [feature_tests.cxx, 109]     feature_tests.cxx
    Use [feature_tests.cxx, 116]     feature_tests.cxx
    Use [feature_tests.cxx, 123]     feature_tests.cxx
    Use [feature_tests.cxx, 144]     feature_tests.cxx
    Use [feature_tests.cxx, 165]     feature_tests.cxx
    Use [feature_tests.cxx, 179]     feature_tests.cxx
    Use [feature_tests.cxx, 193]     feature_tests.cxx
    Use [feature_tests.cxx, 207]     feature_tests.cxx
    Use [feature_tests.cxx, 214]     feature_tests.cxx
    Use [feature_tests.cxx, 221]     feature_tests.cxx
                                                                     Page 78
                          Macro Cross Reference Report
===============================================================================
    Use [feature_tests.cxx, 235]     feature_tests.cxx
    Use [feature_tests.cxx, 242]     feature_tests.cxx
    Use [feature_tests.cxx, 249]     feature_tests.cxx
    Use [feature_tests.cxx, 256]     feature_tests.cxx
    Use [feature_tests.cxx, 263]     feature_tests.cxx
    Use [feature_tests.cxx, 270]     feature_tests.cxx
    Use [feature_tests.cxx, 277]     feature_tests.cxx
    Use [feature_tests.cxx, 284]     feature_tests.cxx
    Use [feature_tests.cxx, 291]     feature_tests.cxx
    Use [feature_tests.cxx, 305]     feature_tests.cxx
    Use [feature_tests.cxx, 319]     feature_tests.cxx
    Use [feature_tests.cxx, 326]     feature_tests.cxx
    Use [feature_tests.cxx, 340]     feature_tests.cxx
    Use [feature_tests.cxx, 347]     feature_tests.cxx
    Use [feature_tests.cxx, 354]     feature_tests.cxx
    Use [feature_tests.cxx, 361]     feature_tests.cxx
    Use [feature_tests.cxx, 368]     feature_tests.cxx
    Use [feature_tests.cxx, 375]     feature_tests.cxx
    Use [feature_tests.cxx, 382]     feature_tests.cxx
    Use [feature_tests.cxx, 396]     feature_tests.cxx

__HP_aCC
    Use [CMakeCXXCompilerId.cpp, 93]   CMakeCXXCompilerId.cpp

__HP_cc
    Use [CMakeCCompilerId.c, 93]     CMakeCCompilerId.c

__IBMC__
    Use [CMakeCCompilerId.c, 107]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 114]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 121]    CMakeCCompilerId.c

__IBMCPP__
    Use [CMakeCXXCompilerId.cpp, 107]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 114]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 121]   CMakeCXXCompilerId.cpp

__ICC
    Use [CMakeCCompilerId.c, 18]     CMakeCCompilerId.c

__ICC
    Use [CMakeCXXCompilerId.cpp, 18]   CMakeCXXCompilerId.cpp

__INTEL_COMPILER
    Use [CMakeCCompilerId.c, 18]     CMakeCCompilerId.c

__INTEL_COMPILER
    Use [CMakeCXXCompilerId.cpp, 18]   CMakeCXXCompilerId.cpp

__INTEL_COMPILER_BUILD_DATE

__INTEL_COMPILER_BUILD_DATE

__INTEL_COMPILER_UPDATE
                                                                     Page 79
                          Macro Cross Reference Report
===============================================================================

__INTEL_COMPILER_UPDATE

__linux
    Use [CMakeCCompilerId.c, 300]    CMakeCCompilerId.c

__linux
    Use [CMakeCXXCompilerId.cpp, 287]   CMakeCXXCompilerId.cpp

__linux__
  Declared as: 
    Use [CMakeCCompilerId.c, 300]    CMakeCCompilerId.c
    Use [CMakeCXXCompilerId.cpp, 287]   CMakeCXXCompilerId.cpp

__LINUX__

__LINUX__

__PATHCC__
    Use [CMakeCCompilerId.c, 41]     CMakeCCompilerId.c

__PATHCC__
    Use [CMakeCXXCompilerId.cpp, 41]   CMakeCXXCompilerId.cpp

__PATHCC_PATCHLEVEL__

__PATHCC_PATCHLEVEL__

__PGI
    Use [CMakeCCompilerId.c, 128]    CMakeCCompilerId.c

__PGI
    Use [CMakeCXXCompilerId.cpp, 128]   CMakeCXXCompilerId.cpp

__PGIC_PATCHLEVEL__

__PGIC_PATCHLEVEL__

__QNXNTO__
    Use [CMakeCCompilerId.c, 288]    CMakeCCompilerId.c

__QNXNTO__
    Use [CMakeCXXCompilerId.cpp, 275]   CMakeCXXCompilerId.cpp

__SCO_VERSION__
    Use [CMakeCCompilerId.c, 157]    CMakeCCompilerId.c

__SCO_VERSION__
    Use [CMakeCXXCompilerId.cpp, 151]   CMakeCXXCompilerId.cpp

__STDC__
    Use [CMakeCCompilerId.c, 514]    CMakeCCompilerId.c

__STDC_VERSION__
    Use [feature_tests.c, 11]        feature_tests.c
    Use [feature_tests.c, 18]        feature_tests.c
                                                                     Page 80
                          Macro Cross Reference Report
===============================================================================
    Use [feature_tests.c, 25]        feature_tests.c

__STDC_VERSION__
    Use [CMakeCCompilerId.c, 520]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 522]    CMakeCCompilerId.c

__SUNPRO_C
    Use [CMakeCCompilerId.c, 79]     CMakeCCompilerId.c

__SUNPRO_CC
    Use [CMakeCXXCompilerId.cpp, 79]   CMakeCXXCompilerId.cpp

__TI_COMPILER_VERSION__
    Use [CMakeCCompilerId.c, 141]    CMakeCCompilerId.c

__TI_COMPILER_VERSION__
    Use [CMakeCXXCompilerId.cpp, 141]   CMakeCXXCompilerId.cpp

__TINYC__
    Use [CMakeCCompilerId.c, 151]    CMakeCCompilerId.c

__VISUALDSPVERSION__

__VISUALDSPVERSION__

__WATCOMC__
    Use [CMakeCCompilerId.c, 61]     CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 70]     CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 431]    CMakeCCompilerId.c

__WATCOMC__
    Use [CMakeCXXCompilerId.cpp, 61]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 70]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 418]   CMakeCXXCompilerId.cpp

_CRAYC
    Use [CMakeCCompilerId.c, 136]    CMakeCCompilerId.c

_CRAYC
    Use [CMakeCXXCompilerId.cpp, 136]   CMakeCXXCompilerId.cpp

_M_ARM

_M_ARM

_M_I86

_M_I86

_M_IA64

_M_IA64

_MSC_BUILD
                                                                     Page 81
                          Macro Cross Reference Report
===============================================================================

_MSC_BUILD

_MSC_FULL_VER

_MSC_FULL_VER

_MSC_VER
    Use [CMakeCCompilerId.c, 402]    CMakeCCompilerId.c

_MSC_VER
    Use [CMakeCXXCompilerId.cpp, 389]   CMakeCXXCompilerId.cpp

_SC_OPEN_MAX
  Declared as: _SC_OPEN_MAX
    Use [cci_daemon.cpp, 106]        cci_daemon_facade::daemonize

_SGI_COMPILER_VERSION

_SGI_COMPILER_VERSION

_WIN32
    Use [CMakeCCompilerId.c, 402]    CMakeCCompilerId.c

_WIN32
    Use [CMakeCXXCompilerId.cpp, 389]   CMakeCXXCompilerId.cpp

ARCHITECTURE_ID
  Declared as: 
    Define [CMakeCCompilerId.c, 443]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 509]    CMakeCCompilerId.c

ARCHITECTURE_ID
  Declared as: 
    Define [CMakeCXXCompilerId.cpp, 430]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 496]   CMakeCXXCompilerId.cpp

C_DIALECT
  Declared as: "90"
    Define [CMakeCCompilerId.c, 525]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 528]    CMakeCCompilerId.c

CCI_ENGINE_VERSION
  Declared as: 1
    Define [cci_daemon_engine.cpp, 1]   cci_daemon_engine.cpp

COMPILER_ID
  Declared as: "GNU"
    Define [CMakeCCompilerId.c, 190]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 283]    CMakeCCompilerId.c

COMPILER_ID
  Declared as: "GNU"
    Define [CMakeCXXCompilerId.cpp, 184]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 270]   CMakeCXXCompilerId.cpp
                                                                     Page 82
                          Macro Cross Reference Report
===============================================================================

COMPILER_VERSION_MAJOR
  Declared as: DEC(__GNUC__)
    Define [CMakeCCompilerId.c, 191]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 469]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 473]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 545]    main

COMPILER_VERSION_MAJOR
  Declared as: DEC(__GNUC__)
    Define [CMakeCXXCompilerId.cpp, 185]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 456]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 460]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 518]   main

COMPILER_VERSION_MINOR
  Declared as: DEC(__GNUC_MINOR__)
    Define [CMakeCCompilerId.c, 193]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 474]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 475]    CMakeCCompilerId.c

COMPILER_VERSION_MINOR
  Declared as: DEC(__GNUC_MINOR__)
    Define [CMakeCXXCompilerId.cpp, 187]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 461]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 462]   CMakeCXXCompilerId.cpp

COMPILER_VERSION_PATCH
    Use [CMakeCCompilerId.c, 476]    CMakeCCompilerId.c

COMPILER_VERSION_PATCH
    Use [CMakeCXXCompilerId.cpp, 463]   CMakeCXXCompilerId.cpp

COMPILER_VERSION_TWEAK

COMPILER_VERSION_TWEAK

const

cxx_aggregate_nsdmi
    Use [feature_tests.cxx, 4]       feature_tests.cxx

cxx_alias_templates
    Use [feature_tests.cxx, 11]      feature_tests.cxx

cxx_alignas
    Use [feature_tests.cxx, 18]      feature_tests.cxx
    Use [feature_tests.cxx, 25]      feature_tests.cxx

cxx_attributes
    Use [feature_tests.cxx, 32]      feature_tests.cxx

cxx_auto_type
    Use [feature_tests.cxx, 46]      feature_tests.cxx
                                                                     Page 83
                          Macro Cross Reference Report
===============================================================================

cxx_binary_literals
    Use [feature_tests.cxx, 53]      feature_tests.cxx

cxx_constexpr
    Use [feature_tests.cxx, 60]      feature_tests.cxx

cxx_contextual_conversions
    Use [feature_tests.cxx, 67]      feature_tests.cxx

cxx_decltype
    Use [feature_tests.cxx, 74]      feature_tests.cxx

cxx_decltype_incomplete_return_types
    Use [feature_tests.cxx, 88]      feature_tests.cxx

cxx_default_function_template_args
    Use [feature_tests.cxx, 95]      feature_tests.cxx

cxx_defaulted_functions
    Use [feature_tests.cxx, 102]     feature_tests.cxx
    Use [feature_tests.cxx, 109]     feature_tests.cxx

cxx_delegating_constructors
    Use [feature_tests.cxx, 116]     feature_tests.cxx

cxx_deleted_functions
    Use [feature_tests.cxx, 123]     feature_tests.cxx

cxx_explicit_conversions
    Use [feature_tests.cxx, 144]     feature_tests.cxx

cxx_generalized_initializers
    Use [feature_tests.cxx, 179]     feature_tests.cxx
    Use [feature_tests.cxx, 361]     feature_tests.cxx

cxx_inheriting_constructors
    Use [feature_tests.cxx, 193]     feature_tests.cxx

cxx_init_captures
    Use [feature_tests.cxx, 214]     feature_tests.cxx

cxx_lambdas
    Use [feature_tests.cxx, 207]     feature_tests.cxx

cxx_local_type_template_args
    Use [feature_tests.cxx, 221]     feature_tests.cxx

cxx_noexcept
    Use [feature_tests.cxx, 235]     feature_tests.cxx

cxx_nonstatic_member_init
    Use [feature_tests.cxx, 242]     feature_tests.cxx

cxx_nullptr
    Use [feature_tests.cxx, 249]     feature_tests.cxx
                                                                     Page 84
                          Macro Cross Reference Report
===============================================================================

cxx_override_control
    Use [feature_tests.cxx, 165]     feature_tests.cxx
    Use [feature_tests.cxx, 256]     feature_tests.cxx

cxx_range_for
    Use [feature_tests.cxx, 263]     feature_tests.cxx

cxx_raw_string_literals
    Use [feature_tests.cxx, 270]     feature_tests.cxx

cxx_reference_qualified_functions
    Use [feature_tests.cxx, 277]     feature_tests.cxx

cxx_relaxed_constexpr
    Use [feature_tests.cxx, 284]     feature_tests.cxx

cxx_return_type_deduction
    Use [feature_tests.cxx, 291]     feature_tests.cxx

cxx_rvalue_references
    Use [feature_tests.cxx, 305]     feature_tests.cxx

cxx_static_assert
    Use [feature_tests.cxx, 319]     feature_tests.cxx

cxx_strong_enums
    Use [feature_tests.cxx, 326]     feature_tests.cxx

cxx_thread_local
    Use [feature_tests.cxx, 340]     feature_tests.cxx

cxx_trailing_return
    Use [feature_tests.cxx, 347]     feature_tests.cxx

cxx_unicode_literals
    Use [feature_tests.cxx, 354]     feature_tests.cxx

cxx_unrestricted_unions
    Use [feature_tests.cxx, 368]     feature_tests.cxx

cxx_user_literals
    Use [feature_tests.cxx, 375]     feature_tests.cxx

cxx_variable_templates
    Use [feature_tests.cxx, 382]     feature_tests.cxx

cxx_variadic_templates
    Use [feature_tests.cxx, 396]     feature_tests.cxx

DEC
  Declared as: 
 ('0' + (((n) / 10000000)%10)), 
 ('0' + (((n) / 1000000)%10...
    Define [CMakeCCompilerId.c, 447]   CMakeCCompilerId.c

DEC
  Declared as: 
 ('0' + (((n) / 10000000)%10)), 
 ('0' + (((n) / 1000000)%10...
                                                                     Page 85
                          Macro Cross Reference Report
===============================================================================
    Define [CMakeCXXCompilerId.cpp, 434]   CMakeCXXCompilerId.cpp

F_GETFD
  Declared as: 1
    Use [cci_daemon.cpp, 279]        cci_daemon_facade::write_pid

F_SETFD
  Declared as: 2
    Use [cci_daemon.cpp, 286]        cci_daemon_facade::write_pid

F_SETLK
  Declared as: 6
    Use [cci_daemon.cpp, 259]        cci_daemon_facade::lock_region

F_WRLCK
  Declared as: 1
    Use [cci_daemon.cpp, 290]        cci_daemon_facade::write_pid

FD_CLOEXEC
  Declared as: 1
    Use [cci_daemon.cpp, 284]        cci_daemon_facade::write_pid

HEX
  Declared as: 
 ('0' + ((n)>>28 & 0xF)), 
 ('0' + ((n)>>24 & 0xF)), 
 ('0' ...
    Define [CMakeCCompilerId.c, 458]   CMakeCCompilerId.c

HEX
  Declared as: 
 ('0' + ((n)>>28 & 0xF)), 
 ('0' + ((n)>>24 & 0xF)), 
 ('0' ...
    Define [CMakeCXXCompilerId.cpp, 445]   CMakeCXXCompilerId.cpp

ID_VOID_MAIN
    Use [CMakeCCompilerId.c, 532]    CMakeCCompilerId.c

linux
  Declared as: 
    Use [CMakeCCompilerId.c, 300]    CMakeCCompilerId.c
    Use [CMakeCXXCompilerId.cpp, 287]   CMakeCXXCompilerId.cpp

LOG_ERR
  Declared as: 3
    Use [cci_daemon_main.cpp, 27]    main

LOG_INFO
  Declared as: 6
    Use [cci_daemon.h, 190]          cci_daemon_impl::sigterm_handler
    Use [cci_daemon.cpp, 350]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 382]        cci_daemon_facade::daemon_default_exec

LOG_PID
  Declared as: 0x01
    Use [cci_daemon_main.cpp, 18]    main
    Use [cci_daemon.cpp, 337]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 350]        cci_daemon_facade::daemon_default_exec

LOG_USER
  Declared as: (1<<3)
                                                                     Page 86
                          Macro Cross Reference Report
===============================================================================
    Use [cci_daemon_main.cpp, 27]    main
    Use [cci_daemon_main.cpp, 31]    main
    Use [cci_daemon_main.cpp, 32]    main
    Use [cci_daemon.h, 189]          cci_daemon_impl::sigterm_handler
    Use [cci_daemon.h, 190]          cci_daemon_impl::sigterm_handler
    Use [cci_daemon.cpp, 350]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 381]        cci_daemon_facade::daemon_default_exec
    Use [cci_daemon.cpp, 382]        cci_daemon_facade::daemon_default_exec

O_CREAT
  Declared as: 0100
    Use [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid

O_RDWR
  Declared as: 02
    Use [cci_daemon.cpp, 124]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid

PLATFORM_ID
  Declared as: "Linux"
    Define [CMakeCCompilerId.c, 301]   CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 508]    CMakeCCompilerId.c

PLATFORM_ID
  Declared as: "Linux"
    Define [CMakeCXXCompilerId.cpp, 288]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 495]   CMakeCXXCompilerId.cpp

RTLD_NOW
  Declared as: 0x00002
    Use [cci_shared_lib.h, 66]       cci_daemon_impl::load

S_IRUSR
  Declared as: __S_IREAD
    Use [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid

S_IWUSR
  Declared as: __S_IWRITE
    Use [cci_daemon.cpp, 271]        cci_daemon_facade::write_pid

sa_handler
  Declared as: __sigaction_handler.sa_handler
    Use [cci_daemon.cpp, 362]        cci_daemon_facade::daemon_default_exec

SA_RESTART
  Declared as: 0x10000000
    Use [cci_daemon.cpp, 361]        cci_daemon_facade::daemon_default_exec

SEEK_SET
  Declared as: 0
    Use [cci_daemon.cpp, 290]        cci_daemon_facade::write_pid

SIG_ERR
  Declared as: ((__sighandler_t) -1)
    Use [cci_daemon.cpp, 364]        cci_daemon_facade::daemon_default_exec
                                                                     Page 87
                          Macro Cross Reference Report
===============================================================================

SIGHUP
  Declared as: 1
    Use [cci_daemon.cpp, 363]        cci_daemon_facade::daemon_default_exec

SIGTERM
  Declared as: 15
    Use [cci_daemon.cpp, 364]        cci_daemon_facade::daemon_default_exec

SIMULATE_ID
    Use [CMakeCCompilerId.c, 284]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 548]    main

SIMULATE_ID
    Use [CMakeCXXCompilerId.cpp, 271]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 521]   main

SIMULATE_VERSION_MAJOR
    Use [CMakeCCompilerId.c, 487]    CMakeCCompilerId.c
    Use [CMakeCCompilerId.c, 551]    main

SIMULATE_VERSION_MAJOR
    Use [CMakeCXXCompilerId.cpp, 474]   CMakeCXXCompilerId.cpp
    Use [CMakeCXXCompilerId.cpp, 524]   main

SIMULATE_VERSION_MINOR

SIMULATE_VERSION_MINOR

SIMULATE_VERSION_PATCH

SIMULATE_VERSION_PATCH

SIMULATE_VERSION_TWEAK

SIMULATE_VERSION_TWEAK

STDERR_FILENO
  Declared as: 2
    Use [cci_daemon.cpp, 128]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 128]        cci_daemon_facade::daemonize

STDIN_FILENO
  Declared as: 0
    Use [cci_daemon.cpp, 122]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 126]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 127]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 128]        cci_daemon_facade::daemonize

STDOUT_FILENO
  Declared as: 1
    Use [cci_daemon.cpp, 127]        cci_daemon_facade::daemonize
    Use [cci_daemon.cpp, 127]        cci_daemon_facade::daemonize

STRINGIFY
  Declared as: STRINGIFY_HELPER(X)
                                                                     Page 88
                          Macro Cross Reference Report
===============================================================================
    Define [CMakeCCompilerId.c, 297]   CMakeCCompilerId.c

STRINGIFY
  Declared as: STRINGIFY_HELPER(X)
    Define [CMakeCXXCompilerId.cpp, 284]   CMakeCXXCompilerId.cpp

STRINGIFY_HELPER
  Declared as: #X
    Define [CMakeCCompilerId.c, 296]   CMakeCCompilerId.c
    Macro [CMakeCCompilerId.c, 297]   STRINGIFY

STRINGIFY_HELPER
  Declared as: #X
    Define [CMakeCXXCompilerId.cpp, 283]   CMakeCXXCompilerId.cpp
    Macro [CMakeCXXCompilerId.cpp, 284]   STRINGIFY

TS_BUF_SIZE
  Declared as: sizeof("YYYY-MM-DD HH:MM:SS")
    Use [cci_daemon.cpp, 160]        cci_daemon_facade::log_message
    Use [cci_daemon.cpp, 167]        cci_daemon_facade::log_message

volatile
                                                                     Page 89
                      Include File Cross Reference Report
===============================================================================

cassert
    Include [cci_stack_trace.h, 8]   cci_stack_trace.h
    Include [cci_shared_lib.h, 11]   cci_shared_lib.h

cci_daemon.h
    Include [test_shared_lib.cpp, 7]   test_shared_lib.cpp
    Include [cci_test_daemon.h, 8]   cci_test_daemon.h
    Include [cci_daemon_main.cpp, 3]   cci_daemon_main.cpp
    Include [cci_daemon.cpp, 1]      cci_daemon.cpp

cci_daemon_generic.h
    Include [cci_daemon_kernel.h, 10]   cci_daemon_kernel.h
    Include [test_shared_lib.cpp, 8]   test_shared_lib.cpp
    Include [cci_test_daemon.h, 9]   cci_test_daemon.h

cci_daemon_kernel.h
    Include [ps_kafka_facade.cpp, 6]   ps_kafka_facade.cpp
    Include [test_shared_lib.cpp, 11]   test_shared_lib.cpp
    Include [cci_daemon.h, 31]       cci_daemon.h
    Include [cci_daemon_engine.cpp, 3]   cci_daemon_engine.cpp

cci_daemon_plugin.h
    Include [cci_daemon_kernel.h, 11]   cci_daemon_kernel.h
    Include [cci_daemon_plugin.cpp, 4]   cci_daemon_plugin.cpp
    Include [test_shared_lib.cpp, 12]   test_shared_lib.cpp

cci_pub_and_sub.h
    Include [cci_daemon_kernel.h, 12]   cci_daemon_kernel.h

cci_shared_lib.h
    Include [cci_daemon_plugin.h, 8]   cci_daemon_plugin.h
    Include [test_shared_lib.cpp, 9]   test_shared_lib.cpp
    Include [cci_daemon.h, 30]       cci_daemon.h

cci_stack_trace.h
    Include [test_shared_lib.cpp, 10]   test_shared_lib.cpp
    Include [cci_daemon.h, 29]       cci_daemon.h
    Include [cci_stack_trace.cpp, 4]   cci_stack_trace.cpp

cci_test_daemon.h
    Include [test_cci_daemon.cpp, 5]   test_cci_daemon.cpp

confname.h

cstdio
    Include [cci_stack_trace.h, 6]   cci_stack_trace.h
    Include [cci_daemon.h, 11]       cci_daemon.h

cstdlib
    Include [cci_stack_trace.h, 7]   cci_stack_trace.h
    Include [cci_daemon.h, 10]       cci_daemon.h

cxxabi.h
    Include [cci_stack_trace.h, 11]   cci_stack_trace.h
    Include [cci_daemon_main.cpp, 5]   cci_daemon_main.cpp
                                                                     Page 90
                      Include File Cross Reference Report
===============================================================================

dlfcn.h
    Include [cci_stack_trace.h, 10]   cci_stack_trace.h
    Include [cci_shared_lib.h, 9]    cci_shared_lib.h

dlfcn.h

exception
    Include [ps_kafka_facade.cpp, 4]   ps_kafka_facade.cpp
    Include [cci_daemon.h, 26]       cci_daemon.h

execinfo.h
    Include [cci_stack_trace.h, 9]   cci_stack_trace.h
    Include [cci_daemon_main.cpp, 4]   cci_daemon_main.cpp
    Include [cci_daemon.h, 9]        cci_daemon.h

fcntl-linux.h

fcntl.h
    Include [cci_daemon.h, 13]       cci_daemon.h

fstream
    Include [cci_daemon.h, 23]       cci_daemon.h

gtest.h
    Include [test_shared_lib.cpp, 5]   test_shared_lib.cpp
    Include [cci_test_daemon.h, 6]   cci_test_daemon.h

iostream
    Include [cci_daemon_kernel.h, 7]   cci_daemon_kernel.h
    Include [cci_stack_trace.h, 13]   cci_stack_trace.h
    Include [cci_daemon_plugin.cpp, 3]   cci_daemon_plugin.cpp
    Include [cci_daemon.h, 21]       cci_daemon.h

list
    Include [cci_pub_and_sub.h, 4]   cci_pub_and_sub.h

map
    Include [cci_daemon_kernel.h, 6]   cci_daemon_kernel.h
    Include [cci_daemon_plugin.h, 5]   cci_daemon_plugin.h

memory
    Include [cci_pub_and_sub.h, 6]   cci_pub_and_sub.h
    Include [cci_pub_and_sub.h, 8]   cci_pub_and_sub.h
    Include [cci_daemon.h, 25]       cci_daemon.h

sigaction.h

signal.h
    Include [cci_daemon.h, 15]       cci_daemon.h

signum.h

sstream
    Include [cci_stack_trace.h, 14]   cci_stack_trace.h
    Include [cci_shared_lib.h, 8]    cci_shared_lib.h
                                                                     Page 91
                      Include File Cross Reference Report
===============================================================================
    Include [cci_daemon.h, 22]       cci_daemon.h

stat.h
    Include [cci_daemon.h, 12]       cci_daemon.h
    Include [cci_daemon.h, 19]       cci_daemon.h

stdexcept
    Include [cci_pub_and_sub.h, 7]   cci_pub_and_sub.h
    Include [cci_shared_lib.h, 7]    cci_shared_lib.h
    Include [ps_kafka_facade.cpp, 3]   ps_kafka_facade.cpp

string
    Include [cci_pub_and_sub.h, 5]   cci_pub_and_sub.h
    Include [cci_daemon_kernel.h, 5]   cci_daemon_kernel.h
    Include [cci_shared_lib.h, 6]    cci_shared_lib.h
    Include [cci_daemon_plugin.h, 4]   cci_daemon_plugin.h
    Include [cci_daemon.h, 24]       cci_daemon.h

string.h
    Include [cci_daemon.h, 16]       cci_daemon.h

syslog.h

syslog.h
    Include [cci_daemon.h, 18]       cci_daemon.h

time.h
    Include [cci_daemon.h, 14]       cci_daemon.h

unistd.h
    Include [cci_daemon.h, 17]       cci_daemon.h

utility
    Include [cci_daemon_kernel.h, 8]   cci_daemon_kernel.h

vector
    Include [cci_stack_trace.h, 15]   cci_stack_trace.h
                                                                     Page 92
                         Simple Invocation Tree Report
===============================================================================

cci_daemon_facade::close_log
| fclose

cci_daemon_facade::daemon_default_exec
| m_b_opened
| cci_daemon_facade::open_log
| cci_daemon_facade::log_message
| cci_daemon_facade::read_config_file
| config_path
| syslog
| sigemptyset
| sigaction
| cci_daemon_impl::chromatic_terminate
| signal
| cci_daemon_facade::write_pid
| pid_path
| sleep
| openlog
| closelog
| cci_daemon_facade::close_log
| cci_daemon_facade::remove_pid

cci_daemon_facade::daemonize
| fork
| _exit
| setsid
| flags
| umask
| chdir
| sysconf
| close
| open
| dup2

cci_daemon_facade::lock_region
| fcntl

cci_daemon_facade::log_message
| time
| localtime
| strftime
| fprintf
| c_str
| _bt
| b_ret

cci_daemon_facade::open_log
| umask
| fopen
| c_str
| setbuf
| b_ret

cci_daemon_facade::read_config_file
                                                                     Page 93
                         Simple Invocation Tree Report
===============================================================================
| fopen
| c_str
| fgets
| strlen
| cci_daemon_facade::log_message
| str
| fclose
| _bt

cci_daemon_facade::remove_pid
| _bt
| std::remove
| c_str

cci_daemon_facade::write_pid
| open
| c_str
| cci_daemon_facade::log_message
| fcntl
| cci_daemon_facade::lock_region
| ftruncate
| b_ret
| snprintf
| getpid
| write
| strlen
| _bt

cci_daemon_facade::~cci_daemon_facade
| _bt

cci_daemon_impl::cci_daemon_facade::_bt
| cci_daemon_impl::cci_daemon_facade::backtrace
| cci_daemon_impl::print_stacktrace

cci_daemon_impl::cci_daemon_facade::_btw
| cci_daemon_impl::cci_daemon_facade::backtrace
| cci_daemon_impl::print_walk_backtrace

cci_daemon_impl::cci_daemon_kernel::destroy_contexts
| clear_context

cci_daemon_impl::cci_daemon_kernel::load_plugin
| find
| end
| cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
| insert
| std::make_pair
| register_plugin
| get_engine_version
| cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin

cci_daemon_impl::cci_daemon_plugin::clear_context

cci_daemon_impl::cci_daemon_plugin::get_engine_version
                                                                     Page 94
                         Simple Invocation Tree Report
===============================================================================

cci_daemon_impl::cci_daemon_plugin::register_plugin

cci_daemon_impl::chromatic_terminate
| getenv
| abort
| exit

cci_daemon_impl::clear_context
| cci_daemon_impl::cci_daemon_kernel::get_pb_server
| cci_daemon_impl::publish_and_subscribe_server::consumers

cci_daemon_impl::get_function_pointer
| dlerror
| assert
| dlsym
| c_str
| std::runtime_error

cci_daemon_impl::load
| str
| dlopen
| c_str
| std::runtime_error

cci_daemon_impl::print_stacktrace
| fprintf
| backtrace
| backtrace_symbols
| malloc
| abi::__cxa_demangle
| free

cci_daemon_impl::print_walk_backtrace
| cci_daemon_impl::get_ebp
| fprintf
| dladdr

cci_daemon_impl::ps_kafka_facade::open_broker
| cci_daemon_impl::ps_kafka_facade::can_open_broker
| std::runtime_error
| std::make_unique

cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer
| push_back

cci_daemon_impl::publish_and_subscribe_server::consumers
| get

cci_daemon_impl::publish_and_subscribe_server::open_broker
| can_open_broker
| open_broker
| std::runtime_error

cci_daemon_impl::register_plugin
                                                                     Page 95
                         Simple Invocation Tree Report
===============================================================================
| cci_daemon_impl::ps_kafka_facade::ps_kafka_facade
| cci_daemon_impl::cci_daemon_kernel::get_pb_server
| cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer

cci_daemon_impl::sigsev_handler
| backtrace
| log_p
| fprintf
| backtrace_symbols_fd
| exit

cci_daemon_impl::sigterm_handler
| openlog
| syslog
| closelog
| exit

cci_daemon_impl::unload
| dlclose

main
| InitGoogleTest
| RUN_ALL_TESTS

main
| std::make_unique
| load_plugin
| destroy_contexts

main
| std::make_unique
| backtrace
| daemonize
| std::set_terminate
| cci_daemon_impl::chromatic_terminate
| syslog
| openlog
| closelog
| daemon_default_exec
| exit

try_open_server
| cci_daemon_impl::publish_and_subscribe_server::open_broker
| what
                                                                     Page 96
                                 Import Report
===============================================================================
                                                                     Page 97
                         Program Unit Complexity Report
===============================================================================

b_ret
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

b_ret
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

b_ret
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_facade::cci_daemon_facade
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_facade::close_log
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_facade::daemon_default_exec
   Cyclomatic:                       10
   Modified Cyclomatic:              10
   Strict Cyclomatic:                10
   Essential:                         1
   Max Nesting:                       3
   Count Path:                      144

cci_daemon_facade::daemonize
   Cyclomatic:                       27
   Modified Cyclomatic:              17
   Strict Cyclomatic:                27
   Essential:                        16
   Max Nesting:                       4
   Count Path:                       55
                                                                     Page 98
                         Program Unit Complexity Report
===============================================================================

cci_daemon_facade::lock_region
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_facade::log_message
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 4
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        3

cci_daemon_facade::open_log
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_facade::read_config_file
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        3

cci_daemon_facade::remove_pid
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_facade::write_pid
   Cyclomatic:                       10
   Modified Cyclomatic:              10
   Strict Cyclomatic:                11
   Essential:                         5
   Max Nesting:                       2
   Count Path:                       27

cci_daemon_facade::~cci_daemon_facade
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 99
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::_bt
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::cci_daemon_facade::_btw
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::cci_daemon_facade::backtrace
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::backtrace
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::config_path
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::config_path
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::flags
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 100
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::cci_daemon_facade::flags
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::pid_path
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::pid_path
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_facade::proc
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_kernel::destroy_contexts
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::cci_daemon_kernel::get_pb_server
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_kernel::load_plugin
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
                                                                     Page 101
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_plugin::clear_context
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_plugin::get_engine_version
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_plugin::register_plugin
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::cci_shared_lib::cci_shared_lib
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 102
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::chromatic_terminate
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 3
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::clear_context
   Cyclomatic:                        4
   Modified Cyclomatic:               4
   Strict Cyclomatic:                 4
   Essential:                         1
   Max Nesting:                       3
   Count Path:                        4

cci_daemon_impl::get_ebp
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::get_engine_version
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::get_function_pointer
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::load
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::operator<<
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 103
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::print_stacktrace
   Cyclomatic:                        9
   Modified Cyclomatic:               9
   Strict Cyclomatic:                13
   Essential:                         7
   Max Nesting:                       3
   Count Path:                       17

cci_daemon_impl::print_walk_backtrace
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::ps_kafka_facade::can_open_broker
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::ps_kafka_facade::open_broker
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::publish_and_subscribe_server::consumers
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::publish_and_subscribe_server::open_broker
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
                                                                     Page 104
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::register_plugin
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::sighup_handler
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

cci_daemon_impl::sigsev_handler
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

cci_daemon_impl::sigterm_handler
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 105
                         Program Unit Complexity Report
===============================================================================

cci_daemon_impl::unload
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

clear_context_address
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

get_engine_version_address
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

log_p
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

m_b_opened
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

m_backtrace
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

m_service_proc
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 106
                         Program Unit Complexity Report
===============================================================================

m_str_conf
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

m_str_filename
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

m_str_pid_path
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 107
                         Program Unit Complexity Report
===============================================================================

main
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

register_plugin_address
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

try_open_server
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        2
                                                                     Page 108
                         Project Metrics Summary Report
===============================================================================
Classes:                     10
Files:                       20
Program Units:               75
Lines:                     2931
Lines Blank:                361
Lines Code:                1030
Lines Comment:              253
Lines Inactive:             838
Executable Statements:      322
Declarative Statements:     308
Ratio Comment/Code:        0.25
                                                                     Page 109
                              Program Unit Metrics
===============================================================================

b_ret (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

b_ret (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

b_ret (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_facade::cci_daemon_facade (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_facade::close_log (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 110
                              Program Unit Metrics
===============================================================================

cci_daemon_facade::daemon_default_exec (Public Function)
   Lines:                   71
   Comment Lines:           5
   Blank Lines:             14
   Code Lines:              52
   Inactive Lines:          0
   Executable Code Lines:   34
   Declarative Code Lines:  8
   Execution Statements:    31
   Declaration Statements:  7
   Ratio Comment/Code:      0.10

cci_daemon_facade::daemonize (Public Function)
   Lines:                   113
   Comment Lines:           10
   Blank Lines:             10
   Code Lines:              93
   Inactive Lines:          0
   Executable Code Lines:   59
   Declarative Code Lines:  4
   Execution Statements:    67
   Declaration Statements:  3
   Ratio Comment/Code:      0.11

cci_daemon_facade::lock_region (Public Function)
   Lines:                   16
   Comment Lines:           0
   Blank Lines:             3
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  6
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

cci_daemon_facade::log_message (Public Function)
   Lines:                   30
   Comment Lines:           2
   Blank Lines:             6
   Code Lines:              23
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  6
   Execution Statements:    11
   Declaration Statements:  5
   Ratio Comment/Code:      0.09

cci_daemon_facade::open_log (Public Function)
   Lines:                   18
   Comment Lines:           1
   Blank Lines:             5
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  3
   Execution Statements:    7
   Declaration Statements:  2
   Ratio Comment/Code:      0.08
                                                                     Page 111
                              Program Unit Metrics
===============================================================================

cci_daemon_facade::read_config_file (Public Function)
   Lines:                   33
   Comment Lines:           2
   Blank Lines:             7
   Code Lines:              24
   Inactive Lines:          0
   Executable Code Lines:   13
   Declarative Code Lines:  4
   Execution Statements:    11
   Declaration Statements:  3
   Ratio Comment/Code:      0.08

cci_daemon_facade::remove_pid (Public Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_facade::write_pid (Public Function)
   Lines:                   58
   Comment Lines:           4
   Blank Lines:             9
   Code Lines:              45
   Inactive Lines:          0
   Executable Code Lines:   29
   Declarative Code Lines:  5
   Execution Statements:    28
   Declaration Statements:  3
   Ratio Comment/Code:      0.09

cci_daemon_facade::~cci_daemon_facade (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::_bt (Protected Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 112
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::cci_daemon_facade::_btw (Protected Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::backtrace (Public Const Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::backtrace (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::cci_daemon_facade (Public Function)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::config_path (Public Const Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 113
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::cci_daemon_facade::config_path (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::flags (Public Const Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::flags (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::operator= (Public Function)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::pid_path (Public Const Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 114
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::cci_daemon_facade::pid_path (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_facade::proc (Public Const Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_kernel::cci_daemon_kernel (Public Function)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_kernel::destroy_contexts (Public Function)
   Lines:                   11
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  2
   Execution Statements:    4
   Declaration Statements:  1
   Ratio Comment/Code:      0.11

cci_daemon_impl::cci_daemon_kernel::get_pb_server (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 115
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::cci_daemon_kernel::load_plugin (Public Function)
   Lines:                   15
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  3
   Execution Statements:    4
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin (Explicit Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin (Public Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    4
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_plugin::clear_context (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_plugin::get_engine_version (Public Const Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 116
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::cci_daemon_plugin::register_plugin (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::cci_daemon_plugin::~cci_daemon_plugin (Public Virtual Function)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             2
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.33

cci_daemon_impl::cci_shared_lib::cci_shared_lib (Explicit Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::chromatic_terminate (Static Function)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.08

cci_daemon_impl::clear_context (Function)
   Lines:                   14
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  2
   Execution Statements:    7
   Declaration Statements:  1
   Ratio Comment/Code:      0.08
                                                                     Page 117
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::get_ebp (Function)
   Lines:                   6
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

cci_daemon_impl::get_engine_version (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::get_function_pointer (Static Function Template)
   Lines:                   20
   Comment Lines:           2
   Blank Lines:             4
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  5
   Execution Statements:    5
   Declaration Statements:  2
   Ratio Comment/Code:      0.14

cci_daemon_impl::load (Static Function)
   Lines:                   18
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              17
   Inactive Lines:          0
   Executable Code Lines:   12
   Declarative Code Lines:  4
   Execution Statements:    5
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

cci_daemon_impl::operator<< (Function)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.20
                                                                     Page 118
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::print_stacktrace (Function)
   Lines:                   80
   Comment Lines:           16
   Blank Lines:             12
   Code Lines:              53
   Inactive Lines:          0
   Executable Code Lines:   36
   Declarative Code Lines:  12
   Execution Statements:    26
   Declaration Statements:  10
   Ratio Comment/Code:      0.30

cci_daemon_impl::print_walk_backtrace (Function)
   Lines:                   27
   Comment Lines:           2
   Blank Lines:             4
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  6
   Execution Statements:    6
   Declaration Statements:  5
   Ratio Comment/Code:      0.10

cci_daemon_impl::ps_kafka_facade::can_open_broker (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::ps_kafka_facade::open_broker (Public Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::ps_kafka_facade::ps_kafka_facade (Public Function)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 119
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::publish_and_subscribe_server::add_publish_subscribe_consumer (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::publish_and_subscribe_server::consumers (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::publish_and_subscribe_server::open_broker (Public Function)
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  2
   Execution Statements:    4
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::publish_and_subscribe_consumer (Public Function)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 120
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  2
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::register_plugin (Function)
   Lines:                   9
   Comment Lines:           2
   Blank Lines:             1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

cci_daemon_impl::sighup_handler (Static Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::sigsev_handler (Static Function)
   Lines:                   19
   Comment Lines:           2
   Blank Lines:             3
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  5
   Execution Statements:    5
   Declaration Statements:  4
   Ratio Comment/Code:      0.14
                                                                     Page 121
                              Program Unit Metrics
===============================================================================

cci_daemon_impl::sigterm_handler (Static Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    4
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

cci_daemon_impl::unload (Static Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

clear_context_address (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

get_engine_version_address (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

log_p (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 122
                              Program Unit Metrics
===============================================================================

m_b_opened (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

m_backtrace (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

m_service_proc (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

m_str_conf (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

m_str_filename (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 123
                              Program Unit Metrics
===============================================================================

m_str_pid_path (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

main (Function)
   Lines:                   21
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              10
   Inactive Lines:          3
   Executable Code Lines:   7
   Declarative Code Lines:  2
   Execution Statements:    6
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

main (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

main (Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

main (Function)
   Lines:                   20
   Comment Lines:           11
   Blank Lines:             2
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      1.57
                                                                     Page 124
                              Program Unit Metrics
===============================================================================

main (Function)
   Lines:                   32
   Comment Lines:           1
   Blank Lines:             11
   Code Lines:              20
   Inactive Lines:          0
   Executable Code Lines:   13
   Declarative Code Lines:  5
   Execution Statements:    11
   Declaration Statements:  4
   Ratio Comment/Code:      0.05

main (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

main (Function)
   Lines:                   23
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              11
   Inactive Lines:          3
   Executable Code Lines:   8
   Declarative Code Lines:  2
   Execution Statements:    7
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

register_plugin_address (Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

try_open_server (Function)
   Lines:                   17
   Comment Lines:           2
   Blank Lines:             2
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  1
   Execution Statements:    4
   Declaration Statements:  0
   Ratio Comment/Code:      0.15
                                                                     Page 125
                                  File Metrics
===============================================================================

cci_daemon.cpp
   Lines:                   405
   Comment Lines:           38
   Blank Lines:             73
   Preprocessor Lines:      2
   Code Lines:              294
   Inactive Lines:          0
   Executable Code Lines:   183
   Declarative Code Lines:  55
   Execution Statements:    166
   Declaration Statements:  53
   Ratio Comment/Code:      0.13
   Units                    19

cci_daemon.h
   Lines:                   217
   Comment Lines:           42
   Blank Lines:             32
   Preprocessor Lines:      24
   Code Lines:              121
   Inactive Lines:          0
   Executable Code Lines:   36
   Declarative Code Lines:  79
   Execution Statements:    29
   Declaration Statements:  65
   Ratio Comment/Code:      0.35
   Units                    17

cci_daemon_engine.cpp
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      2
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
   Units                    0

cci_daemon_generic.h
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             5
   Preprocessor Lines:      4
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  2
   Ratio Comment/Code:      0.33
   Units                    0
                                                                     Page 126
                                  File Metrics
===============================================================================

cci_daemon_kernel.h
   Lines:                   83
   Comment Lines:           14
   Blank Lines:             24
   Preprocessor Lines:      8
   Code Lines:              37
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  15
   Execution Statements:    9
   Declaration Statements:  13
   Ratio Comment/Code:      0.38
   Units                    3

cci_daemon_main.cpp
   Lines:                   42
   Comment Lines:           2
   Blank Lines:             15
   Preprocessor Lines:      4
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   13
   Declarative Code Lines:  5
   Execution Statements:    12
   Declaration Statements:  6
   Ratio Comment/Code:      0.10
   Units                    1

cci_daemon_plugin.cpp
   Lines:                   64
   Comment Lines:           5
   Blank Lines:             17
   Preprocessor Lines:      2
   Code Lines:              40
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  19
   Execution Statements:    5
   Declaration Statements:  44
   Ratio Comment/Code:      0.12
   Units                    7

cci_daemon_plugin.h
   Lines:                   65
   Comment Lines:           14
   Blank Lines:             18
   Preprocessor Lines:      4
   Code Lines:              29
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  20
   Execution Statements:    4
   Declaration Statements:  20
   Ratio Comment/Code:      0.48
   Units                    3
                                                                     Page 127
                                  File Metrics
===============================================================================

cci_pub_and_sub.h
   Lines:                   87
   Comment Lines:           14
   Blank Lines:             26
   Preprocessor Lines:      5
   Code Lines:              42
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  20
   Execution Statements:    6
   Declaration Statements:  17
   Ratio Comment/Code:      0.33
   Units                    6

cci_shared_lib.h
   Lines:                   109
   Comment Lines:           20
   Blank Lines:             30
   Preprocessor Lines:      6
   Code Lines:              53
   Inactive Lines:          0
   Executable Code Lines:   26
   Declarative Code Lines:  23
   Execution Statements:    13
   Declaration Statements:  20
   Ratio Comment/Code:      0.38
   Units                    4

cci_stack_trace.cpp
   Lines:                   129
   Comment Lines:           24
   Blank Lines:             25
   Preprocessor Lines:      1
   Code Lines:              80
   Inactive Lines:          0
   Executable Code Lines:   53
   Declarative Code Lines:  20
   Execution Statements:    34
   Declaration Statements:  20
   Ratio Comment/Code:      0.30
   Units                    3

cci_stack_trace.h
   Lines:                   27
   Comment Lines:           3
   Blank Lines:             7
   Preprocessor Lines:      11
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  6
   Execution Statements:    0
   Declaration Statements:  4
   Ratio Comment/Code:      0.50
   Units                    0
                                                                     Page 128
                                  File Metrics
===============================================================================

cci_test_daemon.h
   Lines:                   16
   Comment Lines:           3
   Blank Lines:             6
   Preprocessor Lines:      4
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00
   Units                    0

CMakeCCompilerId.c
   Lines:                   561
   Comment Lines:           21
   Blank Lines:             23
   Preprocessor Lines:      377
   Code Lines:              22
   Inactive Lines:          397
   Executable Code Lines:   21
   Declarative Code Lines:  15
   Execution Statements:    7
   Declaration Statements:  7
   Ratio Comment/Code:      0.95
   Units                    1

CMakeCXXCompilerId.cpp
   Lines:                   533
   Comment Lines:           24
   Blank Lines:             22
   Preprocessor Lines:      350
   Code Lines:              22
   Inactive Lines:          380
   Executable Code Lines:   23
   Declarative Code Lines:  18
   Execution Statements:    6
   Declaration Statements:  7
   Ratio Comment/Code:      1.09
   Units                    1

feature_tests.c
   Lines:                   34
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      12
   Code Lines:              15
   Inactive Lines:          4
   Executable Code Lines:   19
   Declarative Code Lines:  19
   Execution Statements:    2
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
   Units                    1
                                                                     Page 129
                                  File Metrics
===============================================================================

feature_tests.cxx
   Lines:                   405
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      171
   Code Lines:              174
   Inactive Lines:          57
   Executable Code Lines:   231
   Declarative Code Lines:  231
   Execution Statements:    2
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
   Units                    1

ps_kafka_facade.cpp
   Lines:                   67
   Comment Lines:           10
   Blank Lines:             14
   Preprocessor Lines:      3
   Code Lines:              40
   Inactive Lines:          0
   Executable Code Lines:   18
   Declarative Code Lines:  13
   Execution Statements:    16
   Declaration Statements:  18
   Ratio Comment/Code:      0.25
   Units                    5

test_cci_daemon.cpp
   Lines:                   15
   Comment Lines:           2
   Blank Lines:             6
   Preprocessor Lines:      1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  2
   Ratio Comment/Code:      0.33
   Units                    1

test_shared_lib.cpp
   Lines:                   54
   Comment Lines:           16
   Blank Lines:             10
   Preprocessor Lines:      7
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  3
   Execution Statements:    8
   Declaration Statements:  4
   Ratio Comment/Code:      0.76
   Units                    2
                                                                     Page 130
                          File Average Metrics Report
===============================================================================

cci_daemon.cpp
   Cyclomatic                         4
   Modified                           3
   Strict                             4
   Essential                          2
   Lines                              19
   Code                               15
   Comment                            1
   Blank                              3

cci_daemon.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

cci_daemon_engine.cpp
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

cci_daemon_generic.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

cci_daemon_kernel.h
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              9
   Code                               8
   Comment                            0
   Blank                              1

cci_daemon_main.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              32
   Code                               20
   Comment                            1
   Blank                              11
                                                                     Page 131
                          File Average Metrics Report
===============================================================================

cci_daemon_plugin.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               2
   Comment                            0
   Blank                              0

cci_daemon_plugin.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              2
   Code                               2
   Comment                            0
   Blank                              0

cci_pub_and_sub.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

cci_shared_lib.h
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              11
   Code                               9
   Comment                            1
   Blank                              1

cci_stack_trace.cpp
   Cyclomatic                         4
   Modified                           4
   Strict                             5
   Essential                          3
   Lines                              38
   Code                               26
   Comment                            6
   Blank                              6

cci_stack_trace.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0
                                                                     Page 132
                          File Average Metrics Report
===============================================================================

cci_test_daemon.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

CMakeCCompilerId.c
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              23
   Code                               11
   Comment                            0
   Blank                              0

CMakeCXXCompilerId.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              21
   Code                               10
   Comment                            0
   Blank                              0

feature_tests.c
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              1
   Code                               1
   Comment                            0
   Blank                              0

feature_tests.cxx
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              1
   Code                               1
   Comment                            0
   Blank                              0

ps_kafka_facade.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              7
   Code                               6
   Comment                            1
   Blank                              0
                                                                     Page 133
                          File Average Metrics Report
===============================================================================

test_cci_daemon.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              7
   Code                               5
   Comment                            0
   Blank                              2

test_shared_lib.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              19
   Code                               10
   Comment                            7
   Blank                              2
                                                                     Page 134
                              Class Metrics Report
===============================================================================
cci_daemon_impl::cci_daemon_facade:
  Lines                     97
  Lines Blank               17
  Lines Code                54
  Lines Comment             27
  Average Lines              1
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.50

cci_daemon_impl::cci_daemon_kernel:
  Lines                     54
  Lines Blank               12
  Lines Code                34
  Lines Comment              8
  Average Lines              9
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.24

cci_daemon_impl::cci_daemon_plugin:
  Lines                     58
  Lines Blank               13
  Lines Code                35
  Lines Comment             10
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

cci_daemon_impl::cci_shared_lib:
  Lines                      9
  Lines Blank                2
  Lines Code                 5
  Lines Comment              2
  Average Lines              1
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.40

cci_daemon_impl::daemon_proc:
  Lines                     12
  Lines Blank                0
  Lines Code                12
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

                                                                     Page 135
                              Class Metrics Report
===============================================================================
cci_daemon_impl::ps_kafka_facade:
  Lines                     24
  Lines Blank                6
  Lines Code                15
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.20

cci_daemon_impl::publish_and_subscribe:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

cci_daemon_impl::publish_and_subscribe_server:
  Lines                     69
  Lines Blank               20
  Lines Code                38
  Lines Comment             11
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.29

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer:
  Lines                     24
  Lines Blank                7
  Lines Code                12
  Lines Comment              5
  Average Lines              2
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.42

cci_daemon_impl::service_proc:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

                                                                     Page 136
                            Class OO Metrics Report
===============================================================================
cci_daemon_impl::cci_daemon_facade:
  LCOM   (Percent Lack of Cohesion)        97
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            24
  NIM    (Count of Instance Methods)       24
  NIV    (Count of Instance Variables)      7
  WMC    (Count of Methods)                24

cci_daemon_impl::cci_daemon_kernel:
  LCOM   (Percent Lack of Cohesion)        80
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             5
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 5

cci_daemon_impl::cci_daemon_plugin:
  LCOM   (Percent Lack of Cohesion)        77
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             7
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      5
  WMC    (Count of Methods)                 7

cci_daemon_impl::cci_shared_lib:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             4
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

cci_daemon_impl::daemon_proc:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             0
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      9
  WMC    (Count of Methods)                 0

                                                                     Page 137
                            Class OO Metrics Report
===============================================================================
cci_daemon_impl::ps_kafka_facade:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             4
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

cci_daemon_impl::publish_and_subscribe:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             0
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

cci_daemon_impl::publish_and_subscribe_server:
  LCOM   (Percent Lack of Cohesion)        40
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             5
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 5

cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer:
  LCOM   (Percent Lack of Cohesion)       100
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             4
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

cci_daemon_impl::service_proc:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             0
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 0

                                                                     Page 138
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

cci_daemon.cpp                                                         Line
    buffer                                                              268
    fd                                                                   39
    fd                                                                  267
    fl                                                                  252
    fp                                                                  213
    loc                                                                 162
    m                                                                   187
    maxfd                                                                39
    sa                                                                  357
    str                                                                 214
    t                                                                   161
    timestamp                                                           160

cci_daemon_plugin.cpp                                                  Line
    cerr                                                                 19
    cerr                                                                 26
    cerr                                                                 30
    cerr                                                                 34
    cerr                                                                 42

cci_stack_trace.cpp                                                    Line
    addrlist                                                             15
    dlip                                                                106
    status                                                               64

ps_kafka_facade.cpp                                                    Line
    elem                                                                 59

test_shared_lib.cpp                                                    Line
    exception                                                            26

cci_daemon.h                                                           Line
    array                                                               198
    m_b_opened                                                          104
    m_backtrace                                                         108
    m_dw_flags                                                          102
    m_log_fp                                                            103
    m_service_proc                                                      105
    m_str_conf                                                          106
    m_str_pid_path                                                      107
    dp_change_to_root_dir                                                49
    dp_clear_file_create_mask                                            48
    dp_close_all_open_files                                              50
    dp_daemonized                                                        52
    dp_error                                                             53
    dp_fork_no_session_leader                                            46
    dp_make_session_leader                                               47
    dp_reopen_streams_dev_null                                           51
    sp_kafka_metadata                                                    59
    size                                                                199

cci_daemon_kernel.h                                                    Line
    m_loaded_plugins                                                     42
                                                                     Page 139
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================
    m_pb_server                                                          43
    elem                                                                 73

cci_daemon_plugin.h                                                    Line
    clear_context_address                                                48
    get_engine_version_address                                           46
    m_str_filename                                                       39
    register_plugin_address                                              47

cci_pub_and_sub.h                                                      Line
    m_str_moniker                                                        37
    elem                                                                 74

cci_shared_lib.h                                                       Line
    m_str_libpath                                                        47
                                                                     Page 140
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

CMakeCCompilerId.c                                                            Line
    main - Function                                                            538

CMakeCXXCompilerId.cpp                                                        Line
    info_arch - Global Object                                                  496
    main - Function                                                            513

feature_tests.c                                                               Line
    main - Function                                                             34

feature_tests.cxx                                                             Line
    main - Function                                                            405

cci_daemon.cpp                                                                Line
    cci_daemon_facade - Public Function                                         20
    daemon_default_exec - Public Function                                      334
    daemonize - Public Function                                                 37
    ~cci_daemon_facade - Public Function                                        31
    dw_flags - Parameter                                                       334
      Declared in: cci_daemon_facade::daemon_default_exec()
    m_backtrace - Function                                                      25
    m_service_proc - Function                                                   22
    m_str_conf - Function                                                       23
    m_str_pid_path - Function                                                   24
    params - Parameter                                                         334
      Declared in: cci_daemon_facade::daemon_default_exec()
    ret - Local Object                                                          96

cci_daemon_main.cpp                                                           Line
    argc - Parameter                                                            11
      Declared in: main()
    argv - Parameter                                                            11
      Declared in: main()
    main - Function                                                             11

cci_daemon_plugin.cpp                                                         Line
    clear_context_address - Function                                            15
    clear_context_address - Global Object                                       31
    filename - Parameter                                                        12
      Declared in: cci_daemon_impl::cci_daemon_plugin::cci_daemon_plugin()
    get_engine_version_address - Function                                       13
    get_engine_version_address - Global Object                                  23
    m_str_filename - Function                                                   12
    register_plugin_address - Function                                          14
    register_plugin_address - Global Object                                     27
    cerr - Public Object                                                        26
    cerr - Public Object                                                        30
    cerr - Public Object                                                        34
    cerr - Public Object                                                        42

ps_kafka_facade.cpp                                                           Line
    clear_context - Function                                                    52
    get_engine_version - Function                                               42
    open_broker - Public Function                                               31
                                                                     Page 141
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    register_plugin - Function                                                  43
    config - Parameter                                                          28
      Declared in: cci_daemon_impl::ps_kafka_facade::can_open_broker()

test_cci_daemon.cpp                                                           Line
    main - Function                                                              9

test_shared_lib.cpp                                                           Line
    argc - Parameter                                                            34
      Declared in: main()
    argv - Parameter                                                            34
      Declared in: main()
    main - Function                                                             34
    try_open_server - Function                                                  16

cci_daemon.h                                                                  Line
    _bt - Protected Function                                                    96
    _btw - Protected Function                                                   97
    cci_daemon_facade - Public Function                                         76
    config_path - Public Const Function                                        116
    config_path - Public Function                                              122
    flags - Public Const Function                                              113
    flags - Public Function                                                    120
    m_b_opened - Private Object                                                104
    pid_path - Public Const Function                                           117
    pid_path - Public Function                                                 123
    proc - Public Const Function                                               115
    dp_change_to_root_dir - Private Object                                      49
    dp_clear_file_create_mask - Private Object                                  48
    dp_close_all_open_files - Private Object                                    50
    dp_daemonized - Private Object                                              52
    dp_error - Private Object                                                   53
    dp_fork_background_proc - Private Object                                    45
    dp_fork_no_session_leader - Private Object                                  46
    dp_make_session_leader - Private Object                                     47
    dp_reopen_streams_dev_null - Private Object                                 51
    sp_default_service - Private Object                                         58
    sp_kafka_metadata - Private Object                                          59
    sighup_handler - Static Function                                           183
    sigsev_handler - Static Function                                           196
    sigterm_handler - Static Function                                          187
    df - Parameter                                                             160
      Declared in: cci_daemon_impl::operator<<()
    signal - Parameter                                                         183
      Declared in: cci_daemon_impl::sighup_handler()
    signal - Parameter                                                         187
      Declared in: cci_daemon_impl::sigterm_handler()

cci_daemon_kernel.h                                                           Line
    cci_daemon_kernel - Public Function                                         35
    destroy_contexts - Public Function                                          68
    load_plugin - Public Function                                               52

cci_daemon_plugin.h                                                           Line
    clear_context - Public Function                                             58
                                                                     Page 142
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    get_engine_version - Public Const Function                                  53
    m_str_filename - Private Object                                             39
    register_plugin - Public Function                                           56

cci_pub_and_sub.h                                                             Line
    m_str_moniker - Private Object                                              37
    publish_and_subscribe_consumer - Public Function                            29
    publish_and_subscribe_server - Public Function                              50

cci_shared_lib.h                                                              Line
    cci_shared_lib - Explicit Public Function                                   34
    get_function_pointer - Static Function Template                             86
    load - Static Function                                                      57
    m_str_libpath - Global Object                                               47
    unload - Static Function                                                    77
                                                                     Page 143
                             Unused Objects Report
===============================================================================

CMakeCXXCompilerId.cpp
    info_arch                                                           496

cci_daemon.cpp
    dw_flags                                                            334
    params                                                              334
    ret                                                                  96

cci_daemon_main.cpp
    argc                                                                 11
    argv                                                                 11

cci_daemon_plugin.cpp
    clear_context_address                                                31
    filename                                                             12
    get_engine_version_address                                           23
    register_plugin_address                                              27
    std::cerr                                                            26
    std::cerr                                                            30
    std::cerr                                                            34
    std::cerr                                                            42

ps_kafka_facade.cpp
    config                                                               28

test_shared_lib.cpp
    argc                                                                 34
    argv                                                                 34

cci_daemon.h
    cci_daemon_impl::cci_daemon_facade::m_b_opened                      104
    cci_daemon_impl::daemon_proc::dp_change_to_root_dir                  49
    cci_daemon_impl::daemon_proc::dp_clear_file_create_mask              48
    cci_daemon_impl::daemon_proc::dp_close_all_open_files                50
    cci_daemon_impl::daemon_proc::dp_daemonized                          52
    cci_daemon_impl::daemon_proc::dp_error                               53
    cci_daemon_impl::daemon_proc::dp_fork_background_proc                45
    cci_daemon_impl::daemon_proc::dp_fork_no_session_leader              46
    cci_daemon_impl::daemon_proc::dp_make_session_leader                 47
    cci_daemon_impl::daemon_proc::dp_reopen_streams_dev_null             51
    cci_daemon_impl::service_proc::sp_default_service                    58
    cci_daemon_impl::service_proc::sp_kafka_metadata                     59
    df                                                                  160
    signal                                                              183
    signal                                                              187

cci_daemon_plugin.h
    cci_daemon_impl::cci_daemon_plugin::m_str_filename                   39

cci_pub_and_sub.h
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::m_str_moniker 37

cci_shared_lib.h
    cci_daemon_impl::m_str_libpath                                       47
                                                                     Page 144
                              Unused Types Report
===============================================================================

ps_kafka_facade.cpp
    cci_daemon_impl::ps_kafka_facade           16

cci_daemon.h
    cci_daemon_impl::daemon_proc               43

cci_pub_and_sub.h
    cci_daemon_impl::publish_and_subscribe     14
                                                                     Page 145
                          Unused Program Units Report
===============================================================================

CMakeCCompilerId.c
    main                                                                538

CMakeCXXCompilerId.cpp
    main                                                                513

feature_tests.c
    main                                                                 34

feature_tests.cxx
    main                                                                405

cci_daemon.cpp
    cci_daemon_facade::cci_daemon_facade                                 20
    cci_daemon_facade::daemon_default_exec                              334
    cci_daemon_facade::daemonize                                         37
    cci_daemon_facade::~cci_daemon_facade                                31
    m_backtrace                                                          25
    m_service_proc                                                       22
    m_str_conf                                                           23
    m_str_pid_path                                                       24

cci_daemon_main.cpp
    main                                                                 11

cci_daemon_plugin.cpp
    clear_context_address                                                15
    get_engine_version_address                                           13
    m_str_filename                                                       12
    register_plugin_address                                              14

ps_kafka_facade.cpp
    cci_daemon_impl::clear_context                                       52
    cci_daemon_impl::get_engine_version                                  42
    cci_daemon_impl::ps_kafka_facade::open_broker                        31
    cci_daemon_impl::register_plugin                                     43

test_cci_daemon.cpp
    main                                                                  9

test_shared_lib.cpp
    main                                                                 34
    try_open_server                                                      16

cci_daemon.h
    cci_daemon_impl::cci_daemon_facade::_bt                              96
    cci_daemon_impl::cci_daemon_facade::_btw                             97
    cci_daemon_impl::cci_daemon_facade::cci_daemon_facade                76
    cci_daemon_impl::cci_daemon_facade::config_path                     116
    cci_daemon_impl::cci_daemon_facade::config_path                     122
    cci_daemon_impl::cci_daemon_facade::flags                           113
    cci_daemon_impl::cci_daemon_facade::flags                           120
    cci_daemon_impl::cci_daemon_facade::pid_path                        117
    cci_daemon_impl::cci_daemon_facade::pid_path                        123
    cci_daemon_impl::cci_daemon_facade::proc                            115
                                                                     Page 146
                          Unused Program Units Report
===============================================================================
    cci_daemon_impl::sighup_handler                                     183
    cci_daemon_impl::sigsev_handler                                     196
    cci_daemon_impl::sigterm_handler                                    187

cci_daemon_kernel.h
    cci_daemon_impl::cci_daemon_kernel::cci_daemon_kernel                35
    cci_daemon_impl::cci_daemon_kernel::destroy_contexts                 68
    cci_daemon_impl::cci_daemon_kernel::load_plugin                      52

cci_daemon_plugin.h
    cci_daemon_impl::cci_daemon_plugin::clear_context                    58
    cci_daemon_impl::cci_daemon_plugin::get_engine_version               53
    cci_daemon_impl::cci_daemon_plugin::register_plugin                  56

cci_pub_and_sub.h
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::publish_and_subscribe_consumer 29
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_consumer::~publish_and_subscribe_consumer 31
    cci_daemon_impl::publish_and_subscribe_server::publish_and_subscribe_server 50
    cci_daemon_impl::publish_and_subscribe_server::~publish_and_subscribe_server 53

cci_shared_lib.h
    cci_daemon_impl::cci_shared_lib::cci_shared_lib                      34
    cci_daemon_impl::get_function_pointer                                86
    cci_daemon_impl::load                                                57
    cci_daemon_impl::unload                                              77
